WARNING: --write-unchanged-files/-W implies -w.
lib2to3.main: Output in 'ipkissat3' will mirror the input directory 'ipkiss24' layout.
RefactoringTool: Skipping optional fixer: buffer
RefactoringTool: Skipping optional fixer: idioms
RefactoringTool: Skipping optional fixer: set_literal
RefactoringTool: Skipping optional fixer: ws_comma
RefactoringTool: No changes to ipkiss24\dependencies\__init__.py
RefactoringTool: Writing converted ipkiss24\dependencies\__init__.py to ipkissat3\dependencies\__init__.py.
RefactoringTool: No changes to ipkiss24\dependencies\bitarray_wrapper.py
RefactoringTool: Writing converted ipkiss24\dependencies\bitarray_wrapper.py to ipkissat3\dependencies\bitarray_wrapper.py.
RefactoringTool: Refactored ipkiss24\dependencies\caphe_wrapper.py
RefactoringTool: Writing converted ipkiss24\dependencies\caphe_wrapper.py to ipkissat3\dependencies\caphe_wrapper.py.
RefactoringTool: No changes to ipkiss24\dependencies\log.py
RefactoringTool: Writing converted ipkiss24\dependencies\log.py to ipkissat3\dependencies\log.py.
RefactoringTool: Refactored ipkiss24\dependencies\matplotlib_wrapper.py
RefactoringTool: Writing converted ipkiss24\dependencies\matplotlib_wrapper.py to ipkissat3\dependencies\matplotlib_wrapper.py.
RefactoringTool: No changes to ipkiss24\dependencies\mayavi_wrapper.py
RefactoringTool: Writing converted ipkiss24\dependencies\mayavi_wrapper.py to ipkissat3\dependencies\mayavi_wrapper.py.
RefactoringTool: No changes to ipkiss24\dependencies\meep_wrapper.py
RefactoringTool: Writing converted ipkiss24\dependencies\meep_wrapper.py to ipkissat3\dependencies\meep_wrapper.py.
RefactoringTool: No changes to ipkiss24\dependencies\pil_wrapper.py
RefactoringTool: Writing converted ipkiss24\dependencies\pil_wrapper.py to ipkissat3\dependencies\pil_wrapper.py.
RefactoringTool: Refactored ipkiss24\dependencies\povray_wrapper.py
RefactoringTool: Writing converted ipkiss24\dependencies\povray_wrapper.py to ipkissat3\dependencies\povray_wrapper.py.
RefactoringTool: Refactored ipkiss24\dependencies\shapely_wrapper.py
--- ipkiss24\dependencies\caphe_wrapper.py	(original)
+++ ipkiss24\dependencies\caphe_wrapper.py	(refactored)
@@ -21,8 +21,8 @@
 
 try:
     from caphe import *
-except ImportError, e:
-    print "*************************** DEPENDENCY NOT FOUND **************************************************************************************** "
-    print "**** MODULE CAPHE COULD NOT BE FOUND, PLEASE INSTALL IT                                                                             *** "    
-    print "***************************************************************************************************************************************** "
+except ImportError as e:
+    print("*************************** DEPENDENCY NOT FOUND **************************************************************************************** ")
+    print("**** MODULE CAPHE COULD NOT BE FOUND, PLEASE INSTALL IT                                                                             *** ")    
+    print("***************************************************************************************************************************************** ")
     
--- ipkiss24\dependencies\matplotlib_wrapper.py	(original)
+++ ipkiss24\dependencies\matplotlib_wrapper.py	(refactored)
@@ -19,7 +19,7 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-import Tkinter as Tk
+import tkinter as Tk
 from sys import stderr
 try:
     import matplotlib as matplotlib
@@ -44,12 +44,12 @@
     
     pyplot.ion()
 
-except ImportError, e:
-    print >> stderr, "*************************** DEPENDENCY NOT FOUND **************************************************************************************** "
-    print >> stderr, "**** MODULE MATPLOTLIB COULD NOT BE FOUND, PLEASE INSTALL IT                                                                          *** "
-    print >> stderr, "**** On Windows, download from :                                                                                                      *** "
-    print >> stderr, "****         http://sourceforge.net/projects/matplotlib/files/matplotlib/matplotlib-0.99.3/matplotlib-0.99.3.win32-py2.6.exe/download *** "
-    print >> stderr, "**** On Linux : sudo apt-get install python-matplotlib                                                                                *** "
-    print >> stderr, "***************************************************************************************************************************************** "
+except ImportError as e:
+    print("*************************** DEPENDENCY NOT FOUND **************************************************************************************** ", file=stderr)
+    print("**** MODULE MATPLOTLIB COULD NOT BE FOUND, PLEASE INSTALL IT                                                                          *** ", file=stderr)
+    print("**** On Windows, download from :                                                                                                      *** ", file=stderr)
+    print("****         http://sourceforge.net/projects/matplotlib/files/matplotlib/matplotlib-0.99.3/matplotlib-0.99.3.win32-py2.6.exe/download *** ", file=stderr)
+    print("**** On Linux : sudo apt-get install python-matplotlib                                                                                *** ", file=stderr)
+    print("***************************************************************************************************************************************** ", file=stderr)
     
     
--- ipkiss24\dependencies\povray_wrapper.py	(original)
+++ ipkiss24\dependencies\povray_wrapper.py	(refactored)
@@ -100,7 +100,7 @@
         opt.write(file)
       else:
         file.writeln( str(opt) )
-    for key,val in self.kwargs.items():
+    for key,val in list(self.kwargs.items()):
       if type(val)==tuple or type(val)==list:
         val = Vector(*val)
         file.writeln( "%s %s"%(key,val) )
--- ipkiss24\dependencies\shapely_wrapper.py	(original)
+++ ipkiss24\dependencies\shapely_wrapper.py	(refactored)
@@ -32,30 +32,30 @@
     from shapely.geometry.collection import GeometryCollection
     from shapely.geos import TopologicalError
 
-except ImportError, e:
-    print >> stderr, "*************************** DEPENDENCY NOT FOUND **************************************************************************************** "
-    print >> stderr, "**** MODULE SHAPELY COULD NOT BE FOUND, PLEASE INSTALL IT                                                                             *** "
-    print >> stderr, "**** On Windows, download from :                                                                                                      *** "
-    print >> stderr, "****         http://gispython.org/dist/Shapely-1.2.1.win32.exe                                                                        *** "
-    print >> stderr, "**** On Linux :                                                                                                                       *** "
-    print >> stderr, "****         install from source (version 1.2.1 needed) :                                                                             *** "
-    print >> stderr, "****         http://pypi.python.org/packages/source/S/Shapely/Shapely-1.2.1.tar.gz#md5=da54c772443bd0398aa588e0f3e9c190               *** "
-    print >> stderr, "***************************************************************************************************************************************** "
+except ImportError as e:
+    print("*************************** DEPENDENCY NOT FOUND **************************************************************************************** ", file=stderr)
+    print("**** MODULE SHAPELY COULD NOT BE FOUND, PLEASE INSTALL IT                                                                             *** ", file=stderr)
+    print("**** On Windows, download from :                                                                                                      *** ", file=stderr)
+    print("****         http://gispython.org/dist/Shapely-1.2.1.win32.exe                                                                        *** ", file=stderr)
+    print("**** On Linux :                                                                                                                       *** ", file=stderr)
+    print("****         install from source (version 1.2.1 needed) :                                                                             *** ", file=stderr)
+    print("****         http://pypi.python.org/packages/source/S/Shapely/Shapely-1.2.1.tar.gz#md5=da54c772443bd0398aa588e0f3e9c190               *** ", file=stderr)
+    print("***************************************************************************************************************************************** ", file=stderr)
 
 
 
 try:
     from descartes import PolygonPatch
 
-except ImportError, e:
-    print >> stderr, "*************************** DEPENDENCY NOT FOUND **************************************************************************************** "
-    print >> stderr, "**** MODULE DESCARTES COULD NOT BE FOUND, PLEASE INSTALL IT                                                                           *** "
-    print >> stderr, "**** On both Windows and Linux, install from source as follows:                                                                       *** "  
-    print >> stderr, "****         * download from : http://pypi.python.org/packages/source/d/descartes/descartes-1.0.tar.gz                                *** "                                   
-    print >> stderr, "****         * extract it. On Windows, you can use 7-zip (available at www.7-zip.org)                                                 *** "
-    print >> stderr, "****         * run the following command in the directory where you extracted the file :                                              *** "                                                                             
-    print >> stderr, "****                    python setup.py install                                                                                       *** "RefactoringTool: Writing converted ipkiss24\dependencies\shapely_wrapper.py to ipkissat3\dependencies\shapely_wrapper.py.
RefactoringTool: Refactored ipkiss24\dependencies\tvtk_wrapper.py
RefactoringTool: Writing converted ipkiss24\dependencies\tvtk_wrapper.py to ipkissat3\dependencies\tvtk_wrapper.py.
RefactoringTool: No changes to ipkiss24\descartes\__init__.py
RefactoringTool: Writing converted ipkiss24\descartes\__init__.py to ipkissat3\descartes\__init__.py.
RefactoringTool: No changes to ipkiss24\descartes\patch.py
RefactoringTool: Writing converted ipkiss24\descartes\patch.py to ipkissat3\descartes\patch.py.
RefactoringTool: No changes to ipkiss24\genericpdk\__init__.py
RefactoringTool: Writing converted ipkiss24\genericpdk\__init__.py to ipkissat3\genericpdk\__init__.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\__init__.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\__init__.py to ipkissat3\genericpdk\library\__init__.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\fibcoup.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\fibcoup.py to ipkissat3\genericpdk\library\fibcoup.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\logos.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\logos.py to ipkissat3\genericpdk\library\logos.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\constants\__init__.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\constants\__init__.py to ipkissat3\genericpdk\library\constants\__init__.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\constants\mathematics.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\constants\mathematics.py to ipkissat3\genericpdk\library\constants\mathematics.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\constants\physical.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\constants\physical.py to ipkissat3\genericpdk\library\constants\physical.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\constants\units.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\constants\units.py to ipkissat3\genericpdk\library\constants\units.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\io\__init__.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\io\__init__.py to ipkissat3\genericpdk\library\io\__init__.py.
RefactoringTool: Refactored ipkiss24\genericpdk\library\io\column.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\io\column.py to ipkissat3\genericpdk\library\io\column.py.
RefactoringTool: No changes to ipkiss24\genericpdk\library\io\constants.py
RefactoringTool: Writing converted ipkiss24\genericpdk\library\io\constants.py to ipkissat3\genericpdk\library\io\constants.py.
RefactoringTool: No changes to ipkiss24\genericpdk\materials\__init__.py
RefactoringTool: Writing converted ipkiss24\genericpdk\materials\__init__.py to ipkissat3\genericpdk\materials\__init__.py.
RefactoringTool: No changes to ipkiss24\genericpdk\materials\materials.py
RefactoringTool: Writing converted ipkiss24\genericpdk\materials\materials.py to ipkissat3\genericpdk\materials\materials.py.
RefactoringTool: No changes to ipkiss24\ipcore\__init__.py
RefactoringTool: Writing converted ipkiss24\ipcore\__init__.py to ipkissat3\ipcore\__init__.py.
RefactoringTool: Refactored ipkiss24\ipcore\all.py
RefactoringTool: Writing converted ipkiss24\ipcore\all.py to ipkissat3\ipcore\all.py.
RefactoringTool: Refactored ipkiss24\ipcore\helperfunc.py
RefactoringTool: Writing converted ipkiss24\ipcore\helperfunc.py to ipkissat3\ipcore\helperfunc.py.
RefactoringTool: No changes to ipkiss24\ipcore\log.py
RefactoringTool: Writing converted ipkiss24\ipcore\log.py to ipkissat3\ipcore\log.py.
RefactoringTool: No changes to ipkiss24\ipcore\settings.py
RefactoringTool: Writing converted ipkiss24\ipcore\settings.py to ipkissat3\ipcore\settings.py.
RefactoringTool: No changes to ipkiss24\ipcore\types_list.py
RefactoringTool: Writing converted ipkiss24\ipcore\types_list.py to ipkissat3\ipcore\types_list.py.
RefactoringTool: No changes to ipkiss24\ipcore\caching\__init__.py
RefactoringTool: Writing converted ipkiss24\ipcore\caching\__init__.py to ipkissat3\ipcore\caching\__init__.py.
RefactoringTool: Refactored ipkiss24\ipcore\caching\cache.py
RefactoringTool: Writing converted ipkiss24\ipcore\caching\cache.py to ipkissat3\ipcore\caching\cache.py.
RefactoringTool: No changes to ipkiss24\ipcore\config\__init__.py
RefactoringTool: Writing converted ipkiss24\ipcore\config\__init__.py to ipkissat3\ipcore\config\__init__.py.
RefactoringTool: Refactored ipkiss24\ipcore\config\tree.py
RefactoringTool: Writing converted ipkiss24\ipcore\config\tree.py to ipkissat3\ipcore\config\tree.py.
RefactoringTool: No changes to ipkiss24\ipcore\exceptions\__init__.py
RefactoringTool: Writing converted ipkiss24\ipcore\exceptions\__init__.py to ipkissat3\ipcore\exceptions\__init__.py.
RefactoringTool: No changes to ipkiss24\ipcore\exceptions\exc.py
RefactoringTool: Writing converted ipkiss24\ipcore\exceptions\exc.py to ipkissat3\ipcore\exceptions\exc.py.
RefactoringTool: No changes to ipkiss24\ipcore\mixin\__init__.py
RefactoringTool: Writing converted ipkiss24\ipcore\mixin\__init__.py to ipkissat3\ipcore\mixin\__init__.py.
RefactoringTool: Refactored ipkiss24\ipcore\mixin\mixin.py
RefactoringTool: Writing converted ipkiss24\ipcore\mixin\mixin.py to ipkissat3\ipcore\mixin\mixin.py.
RefactoringTool: No changes to ipkiss24\ipcore\properties\__init__.py
RefactoringTool: Writing converted ipkiss24\ipcore\properties\__init__.py to ipkissat3\ipcore\properties\__init__.py.
RefactoringTool: Refactored ipkiss24\ipcore\properties\descriptor.py

-    print >> stderr, "***************************************************************************************************************************************** "
+except ImportError as e:
+    print("*************************** DEPENDENCY NOT FOUND **************************************************************************************** ", file=stderr)
+    print("**** MODULE DESCARTES COULD NOT BE FOUND, PLEASE INSTALL IT                                                                           *** ", file=stderr)
+    print("**** On both Windows and Linux, install from source as follows:                                                                       *** ", file=stderr)  
+    print("****         * download from : http://pypi.python.org/packages/source/d/descartes/descartes-1.0.tar.gz                                *** ", file=stderr)                                   
+    print("****         * extract it. On Windows, you can use 7-zip (available at www.7-zip.org)                                                 *** ", file=stderr)
+    print("****         * run the following command in the directory where you extracted the file :                                              *** ", file=stderr)                                                                             
+    print("****                    python setup.py install                                                                                       *** ", file=stderr)
+    print("***************************************************************************************************************************************** ", file=stderr)
 
 
 
@@ -107,7 +107,7 @@
                     interior_start_point = interior.coords[0]
                     result_points.append(interior_start_point)
                     interior_start_point_coord2 = Coord2(interior_start_point)
-                    dist = sys.maxint
+                    dist = sys.maxsize
                     exterior_point_index = -1
                     for exterior_point in g_exterior_coords_list:
                         exterior_point_index = exterior_point_index + 1
@@ -270,7 +270,7 @@
             p2 = self.__do_cascaded_union__(my_georep)	    
             try:
                 diff_p = p2.difference(p1)    
-            except TopologicalError, err:
+            except TopologicalError as err:
                 if isinstance(p1, MultiPolygon):
                     diffs = []
                     for p1pol in p1.geoms:
--- ipkiss24\dependencies\tvtk_wrapper.py	(original)
+++ ipkiss24\dependencies\tvtk_wrapper.py	(refactored)
@@ -23,11 +23,11 @@
 try:
     from tvtk.api import tvtk
 
-except ImportError, e:
-    print >> stderr, "*************************** DEPENDENCY NOT FOUND **************************************************************************************** "
-    print >> stderr, "**** MODULE TVTK COULD NOT BE FOUND, PLEASE INSTALL IT                                                                                *** "
-    print >> stderr, "****                                                                                                                                  *** "
-    print >> stderr, "****     it is part of the Entought Python distribution (you might need to install a more recent version)                             *** "
-    print >> stderr, "***************************************************************************************************************************************** "
+except ImportError as e:
+    print("*************************** DEPENDENCY NOT FOUND **************************************************************************************** ", file=stderr)
+    print("**** MODULE TVTK COULD NOT BE FOUND, PLEASE INSTALL IT                                                                                *** ", file=stderr)
+    print("****                                                                                                                                  *** ", file=stderr)
+    print("****     it is part of the Entought Python distribution (you might need to install a more recent version)                             *** ", file=stderr)
+    print("***************************************************************************************************************************************** ", file=stderr)
     
     
--- ipkiss24\genericpdk\library\io\column.py	(original)
+++ ipkiss24\genericpdk\library\io\column.py	(refactored)
@@ -21,7 +21,7 @@
 
 from ipkiss.all import *
 from picazzo.io.column import IoColumn, IoColumnGroup
-import constants
+from . import constants
 
 class StdIoColumnGroup(IoColumnGroup):
     y_spacing = PositiveNumberProperty(default = constants.STD_IOCOLUMN_Y_SPACING)    
--- ipkiss24\ipcore\all.py	(original)
+++ ipkiss24\ipcore\all.py	(refactored)
@@ -19,15 +19,15 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from properties.predefined import *
-from properties.descriptor import *
-from properties.restrictions import *
-from properties.initializer import *
-from exceptions.exc import *
-from runtime.processor import __Processor__, __StopCriterium__
-from runtime.processor import ProcessorStopCriterium
-from runtime.procedure import __Procedure__, EMPTY_PROCEDURE
-from helperfunc import *
-from caching.cache import cache
-from config.tree import *
-from types_list import TypedList, TypedListProperty
+from .properties.predefined import *
+from .properties.descriptor import *
+from .properties.restrictions import *
+from .properties.initializer import *
+from .exceptions.exc import *
+from .runtime.processor import __Processor__, __StopCriterium__
+from .runtime.processor import ProcessorStopCriterium
+from .runtime.procedure import __Procedure__, EMPTY_PROCEDURE
+from .helperfunc import *
+from .caching.cache import cache
+from .config.tree import *
+from .types_list import TypedList, TypedListProperty
--- ipkiss24\ipcore\helperfunc.py	(original)
+++ ipkiss24\ipcore\helperfunc.py	(refactored)
@@ -44,7 +44,7 @@
 def extract_kwarg(kwargs, arg_name):
     try:
         arg = kwargs[arg_name]
-    except KeyError, ke:
+    except KeyError as ke:
         raise Exception("Keyword argument '%s' is required but was not found." % arg_name)
     del kwargs[arg_name]
     return arg
--- ipkiss24\ipcore\caching\cache.py	(original)
+++ ipkiss24\ipcore\caching\cache.py	(refactored)
@@ -28,7 +28,7 @@
     """caching decorator: caches the result of a function called on an object"""
     def _cache(function):
         def __cache(*args, **kw):
-            key = hashlib.sha1(function.func_name).hexdigest()
+            key = hashlib.sha1(function.__name__).hexdigest()
             obj = args[0]
             if not hasattr(obj, "__IPCORE_CACHE__"):
                 obj.__IPCORE_CACHE__ = dict()
--- ipkiss24\ipcore\config\tree.py	(original)
+++ ipkiss24\ipcore\config\tree.py	(refactored)
@@ -46,7 +46,7 @@
 
     def __generate_doc__(self, header):
         doc = ""
-        keys = self.__dict__.keys()
+        keys = list(self.__dict__.keys())
         for k in keys:
             value = self.__dict__[k]
             if isinstance(value, ConfigTree):
--- ipkiss24\ipcore\mixin\mixin.py	(original)
+++ ipkiss24\ipcore\mixin\mixin.py	(refactored)
@@ -49,6 +49,5 @@
             cls.mixin_last(mixin_class)
 
 
-class MixinBowl(object):
-    __metaclass__ = MetaMixinBowl
+class MixinBowl(object, metaclass=MetaMixinBowl):
     pass
--- ipkiss24\ipcore\properties\descriptor.py	(original)
+++ ipkiss24\ipcore\properties\descriptor.py	(refactored)
@@ -62,7 +62,7 @@
         else:
             self.__doc__ = ""
 
-        for (k, v) in kwargs.items():
+        for (k, v) in list(kwargs.items()):
             if k in self.__allowed_keyword_arguments__:
                 object.__setattr__(self, k, v)
             else:
@@ -123,7 +123,7 @@
                 clear_cached_values_in_store = (type(old_value) != type(value)) or (old_value != value)
                 if type(clear_cached_values_in_store) == ndarray:
                     clear_cached_values_in_store = clear_cached_values_in_store.all()RefactoringTool: Writing converted ipkiss24\ipcore\properties\descriptor.py to ipkissat3\ipcore\properties\descriptor.py.
RefactoringTool: Refactored ipkiss24\ipcore\properties\initializer.py
RefactoringTool: Writing converted ipkiss24\ipcore\properties\initializer.py to ipkissat3\ipcore\properties\initializer.py.
RefactoringTool: Refactored ipkiss24\ipcore\properties\predefined.py
RefactoringTool: Writing converted ipkiss24\ipcore\properties\predefined.py to ipkissat3\ipcore\properties\predefined.py.
RefactoringTool: No changes to ipkiss24\ipcore\properties\processors.py
RefactoringTool: Writing converted ipkiss24\ipcore\properties\processors.py to ipkissat3\ipcore\properties\processors.py.
RefactoringTool: Refactored ipkiss24\ipcore\properties\restrictions.py
RefactoringTool: Writing converted ipkiss24\ipcore\properties\restrictions.py to ipkissat3\ipcore\properties\restrictions.py.
RefactoringTool: No changes to ipkiss24\ipcore\runtime\__init__.py
RefactoringTool: Writing converted ipkiss24\ipcore\runtime\__init__.py to ipkissat3\ipcore\runtime\__init__.py.
RefactoringTool: No changes to ipkiss24\ipcore\runtime\procedure.py
RefactoringTool: Writing converted ipkiss24\ipcore\runtime\procedure.py to ipkissat3\ipcore\runtime\procedure.py.
RefactoringTool: No changes to ipkiss24\ipcore\runtime\processor.py
RefactoringTool: Writing converted ipkiss24\ipcore\runtime\processor.py to ipkissat3\ipcore\runtime\processor.py.
RefactoringTool: Refactored ipkiss24\ipkiss\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\__init__.py to ipkissat3\ipkiss\__init__.py.
RefactoringTool: Refactored ipkiss24\ipkiss\all.py
RefactoringTool: Writing converted ipkiss24\ipkiss\all.py to ipkissat3\ipkiss\all.py.
RefactoringTool: No changes to ipkiss24\ipkiss\constants.py
RefactoringTool: Writing converted ipkiss24\ipkiss\constants.py to ipkissat3\ipkiss\constants.py.
RefactoringTool: No changes to ipkiss24\ipkiss\log.py
RefactoringTool: Writing converted ipkiss24\ipkiss\log.py to ipkissat3\ipkiss\log.py.
RefactoringTool: No changes to ipkiss24\ipkiss\settings.py
RefactoringTool: Writing converted ipkiss24\ipkiss\settings.py to ipkissat3\ipkiss\settings.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\__init__.py to ipkissat3\ipkiss\aspects\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\aspect.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\aspect.py to ipkissat3\ipkiss\aspects\aspect.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\layout\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\layout\__init__.py to ipkissat3\ipkiss\aspects\layout\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\layout\layout.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\layout\layout.py to ipkissat3\ipkiss\aspects\layout\layout.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\output\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\output\__init__.py to ipkissat3\ipkiss\aspects\output\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\output\output.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\output\output.py to ipkissat3\ipkiss\aspects\output\output.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\port\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\port\__init__.py to ipkissat3\ipkiss\aspects\port\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\port\aspect.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\port\aspect.py to ipkissat3\ipkiss\aspects\port\aspect.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\port\port.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\port\port.py to ipkissat3\ipkiss\aspects\port\port.py.
RefactoringTool: No changes to ipkiss24\ipkiss\aspects\port\port_list.py
RefactoringTool: Writing converted ipkiss24\ipkiss\aspects\port\port_list.py to ipkissat3\ipkiss\aspects\port\port_list.py.
RefactoringTool: Refactored ipkiss24\ipkiss\boolean_ops\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\boolean_ops\__init__.py to ipkissat3\ipkiss\boolean_ops\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\boolean_ops\boolean_ops.py
RefactoringTool: Writing converted ipkiss24\ipkiss\boolean_ops\boolean_ops.py to ipkissat3\ipkiss\boolean_ops\boolean_ops.py.
RefactoringTool: Refactored ipkiss24\ipkiss\boolean_ops\boolean_ops_elements.py

-            except ValueError, e:  # precaution... if exceptionally this would occur because the comparison between old_value and value cannot be done, then clear caches anyway...
+            except ValueError as e:  # precaution... if exceptionally this would occur because the comparison between old_value and value cannot be done, then clear caches anyway...
                 clear_cached_values_in_store = True
         obj.__store__[self.__name__] = (value, SET_EXTERNALLY)
         if not(obj.flag_busy_initializing):
@@ -210,7 +210,7 @@
         if self.preprocess is not None:
             try:
                 new_value = self.preprocess(value, obj)
-            except ProcessorException, e:
+            except ProcessorException as e:
                 LOG.info("RestrictedProperty::__set__ : an error was raised on self.preprocess : %s" % str(e))
                 if (value is None) and not self.allow_none:
                     raise IpcorePropertyDescriptorException("Invalid assignment for property '%s' of '%s' with value %s" % (self.name, type(obj).__name__, str(value)))
--- ipkiss24\ipcore\properties\initializer.py	(original)
+++ ipkiss24\ipcore\properties\initializer.py	(refactored)
@@ -164,9 +164,7 @@
         return False
 
 
-class PropertyInitializer(MixinBowl):
-    __metaclass__ = MetaPropertyInitializer
-
+class PropertyInitializer(MixinBowl, metaclass=MetaPropertyInitializer):
     def __init__(self, **kwargs):
         self.flag_busy_initializing = True
 
@@ -175,7 +173,7 @@
         props = self.__properties__()
 
         # assign properties
-        for (key, value) in kwargs.items():
+        for (key, value) in list(kwargs.items()):
             if not is_suppressed(value):
                 setattr(self, key, value)
 
@@ -229,7 +227,7 @@
 
     def __clear_cached_values_in_store__(self):  # FIXME: improve performance?
         if (not self.flag_busy_initializing):
-            store_content_flattened = self.__store__.items()
+            store_content_flattened = list(self.__store__.items())
             for (key, item) in store_content_flattened:
                 origin = item[1]
                 if origin == CACHED:
@@ -297,7 +295,7 @@
             try:
                 if (myVal != otherVal):
                     return False
-            except ValueError, e:
+            except ValueError as e:
                 import numpy
                 if isinstance(myVal, numpy.ndarray):
                     if (myVal != otherVal).any():
@@ -356,7 +354,7 @@
         else:
             allow_unmatched_kwargs = False
         props = self.__properties__()
-        for (key, value) in kwargs.items():
+        for (key, value) in list(kwargs.items()):
             if (not key in props) and (not allow_unmatched_kwargs):
                 raise IpcoreAttributeException("Keyword argument '%s' does not match a property of %s." % (key, str(type(self))))
             if not is_suppressed(value):
--- ipkiss24\ipcore\properties\predefined.py	(original)
+++ ipkiss24\ipcore\properties\predefined.py	(refactored)
@@ -29,7 +29,7 @@
 # Predefined Restrictions
 #######################################################
 RESTRICT_INT = restrictions.RestrictType(int)
-RESTRICT_LONG = restrictions.RestrictType(long)
+RESTRICT_LONG = restrictions.RestrictType(int)
 RESTRICT_FLOAT = restrictions.RestrictType(float)
 RESTRICT_NUMBER = restrictions.RestrictType((int, float))
 RESTRICT_COMPLEX = restrictions.RestrictType((int, float, complex))
--- ipkiss24\ipcore\properties\restrictions.py	(original)
+++ ipkiss24\ipcore\properties\restrictions.py	(refactored)
@@ -234,7 +234,7 @@
 class RestrictIterable(__PropertyRestriction__):
 
     def validate(self, value, obj=None):
-        return isinstance(value, basestring) or getattr(value, '__iter__', False)
+        return isinstance(value, str) or getattr(value, '__iter__', False)
 
     def __repr__(self):
         return "Iterable Restriction"
--- ipkiss24\ipkiss\__init__.py	(original)
+++ ipkiss24\ipkiss\__init__.py	(refactored)
@@ -25,7 +25,7 @@
 def initialize():
     from ipkiss.log import IPKISS_LOG as LOG
     from . import settings 
-    print >>sys.stderr, settings.START_MESSAGE
+    print(settings.START_MESSAGE, file=sys.stderr)
     
 
 initialize()
--- ipkiss24\ipkiss\all.py	(original)
+++ ipkiss24\ipkiss\all.py	(refactored)
@@ -22,61 +22,61 @@
 
 import ipkiss.aspects
 
-from constants import *
-from settings import *
+from .constants import *
+from .settings import *
 
 from ipcore.all import *
 from ipkiss.log import IPKISS_LOG as LOG
 
-from geometry.transform import *
-from geometry.transformable import *
-from geometry.transforms.no_distort import *
-from geometry.transforms.translation import *
-from geometry.transforms.rotation import *
-from geometry.transforms.identity import *
-from geometry.transforms.magnification import *
-from geometry.transforms.mirror import *
-from geometry.transforms.stretch import *
-from geometry.coord import *
-from geometry.vector import *
-from geometry.shape import *
-from geometry.line import *
-from geometry.shapes.basic import *
-from geometry.shapes.advanced import *
-from geometry.shape_cut import *
-from geometry.shape_info import *
-from geometry.size_info import *
-from geometry.shape_modify import *
-from geometry.shape_modifier import *
-from geometry.shapes.modifiers import *
-from geometry.shapes.curves import *
+from .geometry.transform import *
+from .geometry.transformable import *
+from .geometry.transforms.no_distort import *
+from .geometry.transforms.translation import *
+from .geometry.transforms.rotation import *
+from .geometry.transforms.identity import *
+from .geometry.transforms.magnification import *
+from .geometry.transforms.mirror import *
+from .geometry.transforms.stretch import *
+from .geometry.coord import *
+from .geometry.vector import *
+from .geometry.shape import *
+from .geometry.line import *
+from .geometry.shapes.basic import *
+from .geometry.shapes.advanced import *
+from .geometry.shape_cut import *
+from .geometry.shape_info import *
+from .geometry.size_info import *
+from .geometry.shape_modify import *
+from .geometry.shape_modifier import *
+from .geometry.shapes.modifiers import *
+from .geometry.shapes.curves import *
 
-from primitives.layer import *
-from primitives.elements import *
-from primitives.fonts import *
-from primitives.library import *
-from primitives.structure import *
+from .primitives.layer import *
+from .primitives.elements import *
+from .primitives.fonts import *
+from .primitives.library import *
+from .primitives.structure import *
 
-from io.import_hpgl import *
-from io.input_gdsii import *
-from io.output import OutputBasic
-from io.output_gdsii import *
-from io.output_object import *
-from io.output_xml import *
-from io.file_io import *
-from io.gds_layer import *
+from .io.import_hpgl import *
+from .io.input_gdsii import *
+from .io.output import OutputBasic
+from .io.output_gdsii import *
+from .io.output_object import *
+from .io.output_xml import *
+from .io.file_io import *
+from .io.gds_layer import *
 
-from process import ProcessProperty, PurposeProperty, PPLayer, ProcessPurposeLayer, ProcessLayer, PatternPurpose
+from .process import ProcessProperty, PurposeProperty, PPLayer, ProcessPurposeLayer, ProcessLayer, PatternPurpose
 
-from technology.settings import get_technology
+from .technology.settings import get_technology
 
 TECH = get_technology()
 
-from exceptions import *
+from .exceptions import *
 
 #from settings import *
 
-from boolean_ops import *
+from .boolean_ops import *
 
 
 
--- ipkiss24\ipkiss\boolean_ops\__init__.py	(original)
+++ ipkiss24\ipkiss\boolean_ops\__init__.py	(refactored)
@@ -19,5 +19,5 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from boolean_ops_shapely import *
-from boolean_ops_elements import *
+from .boolean_ops_shapely import *
+from .boolean_ops_elements import *
--- ipkiss24\ipkiss\boolean_ops\boolean_ops_elements.py	(original)RefactoringTool: Writing converted ipkiss24\ipkiss\boolean_ops\boolean_ops_elements.py to ipkissat3\ipkiss\boolean_ops\boolean_ops_elements.py.
RefactoringTool: No changes to ipkiss24\ipkiss\boolean_ops\boolean_ops_shapely.py
RefactoringTool: Writing converted ipkiss24\ipkiss\boolean_ops\boolean_ops_shapely.py to ipkissat3\ipkiss\boolean_ops\boolean_ops_shapely.py.
RefactoringTool: No changes to ipkiss24\ipkiss\exceptions\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\exceptions\__init__.py to ipkissat3\ipkiss\exceptions\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\exceptions\exc.py
RefactoringTool: Writing converted ipkiss24\ipkiss\exceptions\exc.py to ipkissat3\ipkiss\exceptions\exc.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\__init__.py to ipkissat3\ipkiss\geometry\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\coord.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\coord.py to ipkissat3\ipkiss\geometry\coord.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\line.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\line.py to ipkissat3\ipkiss\geometry\line.py.
RefactoringTool: Refactored ipkiss24\ipkiss\geometry\shape.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shape.py to ipkissat3\ipkiss\geometry\shape.py.
RefactoringTool: Refactored ipkiss24\ipkiss\geometry\shape_cut.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shape_cut.py to ipkissat3\ipkiss\geometry\shape_cut.py.
RefactoringTool: Refactored ipkiss24\ipkiss\geometry\shape_info.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shape_info.py to ipkissat3\ipkiss\geometry\shape_info.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\shape_modifier.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shape_modifier.py to ipkissat3\ipkiss\geometry\shape_modifier.py.
RefactoringTool: Refactored ipkiss24\ipkiss\geometry\shape_modify.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shape_modify.py to ipkissat3\ipkiss\geometry\shape_modify.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\size_info.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\size_info.py to ipkissat3\ipkiss\geometry\size_info.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transform.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transform.py to ipkissat3\ipkiss\geometry\transform.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transformable.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transformable.py to ipkissat3\ipkiss\geometry\transformable.py.
RefactoringTool: Refactored ipkiss24\ipkiss\geometry\vector.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\vector.py to ipkissat3\ipkiss\geometry\vector.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\shapes\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shapes\__init__.py to ipkissat3\ipkiss\geometry\shapes\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\shapes\advanced.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shapes\advanced.py to ipkissat3\ipkiss\geometry\shapes\advanced.py.
RefactoringTool: Refactored ipkiss24\ipkiss\geometry\shapes\basic.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shapes\basic.py to ipkissat3\ipkiss\geometry\shapes\basic.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\shapes\curves.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shapes\curves.py to ipkissat3\ipkiss\geometry\shapes\curves.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\shapes\modifiers.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shapes\modifiers.py to ipkissat3\ipkiss\geometry\shapes\modifiers.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\shapes\spline.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\shapes\spline.py to ipkissat3\ipkiss\geometry\shapes\spline.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\__init__.py to ipkissat3\ipkiss\geometry\transforms\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\identity.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\identity.py to ipkissat3\ipkiss\geometry\transforms\identity.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\magnification.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\magnification.py to ipkissat3\ipkiss\geometry\transforms\magnification.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\mirror.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\mirror.py to ipkissat3\ipkiss\geometry\transforms\mirror.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\no_distort.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\no_distort.py to ipkissat3\ipkiss\geometry\transforms\no_distort.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\rotation.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\rotation.py to ipkissat3\ipkiss\geometry\transforms\rotation.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\special.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\special.py to ipkissat3\ipkiss\geometry\transforms\special.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\stretch.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\stretch.py to ipkissat3\ipkiss\geometry\transforms\stretch.py.
RefactoringTool: No changes to ipkiss24\ipkiss\geometry\transforms\translation.py
RefactoringTool: Writing converted ipkiss24\ipkiss\geometry\transforms\translation.py to ipkissat3\ipkiss\geometry\transforms\translation.py.
RefactoringTool: No changes to ipkiss24\ipkiss\io\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\__init__.py to ipkissat3\ipkiss\io\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\io\collector.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\collector.py to ipkissat3\ipkiss\io\collector.py.
RefactoringTool: No changes to ipkiss24\ipkiss\io\file_io.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\file_io.py to ipkissat3\ipkiss\io\file_io.py.
RefactoringTool: No changes to ipkiss24\ipkiss\io\filetype.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\filetype.py to ipkissat3\ipkiss\io\filetype.py.
RefactoringTool: Refactored ipkiss24\ipkiss\io\gds_layer.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\gds_layer.py to ipkissat3\ipkiss\io\gds_layer.py.
RefactoringTool: No changes to ipkiss24\ipkiss\io\gds_records.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\gds_records.py to ipkissat3\ipkiss\io\gds_records.py.
RefactoringTool: No changes to ipkiss24\ipkiss\io\import_hpgl.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\import_hpgl.py to ipkissat3\ipkiss\io\import_hpgl.py.
RefactoringTool: No changes to ipkiss24\ipkiss\io\input.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\input.py to ipkissat3\ipkiss\io\input.py.
RefactoringTool: Refactored ipkiss24\ipkiss\io\input_gdsii.py

+++ ipkiss24\ipkiss\boolean_ops\boolean_ops_elements.py	(refactored)
@@ -95,8 +95,8 @@
     Given a list of elements and a list of tuples (GeneratedLayer, PPLayer), create new elements according to the boolean
     operations of the GeneratedLayer and place these elements on the specified PPLayer.
     """
-    generated_layers = mapping.keys()
-    export_layers = mapping.values()
+    generated_layers = list(mapping.keys())
+    export_layers = list(mapping.values())
     elems = ElementList()
     process_processelems_dict = dict()
     for generated_layer, export_layer in zip(generated_layers, export_layers):
--- ipkiss24\ipkiss\geometry\shape.py	(original)
+++ ipkiss24\ipkiss\geometry\shape.py	(refactored)
@@ -21,7 +21,7 @@
 
 from .. import constants
 from . import transformable 
-from coord import Coord2, Coord3, Coord
+from .coord import Coord2, Coord3, Coord
 
 from . import size_info
 from copy import copy, deepcopy
@@ -144,7 +144,7 @@
                         kwargs["points"] = pl
                     else:
                         raise Exception()
-                except Exception, e:
+                except Exception as e:
                     raise IpkissException("Unexpected type %s for parameter 'points' in Shape::__init__" % str(type(points)))
         super(Shape, self).__init__(**kwargs)
                 
@@ -472,14 +472,14 @@
         if len(p) < 2:
             return []
         if self.is_closed():
-            segments = zip(p, roll(p, 1, 0))
-        else:
-            segments = zip(p[:-1], p[1:])
+            segments = list(zip(p, roll(p, 1, 0)))
+        else:
+            segments = list(zip(p[:-1], p[1:]))
         return segments
 
     def intersections(self, other_shape):
         """ the intersections with this shape and the other shape """
-        from shape_info import intersection, lines_cross, lines_coincide, sort_points_on_line, points_unique
+        from .shape_info import intersection, lines_cross, lines_coincide, sort_points_on_line, points_unique
         s = Shape(self)
         s.remove_straight_angles()
         segments1 = s.segments() 
@@ -586,7 +586,7 @@
 
     def __delslice__(self, i, j):
         """ remove a slice of points """
-        self.points = delete(self.points, range(i, j), 0)
+        self.points = delete(self.points, list(range(i, j)), 0)
         return self
 
     def __mul__(self, times):
--- ipkiss24\ipkiss\geometry\shape_cut.py	(original)
+++ ipkiss24\ipkiss\geometry\shape_cut.py	(refactored)
@@ -81,7 +81,7 @@
 def cut_open_shape_in_n_sections_with_overlap(shape, n_o_sections, overlap=1):
     l = len(shape)
     section_length = int(math.ceil(l / n_o_sections))
-    return cut_open_shape_with_overlap(shape, range(section_length - 1, l - overlap - 1, section_length), overlap)
+    return cut_open_shape_with_overlap(shape, list(range(section_length - 1, l - overlap - 1, section_length)), overlap)
 
 def cut_open_shape_in_sections_with_overlap(shape, max_section_length, overlap=1, min_n_o_sections=1):
     l = len(shape)
--- ipkiss24\ipkiss\geometry\shape_info.py	(original)
+++ ipkiss24\ipkiss\geometry\shape_info.py	(refactored)
@@ -22,7 +22,7 @@
 from .. import constants
 from . import coord
 from . import shape
-from transforms.rotation import Rotation
+from .transforms.rotation import Rotation
 import numpy
 from math import atan2, pi, sqrt
 from ipkiss.log import IPKISS_LOG as LOG
--- ipkiss24\ipkiss\geometry\shape_modify.py	(original)
+++ ipkiss24\ipkiss\geometry\shape_modify.py	(refactored)
@@ -95,7 +95,7 @@
                         c4 = nc[k + 1]
                         if lines_cross(c1, c2, c3, c4):
                                 nc[i + 1] = intersection(c1, c2, c3, c4)
-                                dels.update(range(i + 2, k + 1))
+                                dels.update(list(range(i + 2, k + 1)))
                                 c2 = nc[i + 1]
                         k += 1 
         return numpy.delete(nc, dels, 0)
--- ipkiss24\ipkiss\geometry\vector.py	(original)
+++ ipkiss24\ipkiss\geometry\vector.py	(refactored)
@@ -50,7 +50,7 @@
     def get_angle_rad(self):
         try:
             return constants.DEG2RAD * self.__angle__
-        except AttributeError, e:
+        except AttributeError as e:
             return 0.0
         
     def set_angle_rad(self, value):
@@ -61,7 +61,7 @@
     def get_angle_deg(self):
         try:
             return self.__angle__
-        except AttributeError, e:
+        except AttributeError as e:
             return 0.0
         
     def set_angle_deg(self, value):
@@ -141,7 +141,7 @@
     def get_inclination_rad(self):
         try:
             return constants.DEG2RAD * self.__inclination__
-        except AttributeError, e:
+        except AttributeError as e:
             return 0.0
         
     def set_inclination_rad(self, value):
@@ -152,7 +152,7 @@
     def get_inclination_deg(self):
         try:
             return self.__inclination__
-        except AttributeError, e:
+        except AttributeError as e:
             return 0.0
         
     def set_inclination_deg(self, value):
--- ipkiss24\ipkiss\geometry\shapes\basic.py	(original)
+++ ipkiss24\ipkiss\geometry\shapes\basic.py	(refactored)
@@ -53,7 +53,7 @@
            "ShapeWedge"]
 
 def wrap_kwargs(kwargs_dict, **kwargs):
-    for kwa_k, kwa_v in kwargs.items():
+    for kwa_k, kwa_v in list(kwargs.items()):
         kwargs_dict[kwa_k] = kwa_v
     return kwargs_dict
 
@@ -341,7 +341,7 @@
             pts.append(self.center)
             return pts
         angle_step = 2 * math.pi / self.n_o_sides
-        for i in xrange(0, self.n_o_sides):
+        for i in range(0, self.n_o_sides):
             pts.append((self.center[0] + self.radius * math.cos((i + 0.5) * angle_step + math.pi / 2),
                         self.center[1] + self.radius * math.sin((i + 0.5) * angle_step + math.pi / 2)))
         return pts
--- ipkiss24\ipkiss\io\gds_layer.py	(original)
+++ ipkiss24\ipkiss\io\gds_layer.py	(refactored)
@@ -58,13 +58,13 @@
         super(GdsiiLayerOutputMap, self).__init__(layer_map = layer_map, **kwargs)
         # check if the input map doesn't contain any duplicates on the "source side" (duplicates may exist on the target size)
         ln = []
-        for L in self.layer_map.keys():
+        for L in list(self.layer_map.keys()):
             ln.append(str(L))
         if len(ln) != len(list(set(ln))):
             raise InvalidArgumentException("layer_map may not contain duplicate layers on the source-side.")             
     
     def __getitem__(self, layer):
-        for key, value in self.layer_map.items():
+        for key, value in list(self.layer_map.items()):
             if (layer == key):
                 return value
         raise IpkissException("GdsiiLayerOutputMap::No valid mapping found for layer %s" %layer)
@@ -112,13 +112,13 @@
         super(GdsiiLayerInputMap, self).__init__(layer_map = layer_map, **kwargs)
         # check if the input map doesn't contain any duplicates on the "source side" (duplicates may exist on the target size)
         ln = []
-        for L in self.layer_map.keys():
+        for L in list(self.layer_map.keys()):
             ln.append((L.number,L.datatype))
         if len(ln) != len(list(set(ln))):
             raise IpkissException("layer_map may not contain duplicate layer number on the source-side.")                                    
 
     def __getitem__(self,key):
-        for L in self.layer_map.keys():
+        for L in list(self.layer_map.keys()):
             if L.number == key.number and L.datatype == key.datatype:
                 return self.layer_map[L]
         return self.default
@@ -128,7 +128,7 @@
 
 def make_layer_input_map(layermap, default = None):
     lm = {}
-    for k in layermap.keys():
+    for k in list(layermap.keys()):
         if isinstance(k,int):
             datatype = 0
             number = k
--- ipkiss24\ipkiss\io\input_gdsii.py	(original)
+++ ipkiss24\ipkiss\io\input_gdsii.py	(refactored)RefactoringTool: Writing converted ipkiss24\ipkiss\io\input_gdsii.py to ipkissat3\ipkiss\io\input_gdsii.py.
RefactoringTool: No changes to ipkiss24\ipkiss\io\output.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\output.py to ipkissat3\ipkiss\io\output.py.
RefactoringTool: Refactored ipkiss24\ipkiss\io\output_gdsii.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\output_gdsii.py to ipkissat3\ipkiss\io\output_gdsii.py.
RefactoringTool: Refactored ipkiss24\ipkiss\io\output_object.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\output_object.py to ipkissat3\ipkiss\io\output_object.py.
RefactoringTool: Refactored ipkiss24\ipkiss\io\output_xml.py
RefactoringTool: Writing converted ipkiss24\ipkiss\io\output_xml.py to ipkissat3\ipkiss\io\output_xml.py.
RefactoringTool: No changes to ipkiss24\ipkiss\logos\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\logos\__init__.py to ipkissat3\ipkiss\logos\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\logos\basic.py
RefactoringTool: Writing converted ipkiss24\ipkiss\logos\basic.py to ipkissat3\ipkiss\logos\basic.py.
RefactoringTool: No changes to ipkiss24\ipkiss\path_definition\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\path_definition\__init__.py to ipkissat3\ipkiss\path_definition\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\__init__.py to ipkissat3\ipkiss\plugins\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\__init__.py to ipkissat3\ipkiss\plugins\photonics\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\port\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\port\__init__.py to ipkissat3\ipkiss\plugins\photonics\port\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\port\aspect.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\port\aspect.py to ipkissat3\ipkiss\plugins\photonics\port\aspect.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\port\port.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\port\port.py to ipkissat3\ipkiss\plugins\photonics\port\port.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\port\port_list.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\port\port_list.py to ipkissat3\ipkiss\plugins\photonics\port\port_list.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\routing\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\routing\__init__.py to ipkissat3\ipkiss\plugins\photonics\routing\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\routing\basic.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\routing\basic.py to ipkissat3\ipkiss\plugins\photonics\routing\basic.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\routing\bundle_connect.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\routing\bundle_connect.py to ipkissat3\ipkiss\plugins\photonics\routing\bundle_connect.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\routing\connect.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\routing\connect.py to ipkissat3\ipkiss\plugins\photonics\routing\connect.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\routing\manhattan.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\routing\manhattan.py to ipkissat3\ipkiss\plugins\photonics\routing\manhattan.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\routing\to_line.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\routing\to_line.py to ipkissat3\ipkiss\plugins\photonics\routing\to_line.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\technology\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\technology\__init__.py to ipkissat3\ipkiss\plugins\photonics\technology\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\technology\common.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\technology\common.py to ipkissat3\ipkiss\plugins\photonics\technology\common.py.
RefactoringTool: Refactored ipkiss24\ipkiss\plugins\photonics\technology\default\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\technology\default\__init__.py to ipkissat3\ipkiss\plugins\photonics\technology\default\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\technology\default\agnostic.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\technology\default\agnostic.py to ipkissat3\ipkiss\plugins\photonics\technology\default\agnostic.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\wg\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\wg\__init__.py to ipkissat3\ipkiss\plugins\photonics\wg\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\wg\basic.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\wg\basic.py to ipkissat3\ipkiss\plugins\photonics\wg\basic.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\wg\bundle.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\wg\bundle.py to ipkissat3\ipkiss\plugins\photonics\wg\bundle.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\wg\connect.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\wg\connect.py to ipkissat3\ipkiss\plugins\photonics\wg\connect.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\wg\definition.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\wg\definition.py to ipkissat3\ipkiss\plugins\photonics\wg\definition.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\photonics\wg\slotted.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\wg\slotted.py to ipkissat3\ipkiss\plugins\photonics\wg\slotted.py.
RefactoringTool: Refactored ipkiss24\ipkiss\plugins\photonics\wg\window.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\photonics\wg\window.py to ipkissat3\ipkiss\plugins\photonics\wg\window.py.
RefactoringTool: Refactored ipkiss24\ipkiss\plugins\simulation\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\simulation\__init__.py to ipkissat3\ipkiss\plugins\simulation\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\simulation\simulation.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\simulation\simulation.py to ipkissat3\ipkiss\plugins\simulation\simulation.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\vfabrication\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\vfabrication\__init__.py to ipkissat3\ipkiss\plugins\vfabrication\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\vfabrication\elements.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\vfabrication\elements.py to ipkissat3\ipkiss\plugins\vfabrication\elements.py.
RefactoringTool: Refactored ipkiss24\ipkiss\plugins\vfabrication\geometry.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\vfabrication\geometry.py to ipkissat3\ipkiss\plugins\vfabrication\geometry.py.
RefactoringTool: No changes to ipkiss24\ipkiss\plugins\vfabrication\process_flow.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\vfabrication\process_flow.py to ipkissat3\ipkiss\plugins\vfabrication\process_flow.py.
RefactoringTool: Refactored ipkiss24\ipkiss\plugins\vfabrication\vfabrication.py

@@ -120,7 +120,7 @@
             datalen = int (b2a_hex(b1), 16) - 4
             b2 = self.__istream__.read(2)
             rtype = int (b2a_hex(b2), 16)
-        except Exception, e:
+        except Exception as e:
             msg = "Could not read record : %s" %str(e)
             from ipkiss.exceptions.exc import IpkissException
             raise IpkissException(msg)
@@ -174,13 +174,13 @@
     def __parse_int2__(self):
         try:
             return unpack(">h",self.__istream__.read(2))[0]
-        except Exception, e:
+        except Exception as e:
             LOG.error("Could not read INT2 : %s" %e)
             raise SystemError
     
 class InputGdsiiTree(InputGdsiiHeader):
     """ Parses a GDSII file but extracts only the hierarchy """
-    log_bufsize = LongIntProperty(default=0L)
+    log_bufsize = LongIntProperty(default=0)
     def __init__(self, i_stream = sys.stdin, stop_on_unknown_gds_layer = True, **kwargs):
         super(InputGdsiiTree, self).__init__(
             i_stream = i_stream,
@@ -413,7 +413,7 @@
     def __parse_int4__(self):
         try:
             return unpack(">l",self.__istream__.read(4))[0]
-        except Exception, e:
+        except Exception as e:
             LOG.error("Could not read INT4 : %s" %e)
             raise SystemError
 
--- ipkiss24\ipkiss\io\output_gdsii.py	(original)
+++ ipkiss24\ipkiss\io\output_gdsii.py	(refactored)
@@ -37,7 +37,7 @@
 from ipkiss.log import IPKISS_LOG as LOG
 import logging
 from io import BytesIO
-from output_xml import FileOutputXml
+from .output_xml import FileOutputXml
 import numpy as np
 from ipcore.properties.predefined import BoolProperty, RestrictedProperty
 from ipcore.properties.restrictions import RestrictType
@@ -369,14 +369,14 @@
                         B1 = 128
                         number = abs(number)
                 E = int(math.ceil(math.log(number)/math.log(16)))
-                inumber = long(number * 16L**(-E+14))
+                inumber = int(number * 16**(-E+14))
                 B1 += E+64
                 B2 = (inumber/281474976710656)%256
                 if B2 == 0:
                         B2 = 16
                         B1 += 1
-                S3 = (inumber%281474976710656)/4294967296L
-                L4 = inumber%4294967296L
+                S3 = (inumber%281474976710656)/4294967296
+                L4 = inumber%4294967296
         return __hex_text__(pack(">BBHL",B1, B2, S3, L4))
 
 def __hex_text__ (text):
--- ipkiss24\ipkiss\io\output_object.py	(original)
+++ ipkiss24\ipkiss\io\output_object.py	(refactored)
@@ -19,7 +19,7 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from output import OutputBasic
+from .output import OutputBasic
 from inspect import ismethod
 from ipkiss.log import IPKISS_LOG as LOG
 DO = set(dir(list()))
--- ipkiss24\ipkiss\io\output_xml.py	(original)
+++ ipkiss24\ipkiss\io\output_xml.py	(refactored)
@@ -97,7 +97,7 @@
         '''Create an XML element as top element (without parent) or as subelement (with the given parent)'''
 
         #force all attribute values to string
-        for k in p_attribs.keys():
+        for k in list(p_attribs.keys()):
             p_attribs[k] = str(p_attribs[k])
 
         if (p_parentXMLElement == None):
@@ -146,7 +146,7 @@
             gdsLayer = self.layer_map.get(p_Item,None)   
             lyr = gdsLayer.number
             pur = gdsLayer.datatype
-        except Exception, e:
+        except Exception as e:
             LOG.error("Warning: layer %s not found: %s - forcing layer number to 1." %(p_Item,e))
             lyr = 1
             pur = 100
@@ -203,7 +203,7 @@
             T = item.transformation + additional_transform
             coordinates = T(ShapeRectangle(item.center, item.box_size)).tolist()
             self.collect_boundary_element(item.layer, coordinates)
-        except Exception, err:
+        except Exception as err:
             msg = "OutputXml::Fatal exception in collect_BoxElement : %s" %err
             LOG.error(msg)
             raise err
@@ -215,7 +215,7 @@
         try:
             lyrPurp = self.__getLayerPurposeNmbr(layer)
             self.__makePathXMLElement(None, coordinates.points, lyrPurp[0], lyrPurp[1], line_width, self.topElem)   
-        except Exception, err:
+        except Exception as err:
             msg = "OutputXml::Fatal exception in collect_path_element : %s" %err
             LOG.error(msg)	
             raise err
@@ -226,7 +226,7 @@
         try:
             lyrPurp = self.__getLayerPurposeNmbr(layer)
             self.__makeBoundaryXMLElement(None, coordinates.points, lyrPurp[0], lyrPurp[1], self.topElem)
-        except Exception, err:
+        except Exception as err:
             msg = "OutputXml::Fatal exception in collect_boundary_element : %s" %err
             LOG.error(msg)	
             raise err
--- ipkiss24\ipkiss\plugins\photonics\technology\default\__init__.py	(original)
+++ ipkiss24\ipkiss\plugins\photonics\technology\default\__init__.py	(refactored)
@@ -37,7 +37,7 @@
 TECH.METRICS.ANGLE_STEP = 1.0
 
 from ..common import *
-from agnostic import *
+from .agnostic import *
 
 #activate the "ports" mixin
 import ipkiss.plugins.photonics.port.aspect 
--- ipkiss24\ipkiss\plugins\photonics\wg\window.py	(original)
+++ ipkiss24\ipkiss\plugins\photonics\wg\window.py	(refactored)
@@ -109,7 +109,7 @@
             #Wim: This should not be handled here! This should be processed at the interface with Shapely.
             from ipkiss.primitives.filters.path_cut_filter import ShapeCutFilter
             import sys
-            f = ShapeCutFilter(max_path_length = sys.maxint)
+            f = ShapeCutFilter(max_path_length = sys.maxsize)
             shapes_to_offset = f(shape)
             shapes = [self.get_path_shape_with_termination_offsets(shape = sh, termination_offsets = []) for sh in shapes_to_offset]
         
--- ipkiss24\ipkiss\plugins\simulation\__init__.py	(original)
+++ ipkiss24\ipkiss\plugins\simulation\__init__.py	(refactored)
@@ -32,4 +32,4 @@
 from pysimul.integration.component_integration import *
 from pysimul.integration.camfr_integration import camfr_stack_expr_for_structure
 
-from simulation import *
+from .simulation import *
--- ipkiss24\ipkiss\plugins\vfabrication\geometry.py	(original)
+++ ipkiss24\ipkiss\plugins\vfabrication\geometry.py	(refactored)
@@ -162,7 +162,7 @@
     def get_material_array(self):
         """Convert the geometrical model with polygons into a discrete matrix"""
         if (self.__material_array__ is None):
-            from vfabrication import __common_function_apply_polygon_to_array_memory_sparing__
+            from .vfabrication import __common_function_apply_polygon_to_array_memory_sparing__
             mat_bm = self.material_stacks_shapely_polygons
             mat_bm[0] = (mat_bm[0][0], None) #replace the canvas polygon (1st element) by "None" : this is more efficient and will be interpreted identically later on
             material_array = numpy.zeros([self.canvas_width, self.canvas_height], dtype = numpy.int16) #store the material id as 16-bit integer			
--- ipkiss24\ipkiss\plugins\vfabrication\vfabrication.py	(original)
+++ ipkiss24\ipkiss\plugins\vfabrication\vfabrication.py	(refactored)
@@ -147,7 +147,7 @@
     out[:,0] = numpy.repeat(arrays[0], m)
     if arrays[1:]:
         __common_function_cartesian__(arrays[1:], out=out[0:m,1:])
-        for j in xrange(1, arrays[0].size):
+        for j in range(1, arrays[0].size):
             out[j*m:(j+1)*m,1:] = out[0:m,1:]
     return out	    
 
@@ -173,7 +173,7 @@
             grid = TECH.METRICS.GRID 
             filter = PathCutFilter(max_path_length = int(constants.GDSII_MAX_COORDINATES/2) , grids_per_unit = int(1.0 / grid), overlap = 1)            
             filter += PathToBoundaryFilter()
-            elems = filter(e)
+            elems = list(filter(e))
             for e2 in elems:
                 if not isinstance(e2, __LayerElement__):
                     continue
@@ -260,13 +260,13 @@
                 process_polygons[process] = LayerShapelyPolygons(layer = Layer(number = 0, name = "VFABRICATION_%s" %process.extension),RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\vfabrication\vfabrication.py to ipkissat3\ipkiss\plugins\vfabrication\vfabrication.py.
RefactoringTool: Refactored ipkiss24\ipkiss\plugins\vfabrication\visualization.py
RefactoringTool: Writing converted ipkiss24\ipkiss\plugins\vfabrication\visualization.py to ipkissat3\ipkiss\plugins\vfabrication\visualization.py.
RefactoringTool: Refactored ipkiss24\ipkiss\primitives\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\__init__.py to ipkissat3\ipkiss\primitives\__init__.py.
RefactoringTool: Refactored ipkiss24\ipkiss\primitives\filter.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filter.py to ipkissat3\ipkiss\primitives\filter.py.
RefactoringTool: Refactored ipkiss24\ipkiss\primitives\font.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\font.py to ipkissat3\ipkiss\primitives\font.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\group.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\group.py to ipkissat3\ipkiss\primitives\group.py.
RefactoringTool: Refactored ipkiss24\ipkiss\primitives\layer.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\layer.py to ipkissat3\ipkiss\primitives\layer.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\library.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\library.py to ipkissat3\ipkiss\primitives\library.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\name_generator.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\name_generator.py to ipkissat3\ipkiss\primitives\name_generator.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\shapes_to_elements.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\shapes_to_elements.py to ipkissat3\ipkiss\primitives\shapes_to_elements.py.
RefactoringTool: Refactored ipkiss24\ipkiss\primitives\structure.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\structure.py to ipkissat3\ipkiss\primitives\structure.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\unit_grid.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\unit_grid.py to ipkissat3\ipkiss\primitives\unit_grid.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\elements\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\elements\__init__.py to ipkissat3\ipkiss\primitives\elements\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\elements\basic.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\elements\basic.py to ipkissat3\ipkiss\primitives\elements\basic.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\elements\box.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\elements\box.py to ipkissat3\ipkiss\primitives\elements\box.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\elements\group.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\elements\group.py to ipkissat3\ipkiss\primitives\elements\group.py.
RefactoringTool: Refactored ipkiss24\ipkiss\primitives\elements\reference.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\elements\reference.py to ipkissat3\ipkiss\primitives\elements\reference.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\elements\shape.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\elements\shape.py to ipkissat3\ipkiss\primitives\elements\shape.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\elements\text.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\elements\text.py to ipkissat3\ipkiss\primitives\elements\text.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\filters\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filters\__init__.py to ipkissat3\ipkiss\primitives\filters\__init__.py.
RefactoringTool: Refactored ipkiss24\ipkiss\primitives\filters\boundary_cut_filter.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filters\boundary_cut_filter.py to ipkissat3\ipkiss\primitives\filters\boundary_cut_filter.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\filters\empty_filter.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filters\empty_filter.py to ipkissat3\ipkiss\primitives\filters\empty_filter.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\filters\layer_filter.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filters\layer_filter.py to ipkissat3\ipkiss\primitives\filters\layer_filter.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\filters\name_scramble_filter.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filters\name_scramble_filter.py to ipkissat3\ipkiss\primitives\filters\name_scramble_filter.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\filters\orthogonal_reference_filter.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filters\orthogonal_reference_filter.py to ipkissat3\ipkiss\primitives\filters\orthogonal_reference_filter.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\filters\path_cut_filter.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filters\path_cut_filter.py to ipkissat3\ipkiss\primitives\filters\path_cut_filter.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\filters\path_to_boundary_filter.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\filters\path_to_boundary_filter.py to ipkissat3\ipkiss\primitives\filters\path_to_boundary_filter.py.
RefactoringTool: Refactored ipkiss24\ipkiss\primitives\fonts\__init__.py

                                                                  size_info = size_info)
 
-        for process, is_lf_fabrication in self.process_flow.is_lf_fabrication.items(): 
+        for process, is_lf_fabrication in list(self.process_flow.is_lf_fabrication.items()): 
             bm = process_polygons[process]
             if is_lf_fabrication:
                 process_polygons[process] = bm.bitwise_not()
 
         if self.save_debug_images:
-            for process, bm in process_polygons.items():
+            for process, bm in list(process_polygons.items()):
                 bm.save_to_image("vfabrication_%s_process_polygon_%s.png" %(self.structure.name,process.extension))
 
         return (process_polygons, size_info)
--- ipkiss24\ipkiss\plugins\vfabrication\visualization.py	(original)
+++ ipkiss24\ipkiss\plugins\vfabrication\visualization.py	(refactored)
@@ -90,7 +90,7 @@
             fnull.close()
             return result_value
         else:
-            print "Additionally, run the following command : ", cmd
+            print("Additionally, run the following command : ", cmd)
             return 0
 
     def __get_meep_engine_type__(self):
@@ -195,16 +195,16 @@
 
 from ipkiss.primitives import Library
 
-import tkSimpleDialog
-from Tkinter import *
-
-
-class __StructuresVFabricationDialog__(tkSimpleDialog.Dialog):
+import tkinter.simpledialog
+from tkinter import *
+
+
+class __StructuresVFabricationDialog__(tkinter.simpledialog.Dialog):
 
     def __init__(self, master, library, aspect_ratio_equal = True):
         self.library = library     
         self.cb_initial_value = aspect_ratio_equal
-        tkSimpleDialog.Dialog.__init__(self, parent = master)
+        tkinter.simpledialog.Dialog.__init__(self, parent = master)
 
     def body(self, master):
         #label
@@ -254,7 +254,7 @@
             if d.result:
                 struct = self.__fast_get_structure__(d.result) 
                 aspect_ratio_equal = d.aspect_ratio_equal
-                print "Preparing the virtual fabrication of %s..." %d.result
+                print("Preparing the virtual fabrication of %s..." %d.result)
                 func(self, struct, aspect_ratio_equal = aspect_ratio_equal)                
             else:
                 break
--- ipkiss24\ipkiss\primitives\__init__.py	(original)
+++ ipkiss24\ipkiss\primitives\__init__.py	(refactored)
@@ -19,8 +19,8 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-import elements
-from structure import Structure, StructureProperty, StructureList
-from library import Library
-from font import BoundaryFont, PathFont, FontProperty
-from layer import Layer, LayerProperty
+from . import elements
+from .structure import Structure, StructureProperty, StructureList
+from .library import Library
+from .font import BoundaryFont, PathFont, FontProperty
+from .layer import Layer, LayerProperty
--- ipkiss24\ipkiss\primitives\filter.py	(original)
+++ ipkiss24\ipkiss\primitives\filter.py	(refactored)
@@ -140,7 +140,7 @@
     def __getitem__(self,key):
         if not isinstance(key,str):
             raise KeyError("__ToggledCompoundFilter__: key must be of type str, is type %s"%(type(key)))
-        if not key in self.__filter_status.keys():
+        if not key in list(self.__filter_status.keys()):
             return True
         return self.__filter_status[key]
     
@@ -148,7 +148,7 @@
         """ processes the item """ 
         LOG.debug("Applying all subfilters. Item = %s" % item)
         v = item
-        k = self.__filter_status.keys()
+        k = list(self.__filter_status.keys())
         for R in self._sub_filters:
             if R.name not in k or self.__filter_status[R.name]:
                 LOG.debug("** Applying subfilter %s to %s"  % (R, v))
@@ -161,7 +161,7 @@
         S = "< Toggled Compound Filter:"
         for i in self._sub_filters:
             S += "   %s" % i.__repr__() 
-            if i.name not in self.__filter_status.keys() or self.__filter_status[i.name]:
+            if i.name not in list(self.__filter_status.keys()) or self.__filter_status[i.name]:
                 S += "(enabled)"
             else:
                 S += "(disabled)"
--- ipkiss24\ipkiss\primitives\font.py	(original)
+++ ipkiss24\ipkiss\primitives\font.py	(refactored)
@@ -102,7 +102,7 @@
         if isinstance(value, Font):
             return value
         try:
-            import fonts
+            from . import fonts
             new_val = fonts.TEXT_FONTS[value]
             return new_val
         except:
--- ipkiss24\ipkiss\primitives\layer.py	(original)
+++ ipkiss24\ipkiss\primitives\layer.py	(refactored)
@@ -68,9 +68,7 @@
         else:
             return layer
 
-class __Layer__(StrongPropertyInitializer):
-    __metaclass__ = MetaLayerCreator
-
+class __Layer__(StrongPropertyInitializer, metaclass=MetaLayerCreator):
     def __and__(self, other):
         if isinstance(other, __Layer__):
             return __GeneratedLayerAnd__(self, other)
--- ipkiss24\ipkiss\primitives\structure.py	(original)
+++ ipkiss24\ipkiss\primitives\structure.py	(refactored)
@@ -134,10 +134,8 @@
         return not self.__eq__(other)    
     
     
-class Structure(UnitGridContainer, __StructureHierarchy__, MixinBowl):
+class Structure(UnitGridContainer, __StructureHierarchy__, MixinBowl, metaclass=MetaStructureCreator):
     """Base class for a parametric cell"""
-    
-    __metaclass__ = MetaStructureCreator    
     __name_generator__ = TECH.ADMIN.NAME_GENERATOR    
     created = TimeProperty(doc = "Timestamp when the structure was created (a floating point number expressed in seconds since the epoch, in UTC).")
     modified = TimeProperty(doc = "Timestamp when the structure was modified (a floating point number expressed in seconds since the epoch, in UTC).")
--- ipkiss24\ipkiss\primitives\elements\reference.py	(original)
+++ ipkiss24\ipkiss\primitives\elements\reference.py	(refactored)
@@ -225,7 +225,7 @@
         return S2.convex_hull().transform(self.transformation + Translation(self.origin))
 
     def __untransformed_positions__(self):
-        p = shape.Shape(transpose(reshape(meshgrid(range(self.n_o_periods[0]), range(self.n_o_periods[1])),(2, self.n_o_periods[0]* self.n_o_periods[1]))) * array([self.period[0], self.period[1]]))
+        p = shape.Shape(transpose(reshape(meshgrid(list(range(self.n_o_periods[0])), list(range(self.n_o_periods[1]))),(2, self.n_o_periods[0]* self.n_o_periods[1]))) * array([self.period[0], self.period[1]]))
         return p
 
     def __positions__(self):
--- ipkiss24\ipkiss\primitives\filters\boundary_cut_filter.py	(original)
+++ ipkiss24\ipkiss\primitives\filters\boundary_cut_filter.py	(refactored)
@@ -48,9 +48,9 @@
                 lib_debug += Structure(elements = [item])
                 OP2 = FileOutputGdsii(FileName = "debug_struct_boundary_cut_%s_ORIGINAL.gds"%(DEBUG_ID), cut_boundaries = False)
                 OP2.write(lib_debug)                     
-                print DEBUG_ID, " -- DECISION CRITERIUM len(item.shape) = ", len(item.shape)
-                print "max_vertex_count = ", self.max_vertex_count
-                print "-------------"            
+                print(DEBUG_ID, " -- DECISION CRITERIUM len(item.shape) = ", len(item.shape))
+                print("max_vertex_count = ", self.max_vertex_count)
+                print("-------------")            
             result_boundaries = []
             #define the horizontal cutting line
             si = item.size_info()
--- ipkiss24\ipkiss\primitives\fonts\__init__.py	(original)
+++ ipkiss24\ipkiss\primitives\fonts\__init__.py	(refactored)
@@ -19,9 +19,9 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from standard import TEXT_FONT_STANDARD
-from compact import TEXT_FONT_COMPACT
-from simple import TEXT_FONT_SIMPLE
+from .standard import TEXT_FONT_STANDARD
+from .compact import TEXT_FONT_COMPACT
+from .simple import TEXT_FONT_SIMPLE
 
 #----------------------------------------------------------------------------
 #List of all FontsRefactoringTool: Writing converted ipkiss24\ipkiss\primitives\fonts\__init__.py to ipkissat3\ipkiss\primitives\fonts\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\fonts\compact.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\fonts\compact.py to ipkissat3\ipkiss\primitives\fonts\compact.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\fonts\simple.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\fonts\simple.py to ipkissat3\ipkiss\primitives\fonts\simple.py.
RefactoringTool: No changes to ipkiss24\ipkiss\primitives\fonts\standard.py
RefactoringTool: Writing converted ipkiss24\ipkiss\primitives\fonts\standard.py to ipkissat3\ipkiss\primitives\fonts\standard.py.
RefactoringTool: Refactored ipkiss24\ipkiss\process\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\process\__init__.py to ipkissat3\ipkiss\process\__init__.py.
RefactoringTool: Refactored ipkiss24\ipkiss\process\layer.py
RefactoringTool: Writing converted ipkiss24\ipkiss\process\layer.py to ipkissat3\ipkiss\process\layer.py.
RefactoringTool: Refactored ipkiss24\ipkiss\process\layer_map.py
RefactoringTool: Writing converted ipkiss24\ipkiss\process\layer_map.py to ipkissat3\ipkiss\process\layer_map.py.
RefactoringTool: No changes to ipkiss24\ipkiss\technology\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\technology\__init__.py to ipkissat3\ipkiss\technology\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\technology\rules.py
RefactoringTool: Writing converted ipkiss24\ipkiss\technology\rules.py to ipkissat3\ipkiss\technology\rules.py.
RefactoringTool: No changes to ipkiss24\ipkiss\technology\settings.py
RefactoringTool: Writing converted ipkiss24\ipkiss\technology\settings.py to ipkissat3\ipkiss\technology\settings.py.
RefactoringTool: Refactored ipkiss24\ipkiss\technology\technology.py
RefactoringTool: Writing converted ipkiss24\ipkiss\technology\technology.py to ipkissat3\ipkiss\technology\technology.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\__init__.py to ipkissat3\ipkiss\visualisation\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\color.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\color.py to ipkissat3\ipkiss\visualisation\color.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\display_style.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\display_style.py to ipkissat3\ipkiss\visualisation\display_style.py.
RefactoringTool: Refactored ipkiss24\ipkiss\visualisation\layer.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\layer.py to ipkissat3\ipkiss\visualisation\layer.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\scaler.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\scaler.py to ipkissat3\ipkiss\visualisation\scaler.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\show.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\show.py to ipkissat3\ipkiss\visualisation\show.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\stipple.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\stipple.py to ipkissat3\ipkiss\visualisation\stipple.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\manager\__init__.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\manager\__init__.py to ipkissat3\ipkiss\visualisation\manager\__init__.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\manager\basic.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\manager\basic.py to ipkissat3\ipkiss\visualisation\manager\basic.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\manager\matplotlib_figure.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\manager\matplotlib_figure.py to ipkissat3\ipkiss\visualisation\manager\matplotlib_figure.py.
RefactoringTool: No changes to ipkiss24\ipkiss\visualisation\manager\tvtk_polydata.py
RefactoringTool: Writing converted ipkiss24\ipkiss\visualisation\manager\tvtk_polydata.py to ipkissat3\ipkiss\visualisation\manager\tvtk_polydata.py.
RefactoringTool: Refactored ipkiss24\picazzo\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\__init__.py to ipkissat3\picazzo\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\builder.py
RefactoringTool: Writing converted ipkiss24\picazzo\builder.py to ipkissat3\picazzo\builder.py.
RefactoringTool: No changes to ipkiss24\picazzo\log.py
RefactoringTool: Writing converted ipkiss24\picazzo\log.py to ipkissat3\picazzo\log.py.
RefactoringTool: No changes to ipkiss24\picazzo\settings.py
RefactoringTool: Writing converted ipkiss24\picazzo\settings.py to ipkissat3\picazzo\settings.py.
RefactoringTool: Refactored ipkiss24\picazzo\container\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\container\__init__.py to ipkissat3\picazzo\container\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\container\auto_taper_ports.py
RefactoringTool: Writing converted ipkiss24\picazzo\container\auto_taper_ports.py to ipkissat3\picazzo\container\auto_taper_ports.py.
RefactoringTool: No changes to ipkiss24\picazzo\container\container.py
RefactoringTool: Writing converted ipkiss24\picazzo\container\container.py to ipkissat3\picazzo\container\container.py.
RefactoringTool: No changes to ipkiss24\picazzo\container\extend_ports.py
RefactoringTool: Writing converted ipkiss24\picazzo\container\extend_ports.py to ipkissat3\picazzo\container\extend_ports.py.
RefactoringTool: No changes to ipkiss24\picazzo\container\fanout.py
RefactoringTool: Writing converted ipkiss24\picazzo\container\fanout.py to ipkissat3\picazzo\container\fanout.py.
RefactoringTool: No changes to ipkiss24\picazzo\container\route_ports.py
RefactoringTool: Writing converted ipkiss24\picazzo\container\route_ports.py to ipkissat3\picazzo\container\route_ports.py.
RefactoringTool: No changes to ipkiss24\picazzo\container\suppress_ports.py
RefactoringTool: Writing converted ipkiss24\picazzo\container\suppress_ports.py to ipkissat3\picazzo\container\suppress_ports.py.
RefactoringTool: No changes to ipkiss24\picazzo\container\taper_ports.py
RefactoringTool: Writing converted ipkiss24\picazzo\container\taper_ports.py to ipkissat3\picazzo\container\taper_ports.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\__init__.py to ipkissat3\picazzo\fibcoup\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\basic\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\basic\__init__.py to ipkissat3\picazzo\fibcoup\basic\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\basic\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\basic\layout.py to ipkissat3\picazzo\fibcoup\basic\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\cleave\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\cleave\__init__.py to ipkissat3\picazzo\fibcoup\cleave\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\cleave\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\cleave\layout.py to ipkissat3\picazzo\fibcoup\cleave\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\curved\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\curved\__init__.py to ipkissat3\picazzo\fibcoup\curved\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\curved\curved_basic.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\curved\curved_basic.py to ipkissat3\picazzo\fibcoup\curved\curved_basic.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\curved\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\curved\layout.py to ipkissat3\picazzo\fibcoup\curved\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\grating\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\grating\__init__.py to ipkissat3\picazzo\fibcoup\grating\__init__.py.
RefactoringTool: Refactored ipkiss24\picazzo\fibcoup\grating\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\grating\layout.py to ipkissat3\picazzo\fibcoup\grating\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\inverted_taper\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\inverted_taper\__init__.py to ipkissat3\picazzo\fibcoup\inverted_taper\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\inverted_taper\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\inverted_taper\layout.py to ipkissat3\picazzo\fibcoup\inverted_taper\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\line_grating\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\line_grating\__init__.py to ipkissat3\picazzo\fibcoup\line_grating\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\line_grating\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\line_grating\layout.py to ipkissat3\picazzo\fibcoup\line_grating\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\segmented\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\segmented\__init__.py to ipkissat3\picazzo\fibcoup\segmented\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\segmented\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\segmented\layout.py to ipkissat3\picazzo\fibcoup\segmented\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\socket\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\socket\__init__.py to ipkissat3\picazzo\fibcoup\socket\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\socket\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\socket\layout.py to ipkissat3\picazzo\fibcoup\socket\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\socket_2d\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\socket_2d\__init__.py to ipkissat3\picazzo\fibcoup\socket_2d\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\socket_2d\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\socket_2d\layout.py to ipkissat3\picazzo\fibcoup\socket_2d\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\uniform\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\uniform\__init__.py to ipkissat3\picazzo\fibcoup\uniform\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\uniform\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\uniform\layout.py to ipkissat3\picazzo\fibcoup\uniform\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\uniform_2d\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\uniform_2d\__init__.py to ipkissat3\picazzo\fibcoup\uniform_2d\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\fibcoup\uniform_2d\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\fibcoup\uniform_2d\layout.py to ipkissat3\picazzo\fibcoup\uniform_2d\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\__init__.py to ipkissat3\picazzo\filters\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\mmi\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\mmi\__init__.py to ipkissat3\picazzo\filters\mmi\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\mmi\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\mmi\layout.py to ipkissat3\picazzo\filters\mmi\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\mmi_shallow\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\mmi_shallow\__init__.py to ipkissat3\picazzo\filters\mmi_shallow\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\mmi_shallow\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\mmi_shallow\layout.py to ipkissat3\picazzo\filters\mmi_shallow\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\multi_ring\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\multi_ring\__init__.py to ipkissat3\picazzo\filters\multi_ring\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\multi_ring\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\multi_ring\layout.py to ipkissat3\picazzo\filters\multi_ring\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\multi_ring\multi_ring_base.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\multi_ring\multi_ring_base.py to ipkissat3\picazzo\filters\multi_ring\multi_ring_base.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\mzi\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\mzi\__init__.py to ipkissat3\picazzo\filters\mzi\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\mzi\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\mzi\layout.py to ipkissat3\picazzo\filters\mzi\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\parallel_ring\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\parallel_ring\__init__.py to ipkissat3\picazzo\filters\parallel_ring\__init__.py.
RefactoringTool: Refactored ipkiss24\picazzo\filters\parallel_ring\layout.py

--- ipkiss24\ipkiss\process\__init__.py	(original)
+++ ipkiss24\ipkiss\process\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layer import PPLayer, ProcessPurposeLayer, ProcessProperty, PurposeProperty, ProcessLayer, PatternPurpose
+from .layer import PPLayer, ProcessPurposeLayer, ProcessProperty, PurposeProperty, ProcessLayer, PatternPurpose
--- ipkiss24\ipkiss\process\layer.py	(original)
+++ ipkiss24\ipkiss\process\layer.py	(refactored)
@@ -63,11 +63,10 @@
             DEFINED_PROCESS_LAYERS[extension] = L
             return L
 
-class ProcessLayer(StrongPropertyInitializer):
+class ProcessLayer(StrongPropertyInitializer, metaclass=MetaProcessLayerCreator):
     """ Process layer represents a specific process step which requires a defined mask pattern. 
         Typically this is a lithography step in.
         """
-    __metaclass__ = MetaProcessLayerCreator
     name = StringProperty(required = True)
     extension = IdStringProperty(required = True)
     def __init__(self, name, extension, **kwargs):
@@ -117,11 +116,10 @@
             return L
 
 
-class PatternPurpose(StrongPropertyInitializer):
+class PatternPurpose(StrongPropertyInitializer, metaclass=MetaPatternPurposeCreator):
     """ Pattern Purpose represents what should be done with the geometric patterns which is defined.
         e.g. etch, inversion, comment, ...
         """
-    __metaclass__ = MetaPatternPurposeCreator
     name = StringProperty(required = True)
     extension = IdStringProperty(required = True)
     doc = StringProperty(default="")
--- ipkiss24\ipkiss\process\layer_map.py	(original)
+++ ipkiss24\ipkiss\process\layer_map.py	(refactored)
@@ -46,7 +46,7 @@
             ln = self.process_layer_map.get(key.process, None)
             dt = self.purpose_datatype_map.get(key.purpose, None)
             if ln is None or dt is None: 
-                for pplayer, gdsiilayer in self.layer_map.items():
+                for pplayer, gdsiilayer in list(self.layer_map.items()):
                     if (key.process == pplayer.process) and (key.purpose == pplayer.purpose):
                         return gdsiilayer
                 self.__warn__(key)
@@ -77,10 +77,10 @@
     def define_layer_map(self):
         lm = dict()
         #iterate over all pplayers in TECH.PPLAYER
-        for pplayer_node_str in TECH.PPLAYER.keys():
+        for pplayer_node_str in list(TECH.PPLAYER.keys()):
             pplayer_node = getattr(TECH.PPLAYER, pplayer_node_str)
             if isinstance(pplayer_node, TechnologyTree):
-                for pplayer_str in pplayer_node.keys():
+                for pplayer_str in list(pplayer_node.keys()):
                     pplayer = getattr(pplayer_node, pplayer_str)
                     if isinstance(pplayer, ProcessPurposeLayer):
                         if pplayer.purpose in self.purpose_layer_map:
@@ -99,7 +99,7 @@
     def __getitem__(self, key, default = None):
         if isinstance(key, ProcessPurposeLayer):
             if not key in self.ignore_pplayer:
-                for pplayer, gdsiilayer in self.layer_map.items():
+                for pplayer, gdsiilayer in list(self.layer_map.items()):
                     if (pplayer == key):
                         return gdsiilayer                
                 self.__warn__(key)
@@ -144,7 +144,7 @@
     
     def define_gdsiilayer_map(self):
         lm = {}
-        for k, v in self.pplayer_map.items():
+        for k, v in list(self.pplayer_map.items()):
             if v in lm:
                 LOG.warning("PPLayer to GDSII layer mapping for GDSII %i:%i => %s:%s overwritten with %s:%s"
                             %(v[0],v[1],lm[v][0],lm[v][1],k[0],k[1]))
@@ -175,13 +175,13 @@
     
     def define_layer_process_map(self):
         lpm = {}
-        for k, v in self.process_layer_map.items():
+        for k, v in list(self.process_layer_map.items()):
             lpm[v] = k
         return lpm
     
     def define_datatype_purpose_map(self):
         dpm = {}
-        for k, v in self.purpose_datatype_map.items():
+        for k, v in list(self.purpose_datatype_map.items()):
             dpm[v] = k        
         return dpm
         
@@ -190,7 +190,7 @@
             pr = self.layer_process_map.get(key.number, None)
             pu = self.datatype_purpose_map.get(key.datatype, None)
             if pr is None or pu is None: 
-                for gdsiilayer,pplayer  in self.layer_map.items():
+                for gdsiilayer,pplayer  in list(self.layer_map.items()):
                     if (key.number == gdsiilayer.number) and (key.datatype == gdsiilayer.datatype):
                         return pplayer                
                 self.__warn__(key)                
@@ -227,7 +227,7 @@
     def define_layer_map(self):
         layer_map = super(GdsiiPPLayerInputMap, self).define_layer_map()
         reverse_layer_map = dict()
-        for pplayer, gdsiilayer in layer_map.items():
+        for pplayer, gdsiilayer in list(layer_map.items()):
             reverse_layer_map[(gdsiilayer.number,gdsiilayer.datatype)] = pplayer
         return reverse_layer_map
                 
--- ipkiss24\ipkiss\technology\technology.py	(original)
+++ ipkiss24\ipkiss\technology\technology.py	(refactored)
@@ -64,14 +64,14 @@
     def get_process_layers(self):
         from ipkiss.process.layer import ProcessLayerList, ProcessLayer
         pl = ProcessLayerList()
-        for k,v in self.__dict__.items():
+        for k,v in list(self.__dict__.items()):
             if isinstance(v, ProcessLayer):
                 pl.append(v)
         return pl
     
     def get_key_from_process_layer(self, layer):
         from ipkiss.process.layer import ProcessLayer
-        for k,v in self.__dict__.items():
+        for k,v in list(self.__dict__.items()):
             if isinstance(v,ProcessLayer) and v==layer:
                 return k
         return None
--- ipkiss24\ipkiss\visualisation\layer.py	(original)
+++ ipkiss24\ipkiss\visualisation\layer.py	(refactored)
@@ -31,4 +31,4 @@
 
 Layer.mixin(DisplayLayer)
 cycle_colors = [COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_MAGENTA, COLOR_YELLOW, COLOR_CYAN]
-DEFAULT_DISPLAY_LAYER_SET = [(D, DisplayStyle(color = cycle_colors[D%len(cycle_colors)], alpha = 0.5)) for D in xrange(256)]
+DEFAULT_DISPLAY_LAYER_SET = [(D, DisplayStyle(color = cycle_colors[D%len(cycle_colors)], alpha = 0.5)) for D in range(256)]
--- ipkiss24\picazzo\__init__.py	(original)
+++ ipkiss24\picazzo\__init__.py	(refactored)
@@ -24,6 +24,6 @@
 from .log import PICAZZO_LOG as LOG #enable logging output
 from . import settings 
 import sys
-print >>sys.stderr,settings.START_MESSAGE
+print(settings.START_MESSAGE, file=sys.stderr)
 
 
--- ipkiss24\picazzo\container\__init__.py	(original)
+++ ipkiss24\picazzo\container\__init__.py	(refactored)
@@ -19,10 +19,10 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from extend_ports import *
-from fanout import *
-from route_ports import *
-from suppress_ports import *
-from taper_ports import *
-from auto_taper_ports import *
+from .extend_ports import *
+from .fanout import *
+from .route_ports import *
+from .suppress_ports import *
+from .taper_ports import *
+from .auto_taper_ports import *
 
--- ipkiss24\picazzo\fibcoup\grating\layout.py	(original)
+++ ipkiss24\picazzo\fibcoup\grating\layout.py	(refactored)
@@ -49,7 +49,7 @@
     cells_positions = RestrictedProperty(restriction = RestrictType(dict), required = True) # should be elaborated?
 
     def define_elements(self, elems):
-        k = self.cells_positions.keys() 
+        k = list(self.cells_positions.keys()) 
         k.sort() #to ensure a deterministic build-up of the elements. -- FIXME : this should not be required, but the best solution right now to get the unit testing framework in order
         for cell in k:
             positions = self.cells_positions[cell]
--- ipkiss24\picazzo\filters\parallel_ring\layout.py	(original)
+++ ipkiss24\picazzo\filters\parallel_ring\layout.py	(refactored)RefactoringTool: Writing converted ipkiss24\picazzo\filters\parallel_ring\layout.py to ipkissat3\picazzo\filters\parallel_ring\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\ring\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\ring\__init__.py to ipkissat3\picazzo\filters\ring\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\ring\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\ring\layout.py to ipkissat3\picazzo\filters\ring\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\ring_ccw\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\ring_ccw\__init__.py to ipkissat3\picazzo\filters\ring_ccw\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\ring_ccw\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\ring_ccw\layout.py to ipkissat3\picazzo\filters\ring_ccw\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\ring_xing\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\ring_xing\__init__.py to ipkissat3\picazzo\filters\ring_xing\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\ring_xing\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\ring_xing\layout.py to ipkissat3\picazzo\filters\ring_xing\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\spline_ring\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\spline_ring\__init__.py to ipkissat3\picazzo\filters\spline_ring\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\filters\spline_ring\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\filters\spline_ring\layout.py to ipkissat3\picazzo\filters\spline_ring\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\__init__.py to ipkissat3\picazzo\io\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\adapter.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\adapter.py to ipkissat3\picazzo\io\adapter.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\block.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\block.py to ipkissat3\picazzo\io\block.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\column.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\column.py to ipkissat3\picazzo\io\column.py.
RefactoringTool: Refactored ipkiss24\picazzo\io\block_structure\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\block_structure\__init__.py to ipkissat3\picazzo\io\block_structure\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\block_structure\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\block_structure\layout.py to ipkissat3\picazzo\io\block_structure\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\io\cleave\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\cleave\__init__.py to ipkissat3\picazzo\io\cleave\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\cleave\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\cleave\layout.py to ipkissat3\picazzo\io\cleave\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\io\column_set\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\column_set\__init__.py to ipkissat3\picazzo\io\column_set\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\column_set\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\column_set\layout.py to ipkissat3\picazzo\io\column_set\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\io\fibcoup\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\fibcoup\__init__.py to ipkissat3\picazzo\io\fibcoup\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\fibcoup\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\fibcoup\layout.py to ipkissat3\picazzo\io\fibcoup\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\io\fibcoup_2d\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\fibcoup_2d\__init__.py to ipkissat3\picazzo\io\fibcoup_2d\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\fibcoup_2d\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\fibcoup_2d\layout.py to ipkissat3\picazzo\io\fibcoup_2d\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\io\io_array\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\io_array\__init__.py to ipkissat3\picazzo\io\io_array\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\io\io_array\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\io\io_array\layout.py to ipkissat3\picazzo\io\io_array\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\markers\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\markers\__init__.py to ipkissat3\picazzo\markers\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\markers\file_marker.py
RefactoringTool: Writing converted ipkiss24\picazzo\markers\file_marker.py to ipkissat3\picazzo\markers\file_marker.py.
RefactoringTool: No changes to ipkiss24\picazzo\markers\marker.py
RefactoringTool: Writing converted ipkiss24\picazzo\markers\marker.py to ipkissat3\picazzo\markers\marker.py.
RefactoringTool: No changes to ipkiss24\picazzo\markers\vernier.py
RefactoringTool: Writing converted ipkiss24\picazzo\markers\vernier.py to ipkissat3\picazzo\markers\vernier.py.
RefactoringTool: No changes to ipkiss24\picazzo\phc\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\phc\__init__.py to ipkissat3\picazzo\phc\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\phc\hetero.py
RefactoringTool: Writing converted ipkiss24\picazzo\phc\hetero.py to ipkissat3\picazzo\phc\hetero.py.
RefactoringTool: No changes to ipkiss24\picazzo\phc\holes.py
RefactoringTool: Writing converted ipkiss24\picazzo\phc\holes.py to ipkissat3\picazzo\phc\holes.py.
RefactoringTool: No changes to ipkiss24\picazzo\phc\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\phc\layout.py to ipkissat3\picazzo\phc\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\phc\w1.py
RefactoringTool: Writing converted ipkiss24\picazzo\phc\w1.py to ipkissat3\picazzo\phc\w1.py.
RefactoringTool: No changes to ipkiss24\picazzo\process\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\process\__init__.py to ipkissat3\picazzo\process\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\slab\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\slab\__init__.py to ipkissat3\picazzo\slab\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\slab\aperture_mounting.py
RefactoringTool: Writing converted ipkiss24\picazzo\slab\aperture_mounting.py to ipkissat3\picazzo\slab\aperture_mounting.py.
RefactoringTool: No changes to ipkiss24\picazzo\slab\star_coupler.py
RefactoringTool: Writing converted ipkiss24\picazzo\slab\star_coupler.py to ipkissat3\picazzo\slab\star_coupler.py.
RefactoringTool: No changes to ipkiss24\picazzo\tools\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\tools\__init__.py to ipkissat3\picazzo\tools\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\tools\import_layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\tools\import_layout.py to ipkissat3\picazzo\tools\import_layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\tools\view_2d.py
RefactoringTool: Writing converted ipkiss24\picazzo\tools\view_2d.py to ipkissat3\picazzo\tools\view_2d.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\__init__.py to ipkissat3\picazzo\wg\__init__.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\aperture\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\aperture\__init__.py to ipkissat3\picazzo\wg\aperture\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\aperture\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\aperture\layout.py to ipkissat3\picazzo\wg\aperture\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\aperture_multi\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\aperture_multi\__init__.py to ipkissat3\picazzo\wg\aperture_multi\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\aperture_multi\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\aperture_multi\layout.py to ipkissat3\picazzo\wg\aperture_multi\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\bend\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\bend\__init__.py to ipkissat3\picazzo\wg\bend\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\bend\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\bend\layout.py to ipkissat3\picazzo\wg\bend\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\coupler\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\coupler\__init__.py to ipkissat3\picazzo\wg\coupler\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\coupler\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\coupler\layout.py to ipkissat3\picazzo\wg\coupler\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\crossing\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\crossing\__init__.py to ipkissat3\picazzo\wg\crossing\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\crossing\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\crossing\layout.py to ipkissat3\picazzo\wg\crossing\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\grating\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\grating\__init__.py to ipkissat3\picazzo\wg\grating\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\grating\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\grating\layout.py to ipkissat3\picazzo\wg\grating\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\sbend\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\sbend\__init__.py to ipkissat3\picazzo\wg\sbend\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\sbend\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\sbend\layout.py to ipkissat3\picazzo\wg\sbend\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\spiral\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\spiral\__init__.py to ipkissat3\picazzo\wg\spiral\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\spiral\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\spiral\layout.py to ipkissat3\picazzo\wg\spiral\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\spline_coupler\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\spline_coupler\__init__.py to ipkissat3\picazzo\wg\spline_coupler\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\spline_coupler\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\spline_coupler\layout.py to ipkissat3\picazzo\wg\spline_coupler\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\splitter_tree\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\splitter_tree\__init__.py to ipkissat3\picazzo\wg\splitter_tree\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\splitter_tree\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\splitter_tree\layout.py to ipkissat3\picazzo\wg\splitter_tree\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\splitters\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\splitters\__init__.py to ipkissat3\picazzo\wg\splitters\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\splitters\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\splitters\layout.py to ipkissat3\picazzo\wg\splitters\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\taper\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\taper\__init__.py to ipkissat3\picazzo\wg\taper\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\taper\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\taper\layout.py to ipkissat3\picazzo\wg\taper\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\taper_extended\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\taper_extended\__init__.py to ipkissat3\picazzo\wg\taper_extended\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\taper_extended\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\taper_extended\layout.py to ipkissat3\picazzo\wg\taper_extended\layout.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\tapers\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\__init__.py to ipkissat3\picazzo\wg\tapers\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\tapers\auto_taper\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\auto_taper\__init__.py to ipkissat3\picazzo\wg\tapers\auto_taper\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\tapers\auto_taper\auto_taper.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\auto_taper\auto_taper.py to ipkissat3\picazzo\wg\tapers\auto_taper\auto_taper.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\tapers\auto_taper\auto_taper_db.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\auto_taper\auto_taper_db.py to ipkissat3\picazzo\wg\tapers\auto_taper\auto_taper_db.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\tapers\basic\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\basic\__init__.py to ipkissat3\picazzo\wg\tapers\basic\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\tapers\basic\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\basic\layout.py to ipkissat3\picazzo\wg\tapers\basic\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\tapers\deep_shallow\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\deep_shallow\__init__.py to ipkissat3\picazzo\wg\tapers\deep_shallow\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\tapers\deep_shallow\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\deep_shallow\layout.py to ipkissat3\picazzo\wg\tapers\deep_shallow\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\tapers\linear\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\linear\__init__.py to ipkissat3\picazzo\wg\tapers\linear\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\tapers\linear\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\linear\layout.py to ipkissat3\picazzo\wg\tapers\linear\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\tapers\parabolic\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\parabolic\__init__.py to ipkissat3\picazzo\wg\tapers\parabolic\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\tapers\parabolic\layout.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\tapers\parabolic\layout.py to ipkissat3\picazzo\wg\tapers\parabolic\layout.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\wgdef\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdef\__init__.py to ipkissat3\picazzo\wg\wgdef\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\wgdef\wgdef.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdef\wgdef.py to ipkissat3\picazzo\wg\wgdef\wgdef.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\wgdefs\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\__init__.py to ipkissat3\picazzo\wg\wgdefs\__init__.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\wgdefs\slot\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\slot\__init__.py to ipkissat3\picazzo\wg\wgdefs\slot\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\wgdefs\slot\tapers.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\slot\tapers.py to ipkissat3\picazzo\wg\wgdefs\slot\tapers.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\wgdefs\slot\wgdef.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\slot\wgdef.py to ipkissat3\picazzo\wg\wgdefs\slot\wgdef.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\wgdefs\thin\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\thin\__init__.py to ipkissat3\picazzo\wg\wgdefs\thin\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\wgdefs\thin\tapers.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\thin\tapers.py to ipkissat3\picazzo\wg\wgdefs\thin\tapers.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\wgdefs\thin\wgdef.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\thin\wgdef.py to ipkissat3\picazzo\wg\wgdefs\thin\wgdef.py.
RefactoringTool: Refactored ipkiss24\picazzo\wg\wgdefs\wg_fc\__init__.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\wg_fc\__init__.py to ipkissat3\picazzo\wg\wgdefs\wg_fc\__init__.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\wgdefs\wg_fc\tapers.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\wg_fc\tapers.py to ipkissat3\picazzo\wg\wgdefs\wg_fc\tapers.py.
RefactoringTool: No changes to ipkiss24\picazzo\wg\wgdefs\wg_fc\wgdef.py
RefactoringTool: Writing converted ipkiss24\picazzo\wg\wgdefs\wg_fc\wgdef.py to ipkissat3\picazzo\wg\wgdefs\wg_fc\wgdef.py.
RefactoringTool: No changes to ipkiss24\pysics\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\__init__.py to ipkissat3\pysics\__init__.py.
RefactoringTool: No changes to ipkiss24\pysics\basics\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\__init__.py to ipkissat3\pysics\basics\__init__.py.
RefactoringTool: No changes to ipkiss24\pysics\basics\domain.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\domain.py to ipkissat3\pysics\basics\domain.py.
RefactoringTool: No changes to ipkiss24\pysics\basics\environment.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\environment.py to ipkissat3\pysics\basics\environment.py.
RefactoringTool: No changes to ipkiss24\pysics\basics\field.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\field.py to ipkissat3\pysics\basics\field.py.
RefactoringTool: No changes to ipkiss24\pysics\basics\field_profile.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\field_profile.py to ipkissat3\pysics\basics\field_profile.py.
RefactoringTool: Refactored ipkiss24\pysics\basics\waveguide.py

@@ -118,7 +118,7 @@
         
         x = self.simple_rings[-1].east_ports.y_sorted()[-1].transform_copy(self.transformations[-1]).position.x
         
-        for (r, t) in reversed(zip(self.simple_rings, self.transformations)):
+        for (r, t) in reversed(list(zip(self.simple_rings, self.transformations))):
             y_r = r.west_ports.y_sorted()[-1].transform_copy(t).position.y
             s = y - y_r - 2 * self.rbend_radius 
             
--- ipkiss24\picazzo\io\block_structure\__init__.py	(original)
+++ ipkiss24\picazzo\io\block_structure\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\io\cleave\__init__.py	(original)
+++ ipkiss24\picazzo\io\cleave\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\io\column_set\__init__.py	(original)
+++ ipkiss24\picazzo\io\column_set\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\io\fibcoup\__init__.py	(original)
+++ ipkiss24\picazzo\io\fibcoup\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\io\fibcoup_2d\__init__.py	(original)
+++ ipkiss24\picazzo\io\fibcoup_2d\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\io\io_array\__init__.py	(original)
+++ ipkiss24\picazzo\io\io_array\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\phc\w1.py	(original)
+++ ipkiss24\picazzo\phc\w1.py	(refactored)
@@ -411,7 +411,7 @@
             hole_sizes['Z'] = self.defect_diameter
         cav_str = ""
         for i in range(len(self.cavity_holes)):
-            hole_sizes[chr(66+i)] = self.cavity_holes.values()[i]
+            hole_sizes[chr(66+i)] = list(self.cavity_holes.values())[i]
             cav_str += chr(66+i) + " "
         cav_str += "  "
         for i in range(len(self.cavity_holes), 0, -1):
--- ipkiss24\picazzo\tools\view_2d.py	(original)
+++ ipkiss24\picazzo\tools\view_2d.py	(refactored)
@@ -25,10 +25,10 @@
 import sys
 
 def vfabrication_for_gds(gds_file):
-    print "Reading %s..."%(gds_file)
+    print("Reading %s..."%(gds_file))
     I = InputGdsii(file(gds_file, "rb"))
     L = I.read()
-    print "Done reading the gds. Now starting the virtual fabrication..."
+    print("Done reading the gds. Now starting the virtual fabrication...")
     L.visualize_structures_2d()
 
     
--- ipkiss24\picazzo\wg\aperture\__init__.py	(original)
+++ ipkiss24\picazzo\wg\aperture\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\aperture_multi\__init__.py	(original)
+++ ipkiss24\picazzo\wg\aperture_multi\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\bend\__init__.py	(original)
+++ ipkiss24\picazzo\wg\bend\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\coupler\__init__.py	(original)
+++ ipkiss24\picazzo\wg\coupler\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\crossing\__init__.py	(original)
+++ ipkiss24\picazzo\wg\crossing\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\grating\__init__.py	(original)
+++ ipkiss24\picazzo\wg\grating\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\sbend\__init__.py	(original)
+++ ipkiss24\picazzo\wg\sbend\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\spiral\__init__.py	(original)
+++ ipkiss24\picazzo\wg\spiral\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\splitter_tree\__init__.py	(original)
+++ ipkiss24\picazzo\wg\splitter_tree\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\splitters\__init__.py	(original)
+++ ipkiss24\picazzo\wg\splitters\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\taper\__init__.py	(original)
+++ ipkiss24\picazzo\wg\taper\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\taper_extended\__init__.py	(original)
+++ ipkiss24\picazzo\wg\taper_extended\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\tapers\basic\__init__.py	(original)
+++ ipkiss24\picazzo\wg\tapers\basic\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\tapers\deep_shallow\__init__.py	(original)
+++ ipkiss24\picazzo\wg\tapers\deep_shallow\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\tapers\linear\__init__.py	(original)
+++ ipkiss24\picazzo\wg\tapers\linear\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\tapers\parabolic\__init__.py	(original)
+++ ipkiss24\picazzo\wg\tapers\parabolic\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from layout import *
+from .layout import *
--- ipkiss24\picazzo\wg\wgdef\__init__.py	(original)
+++ ipkiss24\picazzo\wg\wgdef\__init__.py	(refactored)
@@ -19,4 +19,4 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from wgdef import *
+from .wgdef import *
--- ipkiss24\picazzo\wg\wgdefs\slot\__init__.py	(original)
+++ ipkiss24\picazzo\wg\wgdefs\slot\__init__.py	(refactored)
@@ -19,5 +19,5 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from wgdef import *
-from tapers import *
+from .wgdef import *
+from .tapers import *
--- ipkiss24\picazzo\wg\wgdefs\thin\__init__.py	(original)
+++ ipkiss24\picazzo\wg\wgdefs\thin\__init__.py	(refactored)
@@ -19,5 +19,5 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from wgdef import *
-from tapers import *
+from .wgdef import *
+from .tapers import *
--- ipkiss24\picazzo\wg\wgdefs\wg_fc\__init__.py	(original)
+++ ipkiss24\picazzo\wg\wgdefs\wg_fc\__init__.py	(refactored)
@@ -19,5 +19,5 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from wgdef import *
-from tapers import *
+from .wgdef import *
+from .tapers import *
--- ipkiss24\pysics\basics\waveguide.py	(original)
+++ ipkiss24\pysics\basics\waveguide.py	(refactored)
@@ -58,11 +58,11 @@
             return None
         
     def set_mode_name(self, item, name):
-        if name in self.namedict.keys():
+        if name in list(self.namedict.keys()):
             return
         if not item in self:
             raise ValueError("Mode %s is not in list"%str(item))
-        for (key,it) in self.namedict.iteritems():
+        for (key,it) in self.namedict.items():
             if it == item:
                 it = self.namedict.pop(key)
                 self.namedict[name] = itRefactoringTool: Writing converted ipkiss24\pysics\basics\waveguide.py to ipkissat3\pysics\basics\waveguide.py.
RefactoringTool: No changes to ipkiss24\pysics\basics\geometry\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\geometry\__init__.py to ipkissat3\pysics\basics\geometry\__init__.py.
RefactoringTool: Refactored ipkiss24\pysics\basics\geometry\geometry.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\geometry\geometry.py to ipkissat3\pysics\basics\geometry\geometry.py.
RefactoringTool: Refactored ipkiss24\pysics\basics\geometry\image.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\geometry\image.py to ipkissat3\pysics\basics\geometry\image.py.
RefactoringTool: No changes to ipkiss24\pysics\basics\geometry\material_stack.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\geometry\material_stack.py to ipkissat3\pysics\basics\geometry\material_stack.py.
RefactoringTool: No changes to ipkiss24\pysics\basics\material\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\material\__init__.py to ipkissat3\pysics\basics\material\__init__.py.
RefactoringTool: Refactored ipkiss24\pysics\basics\material\material.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\material\material.py to ipkissat3\pysics\basics\material\material.py.
RefactoringTool: Refactored ipkiss24\pysics\basics\material\material_stack.py
RefactoringTool: Writing converted ipkiss24\pysics\basics\material\material_stack.py to ipkissat3\pysics\basics\material\material_stack.py.
RefactoringTool: Refactored ipkiss24\pysics\electromagnetics\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\electromagnetics\__init__.py to ipkissat3\pysics\electromagnetics\__init__.py.
RefactoringTool: No changes to ipkiss24\pysics\electromagnetics\environment.py
RefactoringTool: Writing converted ipkiss24\pysics\electromagnetics\environment.py to ipkissat3\pysics\electromagnetics\environment.py.
RefactoringTool: No changes to ipkiss24\pysics\electromagnetics\field.py
RefactoringTool: Writing converted ipkiss24\pysics\electromagnetics\field.py to ipkissat3\pysics\electromagnetics\field.py.
RefactoringTool: No changes to ipkiss24\pysics\electromagnetics\field_profile.py
RefactoringTool: Writing converted ipkiss24\pysics\electromagnetics\field_profile.py to ipkissat3\pysics\electromagnetics\field_profile.py.
RefactoringTool: No changes to ipkiss24\pysics\electromagnetics\material.py
RefactoringTool: Writing converted ipkiss24\pysics\electromagnetics\material.py to ipkissat3\pysics\electromagnetics\material.py.
RefactoringTool: No changes to ipkiss24\pysics\materials\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\materials\__init__.py to ipkissat3\pysics\materials\__init__.py.
RefactoringTool: No changes to ipkiss24\pysics\materials\all.py
RefactoringTool: Writing converted ipkiss24\pysics\materials\all.py to ipkissat3\pysics\materials\all.py.
RefactoringTool: Refactored ipkiss24\pysics\materials\electromagnetics.py
RefactoringTool: Writing converted ipkiss24\pysics\materials\electromagnetics.py to ipkissat3\pysics\materials\electromagnetics.py.
RefactoringTool: Refactored ipkiss24\pysics\optics\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\optics\__init__.py to ipkissat3\pysics\optics\__init__.py.
RefactoringTool: No changes to ipkiss24\pysics\optics\environment.py
RefactoringTool: Writing converted ipkiss24\pysics\optics\environment.py to ipkissat3\pysics\optics\environment.py.
RefactoringTool: No changes to ipkiss24\pysics\optics\material.py
RefactoringTool: Writing converted ipkiss24\pysics\optics\material.py to ipkissat3\pysics\optics\material.py.
RefactoringTool: No changes to ipkiss24\pysics\optics\waveguide.py
RefactoringTool: Writing converted ipkiss24\pysics\optics\waveguide.py to ipkissat3\pysics\optics\waveguide.py.
RefactoringTool: Refactored ipkiss24\pysics\thermal\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\thermal\__init__.py to ipkissat3\pysics\thermal\__init__.py.
RefactoringTool: No changes to ipkiss24\pysics\thermal\environment.py
RefactoringTool: Writing converted ipkiss24\pysics\thermal\environment.py to ipkissat3\pysics\thermal\environment.py.
RefactoringTool: No changes to ipkiss24\pysics\thermal\field.py
RefactoringTool: Writing converted ipkiss24\pysics\thermal\field.py to ipkissat3\pysics\thermal\field.py.
RefactoringTool: No changes to ipkiss24\pysics\visualisation\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\visualisation\__init__.py to ipkissat3\pysics\visualisation\__init__.py.
RefactoringTool: No changes to ipkiss24\pysics\visualisation\geometry\__init__.py
RefactoringTool: Writing converted ipkiss24\pysics\visualisation\geometry\__init__.py to ipkissat3\pysics\visualisation\geometry\__init__.py.
RefactoringTool: Refactored ipkiss24\pysics\visualisation\geometry\material_stack.py

--- ipkiss24\pysics\basics\geometry\geometry.py	(original)
+++ ipkiss24\pysics\basics\geometry\geometry.py	(refactored)
@@ -37,16 +37,16 @@
     
     """ abstract Geometry base class """
     def get_material(self, coordinate):
-        raise AssertionError, "__Geometry__ instance or subclass should have material(self, coordinate) method"
+        raise AssertionError("__Geometry__ instance or subclass should have material(self, coordinate) method")
 
     def get_environment(self, coordinate):
-        raise AssertionError, "__Geometry__ instance or subclass should have environment(self, coordinate) method"
+        raise AssertionError("__Geometry__ instance or subclass should have environment(self, coordinate) method")
 
     def size_info(self):
-        raise AssertionError, "__Geometry__ instance or subclass should have size_info() method"
+        raise AssertionError("__Geometry__ instance or subclass should have size_info() method")
     
     def get_material_array(self, **kwargs):
-        raise AssertionError, "__Geometry__ instance or subclass should have get_material_array(self) method"    
+        raise AssertionError("__Geometry__ instance or subclass should have get_material_array(self) method")    
     
     def __repr__(self):
         return "<Geometry %s>" % self.name
--- ipkiss24\pysics\basics\geometry\image.py	(original)
+++ ipkiss24\pysics\basics\geometry\image.py	(refactored)
@@ -96,7 +96,7 @@
         pixel_coord = (int(coordinate[0]/self.grid), int(coordinate[1]/self.grid))  
         try:
             layers_at_coordinate = self.layer_superposition_array[pixel_coord[0], pixel_coord[1]]
-        except IndexError, e: #some engines will request the material 1 step over the border of the simulation volume
+        except IndexError as e: #some engines will request the material 1 step over the border of the simulation volume
             if (pixel_coord[0] >= self.len_0):
                 X = self.len_0 - 1
             else:
@@ -121,7 +121,7 @@
     
     def __init__(self, **kwargs):        
         super(__ProcessSuperpositionMaterialGeometry2D__, self).__init__(**kwargs)
-        self.processes = self.process_flags.keys()
+        self.processes = list(self.process_flags.keys())
         self.processes.sort()
         self.len_0 = self.process_flags[self.processes[0]].shape[0]
         self.len_1 = self.process_flags[self.processes[0]].shape[1]
@@ -149,7 +149,7 @@
         pixel_coord = (int(coordinate[0]/self.grid), int(coordinate[1]/self.grid))  
         try:
             processes_at_coordinate = self.__processes_at_coordinate(pixel_coord)                    
-        except IndexError, e: #some engines will request the material 1 step over the border of the simulation volume
+        except IndexError as e: #some engines will request the material 1 step over the border of the simulation volume
             if (pixel_coord[0] >= self.len_0):
                 X = self.len_0 - 1
             else:
--- ipkiss24\pysics\basics\material\material.py	(original)
+++ ipkiss24\pysics\basics\material\material.py	(refactored)
@@ -58,7 +58,7 @@
     store_id = dict() #key = the binary id of the material
     
     def get_number_of_materials_in_store(self):
-        return len(self.store_id.keys())
+        return len(list(self.store_id.keys()))
     
     def __getitem__(self,key):
         if isinstance(key,int):
@@ -76,10 +76,10 @@
         self.__dict__["id_counter"] = self.id_counter + 1 
         
     def __iter__(self):
-        return self.store_id.iteritems()        
+        return iter(self.store_id.items())        
         
     def find_item_key(self, item):
-        for k,v in self.__dict__.items():
+        for k,v in list(self.__dict__.items()):
             if isinstance(v,Material) and v == item:
                 return k
                 
--- ipkiss24\pysics\basics\material\material_stack.py	(original)
+++ ipkiss24\pysics\basics\material\material_stack.py	(refactored)
@@ -181,13 +181,13 @@
         self.__dict__["id_counter"] = self.id_counter + 1       
     
     def get_key_from_material_stack(self, matstack):
-        for (k,v) in self.__dict__.items():
+        for (k,v) in list(self.__dict__.items()):
             if isinstance(v,MaterialStack) and v == matstack:
                 return k
         return None
     
     def get_number_of_material_stacks_in_store(self):
-        return len(self.store_id.keys())    
+        return len(list(self.store_id.keys()))    
     
     def get_numpy_matrix_representation_of_all_material_stacks(self):
         """Make a numpy matrix with for each layer in each material stack a row that contains:
@@ -197,7 +197,7 @@
         
         #first iteration: find out how many rows should be included
         total_number_of_layers = 0
-        for key in self.store_id.keys():
+        for key in list(self.store_id.keys()):
             total_number_of_layers += self.store_id[key].get_number_of_layers()
         
         #create numpy matrix
@@ -205,7 +205,7 @@
         
         #second iteration: add contributions to final matrix
         current_row_index = 0        
-        for key in self.store_id.keys():
+        for key in list(self.store_id.keys()):
             mat_stack = self.store_id[key]
             number_of_layers = mat_stack.get_number_of_layers()
             nm[current_row_index:(current_row_index+number_of_layers),:] = mat_stack.get_numpy_matrix_representation()
@@ -218,13 +218,13 @@
         self.id_counter = 1
         
     def get_material_stack_id(self, material_stack):
-        for (i,mstack) in self.store_id.items():
+        for (i,mstack) in list(self.store_id.items()):
             if mstack == material_stack:
                 return i
         raise Exception("Material stack with id = %i not found." %material_stack)
     
     def __iter__(self):
-        return self.store_id.iteritems()
-    
-
-
+        return iter(self.store_id.items())
+    
+
+
--- ipkiss24\pysics\electromagnetics\__init__.py	(original)
+++ ipkiss24\pysics\electromagnetics\__init__.py	(refactored)
@@ -19,9 +19,9 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-import material
-import environment
-import field
+from . import material
+from . import environment
+from . import field
 import pysics.materials.electromagnetics
 from ..basics.domain import __Domain__
 
--- ipkiss24\pysics\materials\electromagnetics.py	(original)
+++ ipkiss24\pysics\materials\electromagnetics.py	(refactored)
@@ -29,13 +29,13 @@
 material_id_to_epsilon = dict()
 
 def fill_material_id_to_epsilon_map():
-    for id, material in MATERIAL_FACTORY.store_id.items():
+    for id, material in list(MATERIAL_FACTORY.store_id.items()):
         material_id_to_epsilon[id] = material.epsilon
 
 def get_epsilon_for_material_id(id):
     try:
         return material_id_to_epsilon[id]
-    except KeyError, e:
+    except KeyError as e:
         fill_material_id_to_epsilon_map()
         return material_id_to_epsilon[id]
     
--- ipkiss24\pysics\optics\__init__.py	(original)
+++ ipkiss24\pysics\optics\__init__.py	(refactored)
@@ -19,8 +19,8 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-import material
-import environment
+from . import material
+from . import environment
 
 from ..basics.domain import __Domain__
 
--- ipkiss24\pysics\thermal\__init__.py	(original)
+++ ipkiss24\pysics\thermal\__init__.py	(refactored)
@@ -19,8 +19,8 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-import environment
-import field
+from . import environment
+from . import field
 
 from ..basics.domain import __Domain__
 
--- ipkiss24\pysics\visualisation\geometry\material_stack.py	(original)
+++ ipkiss24\pysics\visualisation\geometry\material_stack.py	(refactored)
@@ -84,8 +84,8 @@
 
         # legend
         prop = font_manager.FontProperties(size=10) 
-        patches_for_legend = [ref[0] for ref in legend_refs.values()]
-        labels_for_legend = [ref[1] for ref in legend_refs.values()]
+        patches_for_legend = [ref[0] for ref in list(legend_refs.values())]RefactoringTool: Writing converted ipkiss24\pysics\visualisation\geometry\material_stack.py to ipkissat3\pysics\visualisation\geometry\material_stack.py.
RefactoringTool: Refactored ipkiss24\pysimul\__init__.py
RefactoringTool: Writing converted ipkiss24\pysimul\__init__.py to ipkissat3\pysimul\__init__.py.
RefactoringTool: No changes to ipkiss24\pysimul\exc.py
RefactoringTool: Writing converted ipkiss24\pysimul\exc.py to ipkissat3\pysimul\exc.py.
RefactoringTool: No changes to ipkiss24\pysimul\log.py
RefactoringTool: Writing converted ipkiss24\pysimul\log.py to ipkissat3\pysimul\log.py.
RefactoringTool: No changes to ipkiss24\pysimul\settings.py
RefactoringTool: Writing converted ipkiss24\pysimul\settings.py to ipkissat3\pysimul\settings.py.
RefactoringTool: No changes to ipkiss24\pysimul\integration\__init__.py
RefactoringTool: Writing converted ipkiss24\pysimul\integration\__init__.py to ipkissat3\pysimul\integration\__init__.py.
RefactoringTool: No changes to ipkiss24\pysimul\integration\camfr_integration.py
RefactoringTool: Writing converted ipkiss24\pysimul\integration\camfr_integration.py to ipkissat3\pysimul\integration\camfr_integration.py.
RefactoringTool: Refactored ipkiss24\pysimul\integration\component_integration.py
RefactoringTool: Writing converted ipkiss24\pysimul\integration\component_integration.py to ipkissat3\pysimul\integration\component_integration.py.
RefactoringTool: No changes to ipkiss24\pysimul\runtime\__init__.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\__init__.py to ipkissat3\pysimul\runtime\__init__.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\animation.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\animation.py to ipkissat3\pysimul\runtime\animation.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\basic.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\basic.py to ipkissat3\pysimul\runtime\basic.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\definition.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\definition.py to ipkissat3\pysimul\runtime\definition.py.
RefactoringTool: No changes to ipkiss24\pysimul\runtime\engine.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\engine.py to ipkissat3\pysimul\runtime\engine.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\params.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\params.py to ipkissat3\pysimul\runtime\params.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\procedure.py

+        labels_for_legend = [ref[1] for ref in list(legend_refs.values())]
         axes.legend(patches_for_legend, labels_for_legend, loc=(0.5,0.9), prop=prop)
             
         return fig
@@ -113,7 +113,7 @@
 
             # polygon cell with one shape
             polys = tvtk.CellArray()
-            cells = numpy.array([n_points] + range(n_points)) # number of points in the cell, and cell indices
+            cells = numpy.array([n_points] + list(range(n_points))) # number of points in the cell, and cell indices
             polys.set_cells(1, cells) # number of cells, list of cell points
             pd = tvtk.PolyData()
             pd.points = points
@@ -194,7 +194,7 @@
         cell_array = tvtk.CellArray()
         cell_array.set_cells(n_cells, numpy.hstack(wedge_cell_indices))
         cell_types = numpy.array([wedge_type for i in range(n_cells)])
-        cell_offset = numpy.array(range(0,7 * n_cells, 7)) # each cell has one counter and 6 points
+        cell_offset = numpy.array(list(range(0,7 * n_cells, 7))) # each cell has one counter and 6 points
 
         # Now create the UnstructuredGrid which will contain the material data.
         ug = tvtk.UnstructuredGrid(points=numpy.vstack(wedge_points))
--- ipkiss24\pysimul\__init__.py	(original)
+++ ipkiss24\pysimul\__init__.py	(refactored)
@@ -20,6 +20,6 @@
 # Contact: ipkiss@intec.ugent.be
 
 from .log import PYSIMUL_LOG as LOG
-import settings
+from . import settings
 
-print settings.START_MESSAGE
+print(settings.START_MESSAGE)
--- ipkiss24\pysimul\integration\component_integration.py	(original)
+++ ipkiss24\pysimul\integration\component_integration.py	(refactored)
@@ -37,7 +37,7 @@
 from pysics.basics.environment import DEFAULT_ENVIRONMENT
 from ipkiss.plugins.photonics.wg.basic import WgElDefinition
 from ipkiss.technology.technology import *
-import cPickle
+import pickle
 from math import cos, sin, pi
 from pysimul.log import PYSIMUL_LOG as LOG
 import logging
--- ipkiss24\pysimul\runtime\animation.py	(original)
+++ ipkiss24\pysimul\runtime\animation.py	(refactored)
@@ -24,26 +24,26 @@
 
 def create_animated_gif_from_hdf5(field_filename, eps_filename, remove_png = True, uniform_colormap_range = True):
 	f = h5py.File(field_filename, 'r')
-	ds = f.items()[0][1]
+	ds = list(f.items())[0][1]
 	max_time = ds.shape[2]-1
-	print "Creating animated gif from files %s and %s (time steps : %i)." %(field_filename, eps_filename, max_time)
+	print("Creating animated gif from files %s and %s (time steps : %i)." %(field_filename, eps_filename, max_time))
 	png_filename_template = field_filename.replace(".h5",".t*.png")
-	print "Removing old png files : %s" %png_filename_template
+	print("Removing old png files : %s" %png_filename_template)
 	os.system("rm %s" %png_filename_template)
-	print "Creating png files ...."	
+	print("Creating png files ....")	
 	if (uniform_colormap_range):
 		params = "-R"
 	else:
 		params = ""
 	cmd = "h5topng %s -t 0:%i -Zc dkbluered %s -a gray -A %s" %(params, max_time, field_filename, eps_filename)
 	os.system(cmd)
-	print "Converting png files to animated gif...."
+	print("Converting png files to animated gif....")
 	gif_filename = field_filename.replace(".h5",".gif")
 	os.system("convert %s %s" %(png_filename_template, gif_filename))
 	if (remove_png):
-		print "Removing png files..." 
+		print("Removing png files...") 
 		os.system("rm %s" %png_filename_template)
-	print "Done with creating the animated gif : %s" %gif_filename
+	print("Done with creating the animated gif : %s" %gif_filename)
 	return gif_filename
 
 
--- ipkiss24\pysimul\runtime\basic.py	(original)
+++ ipkiss24\pysimul\runtime\basic.py	(refactored)
@@ -187,8 +187,8 @@
 	    filename = "fluxplane_%s_%s.pickle" %(self.north, self.south)
 	f = open(filename, 'wb')
 	LOG.debug("Persisting Fluxplane to file : %s" %filename)
-	import cPickle
-	cPickle.dump(self,f)
+	import pickle
+	pickle.dump(self,f)
 	f.close()	  	
     
     def save_hdf5(self, filename):
@@ -347,7 +347,7 @@
 	if filename == None:
 	    try:
 		filename = self.default_filename_without_extension + ".datacollectors.pysimul.png"
-	    except Exception,e :
+	    except Exception as e :
 		raise PythonSimulateException("Could not find a default filename for the 'visualizeDatacollectorsToFile' function. Fatal error.")	    
 	if not os.path.isfile(filename):
 	    self.visualize_datacollectors_to_file_function(filename)	
--- ipkiss24\pysimul\runtime\definition.py	(original)
+++ ipkiss24\pysimul\runtime\definition.py	(refactored)
@@ -22,7 +22,7 @@
 from ipcore.all import *
 from pysimul.runtime.basic import *
 from pysimul.runtime.procedure import *
-import cPickle
+import pickle
 import glob
 
 
@@ -68,7 +68,7 @@
 			filename = self.__get_default_filename_without_extension()+ '.def.pysimul'	
 		f = open(filename, 'wb')
 		LOG.debug("Persisting simulation definition to file : %s" %filename)
-		cPickle.dump(self,f)
+		pickle.dump(self,f)
 		f.close()
 		return filename
 		
@@ -78,7 +78,7 @@
 			filename = self.__get_default_filename_without_extension()		
 			filename = filename + '.datacollectors.pysimul'
 		f = open(filename, 'wb')
-		cPickle.dump(self.landscape.datacollectors,f)
+		pickle.dump(self.landscape.datacollectors,f)
 		f.close()		
 		self.save_datacollectors_to_file_function(filename+".png")
 		
@@ -87,7 +87,7 @@
 		'''deserialize a SimulationDefinition from file'''
 		LOG.debug("Loading simulation definition from file : %s" %filename)		
 		f = open(filename,'rb')
-		simul_def = cPickle.load(f)
+		simul_def = pickle.load(f)
 		f.close()
 		return simul_def
 	
--- ipkiss24\pysimul\runtime\params.py	(original)
+++ ipkiss24\pysimul\runtime\params.py	(refactored)
@@ -32,7 +32,7 @@
 	def __set_properties__(self, obj, kwargs):
 		props = obj.__unlocked_properties__()
 		kwargs_to_assign = dict()
-		for name,val in kwargs.items():
+		for name,val in list(kwargs.items()):
 			if name in props:
 				kwargs_to_assign[name] = val
 		obj.__assign_properties__(kwargs_to_assign)
@@ -50,7 +50,7 @@
 			if (not isinstance(p, dict)):
 				raise PythonSimulateException("Keyword argument 'simul_params' must be of type 'dict'. Current type is : '%'" %type(p))
 			props = self.__unlocked_properties__()
-                        for name, val in p.items():				
+                        for name, val in list(p.items()):				
 				if isinstance(val, SimulationParameterContainer):
 					self.__set_properties__(val, p)
 				elif isinstance(val, list):
--- ipkiss24\pysimul\runtime\procedure.py	(original)
+++ ipkiss24\pysimul\runtime\procedure.py	(refactored)
@@ -73,8 +73,8 @@
         LOG.debug("Starting run of FDTDFieldCalculationProcedure...")
         try:
             self.visualize_landscape()
-        except Exception, e:
-            print 'Cannot visualize in FDTDFieldCalculationProcedure. Maybe DISPLAY is not set and you''re working remote? Error:', e
+        except Exception as e:
+            print('Cannot visualize in FDTDFieldCalculationProcedure. Maybe DISPLAY is not set and you''re working remote? Error:', e)
 
         LOG.debug("Initializing the engine...")		
         self.engine.initialise_engine(self.landscape)
@@ -85,7 +85,7 @@
         stop = False		
         stepCount = 1
         if self.interactive_mode:
-            i = raw_input("Press <return> to start the simulation...")
+            i = input("Press <return> to start the simulation...")
         while (not stop):
             self.engine.step()
             self.step_processor.process()
@@ -99,10 +99,10 @@
                         wavelengths = 1000.0 / flx.flux_per_freq[0] 
                         fluxes = flx.flux_per_freq[1]
                         for wl, flux in zip(wavelengths, fluxes):
-                            print 'flux',flxcntr, ': (step', stepCount,  '), ', wl, flux
+                            print('flux',flxcntr, ': (step', stepCount,  '), ', wl, flux)
                         #double enter so gnuplot can interpret this correctly as new data.
-                        print 'flux',flxcntr, ': 'RefactoringTool: Writing converted ipkiss24\pysimul\runtime\procedure.py to ipkissat3\pysimul\runtime\procedure.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\processor.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\processor.py to ipkissat3\pysimul\runtime\processor.py.
RefactoringTool: No changes to ipkiss24\pysimul\runtime\simulate_from_file.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\simulate_from_file.py to ipkissat3\pysimul\runtime\simulate_from_file.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\MeepFDTD\MeepFDTD.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\MeepFDTD\MeepFDTD.py to ipkissat3\pysimul\runtime\MeepFDTD\MeepFDTD.py.
RefactoringTool: No changes to ipkiss24\pysimul\runtime\MeepFDTD\__init__.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\MeepFDTD\__init__.py to ipkissat3\pysimul\runtime\MeepFDTD\__init__.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter.py

-                        print 'flux',flxcntr, ': '
+                        print('flux',flxcntr, ': ')
+                        print('flux',flxcntr, ': ')
                         flxcntr += 1
 
 
@@ -124,7 +124,7 @@
             ds = self.engine.get_material_dataset()
             self.create_visualization(ds, indicate_window = False)	
             PYPLOT.draw()
-            i = raw_input("Press <return> to continue...")
+            i = input("Press <return> to continue...")
             LOG.debug("End of visualization...")
 
     def visualize_landscape(self):
@@ -139,10 +139,10 @@
                 PYPLOT.savefig(self.landscape.simulation_id+"_landscape.png", dpi = 500)
             if self.interactive_mode:		
                 PYPLOT.draw()
-                i = raw_input("Press <return> to continue or '0' to abort...")
+                i = input("Press <return> to continue or '0' to abort...")
                 if (i.find("0")>=0):
                     import sys
-                    print "Exiting..."
+                    print("Exiting...")
                     sys.exit(0)
                 PYPLOT.clf()
                 PYPLOT.cla()			
@@ -158,7 +158,7 @@
                     png_file = filename.replace(".h5",".png")
                     im = Image.open(png_file)
                     im.show()				
-                except Exception, e:
+                except Exception as e:
                     LOG.error("Unexpected error with python-PIL : %s" %str(e))
 
     def __contourf_material_matrix_effective_index__(self, pyplot, simulation_volume, material_array):
--- ipkiss24\pysimul\runtime\processor.py	(original)
+++ ipkiss24\pysimul\runtime\processor.py	(refactored)
@@ -79,11 +79,11 @@
             try:
                 import meep_mpi as Meep
             except:
-                print 'Cannot import meep'
+                print('Cannot import meep')
 
         if isinstance(self.surroundings, Meep.volume):
-            print 'WARNING: Cannot yet pickle surroundings-instance. (meep.vol2d(...).surroundings'
-            print 'This is of type meep.volume; proxy of <Swig Object of type \'meep::volume *\' at 0x31...c0> '
+            print('WARNING: Cannot yet pickle surroundings-instance. (meep.vol2d(...).surroundings')
+            print('This is of type meep.volume; proxy of <Swig Object of type \'meep::volume *\' at 0x31...c0> ')
             #self.surroundings = 'surrounding can not yet be pickled correctly'
             ndict = self.__dict__.copy()
             del ndict['__prop_surroundings__']
@@ -140,7 +140,7 @@
     def __call__(self):
         self.StepsCount = self.StepsCount + 1
         if (self.StepsCount % int (self.maximumSteps / 10.0) == 0):
-            print "The simulation is now at step %i" %self.StepsCount
+            print("The simulation is now at step %i" %self.StepsCount)
         return self.StepsCount >= self.maximumSteps   
 
 
--- ipkiss24\pysimul\runtime\MeepFDTD\MeepFDTD.py	(original)
+++ ipkiss24\pysimul\runtime\MeepFDTD\MeepFDTD.py	(refactored)
@@ -29,10 +29,10 @@
 
 try:
     import meep as Meep
-except ImportError, e:
+except ImportError as e:
     try :
         import meep_mpi as Meep
-    except ImportError, e:
+    except ImportError as e:
         raise ImportError("Modules 'meep' or 'meep_mpi' not found.")    
 
 import h5py
@@ -57,8 +57,8 @@
             self.material_chi3_matrix = transform_material_stack_matrix_in_chi3_matrix(material_matrix)
             self.set_matrix_2D(self.material_chi3_matrix, meep_volume, resolution_factor)
             LOG.debug("Meep node %i -MeepMaterial2D (chi3) object initialized." %int(Meep.my_rank()))
-        except Exception, e:
-            print "Exception in MeepMaterial2D::__init__ : %s" %e	    
+        except Exception as e:
+            print("Exception in MeepMaterial2D::__init__ : %s" %e)	    
             raise e
 
     def __getstate__(self): #for pickle : do not serialize
@@ -164,8 +164,8 @@
                 return factor
             else:
                 return complex(factor)
-        except Exception, e:
-            print "Exception in AmplitudeFactor::complex_vec (%f,%f): %s" %(x,y,e)
+        except Exception as e:
+            print("Exception in AmplitudeFactor::complex_vec (%f,%f): %s" %(x,y,e))
             raise e
 
     def __getstate__(self): #for pickle : do not serialize
@@ -195,7 +195,7 @@
         if self.dim == 2:
             try:
                 self.material = MeepMaterial2DPolygons(landscape.simulation_volume, self.meepVol)
-            except Exception, err:
+            except Exception as err:
                 LOG.error("MeepMaterial2DPolygons gives errors -> using MeepMaterial2DMatrix instead...") 
                 self.material = MeepMaterial2DMatrix(landscape.simulation_volume, self.meepVol)
         else: #dim == 3
@@ -316,13 +316,13 @@
         if isinstance(src, __EMPointSource__):
             vec = self.__make_meep_vec__(src.point)	    
             meep_fields.add_point_source(meepComp, meepSource, vec)
-            print "Point source at point (%f , %f)" %(vec.x(), vec.y())	
+            print("Point source at point (%f , %f)" %(vec.x(), vec.y()))	
         elif isinstance(src, __EMVolumeSource__):
             vec1 = self.__make_meep_vec__(src.south)
             vec2 = self.__make_meep_vec__(src.north)	    
             LOG.debug("Meep node %i -Creating volume for source plane..." %(self.node_nr))	    
             meepSrcVol = Meep.volume(vec1, vec2)
-            print "Meep node %i - source plane between points (%f , %f) and (%f , %f)." %(self.node_nr, vec1.x(), vec1.y(), vec2.x(), vec2.y())	
+            print("Meep node %i - source plane between points (%f , %f) and (%f , %f)." %(self.node_nr, vec1.x(), vec1.y(), vec2.x(), vec2.y()))	
             LOG.debug("Meep node %i -Now adding the volume source to Meep..." %(self.node_nr))
             if isinstance(src, __AmplitudeShapedSource__):
                 ampl = AmplitudeFactor(source = src)
@@ -340,7 +340,7 @@
         LOG.debug("Meep node %i -Creating Meep volume object for the flux plane..." %(self.node_nr))
         vec1 = self.__make_meep_vec__(flx.north)
         vec2 = self.__make_meep_vec__(flx.south)
-        print "Meep node %i : flux plane between points (%f , %f) and (%f , %f) " %(self.node_nr, vec1.x(), vec1.y(), vec2.x(), vec2.y())	
+        print("Meep node %i : flux plane between points (%f , %f) and (%f , %f) " %(self.node_nr, vec1.x(), vec1.y(), vec2.x(), vec2.y()))	
         meepFlxVol = Meep.volume(vec1,vec2)
         center_freq = 1.0 / (float(flx.center_wavelength) / 1000.0)
         pw = ( (float(flx.pulse_width)/1000.0) / (float(flx.center_wavelength)/1000.0) ) * center_freq 	
@@ -404,7 +404,7 @@
         h5FileName = self.generate_material_hdf5()
         f = h5py.File(h5FileName, 'r')
         #check that the dimension of the dataset that we receive match what we expect
-        ds = f.items()[0][1]
+        ds = list(f.items())[0][1]
         if (abs(ds.shape[0] - epsDim[0]) > 1) or (abs(ds.shape[1] - epsDim[1]) > 1) :
             raise PythonSimulateException("MeepSimulationEngine::visualizeDielectric - invalid dimension of HDF5 data. Expected %s and got %s" %(str(tuple(epsDim)), str(ds.shape) ))
         #create a matrix with Material objects that will hold the epsilon
--- ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter.py	(original)
+++ ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter.py	(refactored)
@@ -71,7 +71,7 @@
             for material_stack_id, bitmap_polygon in material_stacks_shapely_polygons: 
                 bitmap_polygons.append(bitmap_polygon)
                 eps_values.append(landscape.simulation_volume.geometry.material_stack_factory[material_stack_id].effective_index_epsilon)	
-            from cPickle import dump
+            from pickle import dump
             file_handle = open(materials_2d_filename, "w")
             dump((bitmap_polygons, eps_values, south_west),file_handle)
             file_handle.close()
@@ -89,7 +89,7 @@
             south_west = landscape.simulation_volume.size_info.south_west	RefactoringTool: Writing converted ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter.py to ipkissat3\pysimul\runtime\MeepFDTD\meep_scripter.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter_runtime.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter_runtime.py to ipkissat3\pysimul\runtime\MeepFDTD\meep_scripter_runtime.py.
RefactoringTool: No changes to ipkiss24\pysimul\runtime\camfr_engine\__init__.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\camfr_engine\__init__.py to ipkissat3\pysimul\runtime\camfr_engine\__init__.py.
RefactoringTool: Refactored ipkiss24\pysimul\runtime\camfr_engine\camfr_engine.py
RefactoringTool: Writing converted ipkiss24\pysimul\runtime\camfr_engine\camfr_engine.py to ipkissat3\pysimul\runtime\camfr_engine\camfr_engine.py.
RefactoringTool: No changes to ipkiss24\pysimul\visualization\__init__.py
RefactoringTool: Writing converted ipkiss24\pysimul\visualization\__init__.py to ipkissat3\pysimul\visualization\__init__.py.
RefactoringTool: Refactored ipkiss24\pysimul\visualization\visualization.py
RefactoringTool: Writing converted ipkiss24\pysimul\visualization\visualization.py to ipkissat3\pysimul\visualization\visualization.py.
RefactoringTool: No changes to ipkiss24\samples\__init__.py
RefactoringTool: Writing converted ipkiss24\samples\__init__.py to ipkissat3\samples\__init__.py.
RefactoringTool: Refactored ipkiss24\samples\ipkiss\__init__.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\__init__.py to ipkissat3\samples\ipkiss\__init__.py.
RefactoringTool: No changes to ipkiss24\samples\ipkiss\array_of_rings.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\array_of_rings.py to ipkissat3\samples\ipkiss\array_of_rings.py.
RefactoringTool: No changes to ipkiss24\samples\ipkiss\boolean_ops_shape.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\boolean_ops_shape.py to ipkissat3\samples\ipkiss\boolean_ops_shape.py.
RefactoringTool: No changes to ipkiss24\samples\ipkiss\elements.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\elements.py to ipkissat3\samples\ipkiss\elements.py.
RefactoringTool: No changes to ipkiss24\samples\ipkiss\importLib.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\importLib.py to ipkissat3\samples\ipkiss\importLib.py.
RefactoringTool: Refactored ipkiss24\samples\ipkiss\logos.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\logos.py to ipkissat3\samples\ipkiss\logos.py.
RefactoringTool: Refactored ipkiss24\samples\ipkiss\references.py

             material_stacks_npy = landscape.simulation_volume.geometry.get_numpy_matrix_representation_of_all_material_stacks()
             n_o_material_stacks = landscape.simulation_volume.geometry.get_number_of_material_stacks_in_store()
-            from cPickle import dump
+            from pickle import dump
             file_handle = open(materials_3d_filename, "w")
             dump((bitmap_polygons, material_stack_ids, south_west, material_stacks_npy, n_o_material_stacks),file_handle)
             file_handle.close()	    	    
@@ -242,7 +242,7 @@
                 self.__script__("ampl = AmplitudeFactorFromFile(config_file = \"%s\")" %file_name)
                 self.__script__("meep.set_AMPL_Callback(ampl.__disown__())")
                 self.__script__("meep_fields.add_volume_source(%s, meepSource%i, meepSrcVol%i, meep.AMPL)" %(meepComp, seq_nr, seq_nr))
-                from cPickle import dump
+                from pickle import dump
                 file_handle = open(file_name, 'w')
                 dump(src.mode_profile, file_handle)
                 file_handle.close()
@@ -316,8 +316,8 @@
         self.interactive_mode = interactive_mode
         try:
             self.visualize_landscape()
-        except Exception, e:
-            print 'Cannot visualize in FDTDFieldCalculationProcedure. Maybe DISPLAY is not set and you''re working remote? Error:', e
+        except Exception as e:
+            print('Cannot visualize in FDTDFieldCalculationProcedure. Maybe DISPLAY is not set and you''re working remote? Error:', e)
         if name_template is None:
             name_template = self.landscape.simulation_volume.name
         script_filename = "meep_"+name_template+".py"
@@ -356,6 +356,6 @@
         self.engine.fini_script(self.landscape, self.__script__, name_template)
         self.__script__(append_script.replace("%name",name_template))
         self.__close_script_file_handle__()
-        print "Meep script generated : %s" %script_filename
-
-
+        print("Meep script generated : %s" %script_filename)
+
+
--- ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter_runtime.py	(original)
+++ ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter_runtime.py	(refactored)
@@ -28,10 +28,10 @@
 
 try:
     import meep as meep
-except ImportError, e:
+except ImportError as e:
     try :
         import meep_mpi as meep
-    except ImportError, e:
+    except ImportError as e:
         raise Exception("Modules 'meep' or 'meep_mpi' not found.")    
 
 
@@ -80,7 +80,7 @@
 
     def __get_config_from_file__(self, file_name):
         file_handle = open(file_name, "r")
-        from cPickle import load
+        from pickle import load
         (bitmap_polygons, eps_values, south_west) = load(file_handle)
         file_handle.close()
         return (bitmap_polygons, eps_values, south_west)
@@ -99,7 +99,7 @@
 
     def __get_config_from_file__(self, file_name):
         file_handle = open(file_name, "r")
-        from cPickle import load	
+        from pickle import load	
         (bitmap_polygons, material_stack_ids, south_west, material_stacks_npy, n_o_material_stacks) = load(file_handle)
         file_handle.close()
         return (bitmap_polygons, material_stack_ids, south_west, material_stacks_npy, n_o_material_stacks)     
@@ -120,7 +120,7 @@
         self.mode_profile = self.__get_config_from_file__(config_file)
 
     def __get_config_from_file__(self, file_name):	
-        from cPickle import load
+        from pickle import load
         file_handle = open(file_name, 'r')
         mode_profile = load(file_handle)
         return mode_profile
@@ -143,6 +143,6 @@
                 return factor
             else:
                 return complex(factor)
-        except Exception, e:
-            print "Exception in AmplitudeFactor::complex_vec (%f,%f): %s" %(x,y,e)
+        except Exception as e:
+            print("Exception in AmplitudeFactor::complex_vec (%f,%f): %s" %(x,y,e))
             raise e
--- ipkiss24\pysimul\runtime\camfr_engine\camfr_engine.py	(original)
+++ ipkiss24\pysimul\runtime\camfr_engine\camfr_engine.py	(refactored)
@@ -31,7 +31,7 @@
 from ipkiss.geometry.vector import *
 try:
     import camfr 
-except ImportError,e:
+except ImportError as e:
     raise PythonSimulateException("Cannot load CAMFR engine:%s"%e.message)
 from ipkiss.plugins.photonics.port.port import OpticalPort
 from pysics.basics import *
@@ -195,7 +195,7 @@
         #the other columns will indicate if there is a difference between that columns in "eps" and the next column
         deltas = numpy.ones_like(eps)
         d = numpy.diff(eps, axis=0)
-        for d_counter in xrange(d.shape[0]):
+        for d_counter in range(d.shape[0]):
             deltas[d_counter+1] = d[d_counter]
         #now identify the slabs and their width
         slabs_specifications = []
--- ipkiss24\pysimul\visualization\visualization.py	(original)
+++ ipkiss24\pysimul\visualization\visualization.py	(refactored)
@@ -68,8 +68,8 @@
         ##legend
         from dependencies.matplotlib_wrapper import font_manager
         prop = font_manager.FontProperties(size=10) 
-        patches_for_legend = [ref[0] for ref in references_for_legend.values()]
-        labels_for_legend = [ref[1] for ref in references_for_legend.values()]
+        patches_for_legend = [ref[0] for ref in list(references_for_legend.values())]
+        labels_for_legend = [ref[1] for ref in list(references_for_legend.values())]
 
         ax.legend(patches_for_legend, labels_for_legend, loc=(0.5,0.9), prop=prop)
 
@@ -100,9 +100,9 @@
             solid_height = geom.material_stack_factory[material_stack_id].solid_height
             if len(shape.points)>0 and solid_height>0:
                 povray_prism = Prism(shape.points, heights= (0, solid_height * z_extrusion_factor), opts = [Texture(Pigment(color=color.capitalize()))])
-                print "Writing prism with %i points for %s (solid height : %f) in %s" %(len(shape.points), geom.material_stack_factory[material_stack_id].name, geom.material_stack_factory[material_stack_id].solid_height, color)
+                print("Writing prism with %i points for %s (solid height : %f) in %s" %(len(shape.points), geom.material_stack_factory[material_stack_id].name, geom.material_stack_factory[material_stack_id].solid_height, color))
                 povray_file.write(povray_prism)
-        print "Povray file generated : ",file_name
+        print("Povray file generated : ",file_name)
 
 
 
--- ipkiss24\samples\ipkiss\__init__.py	(original)
+++ ipkiss24\samples\ipkiss\__init__.py	(refactored)
@@ -19,12 +19,12 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from simple import SimpleExample 
-from shapes_advanced import AdvancedShapesExample 
-from shapes import ShapesExample
-from references import ReferencesExample
-from importLib import ImportLibraryExample
-from elements import ElementsExample
+from .simple import SimpleExample 
+from .shapes_advanced import AdvancedShapesExample 
+from .shapes import ShapesExample
+from .references import ReferencesExample
+from .importLib import ImportLibraryExample
+from .elements import ElementsExample
 
 
 
--- ipkiss24\samples\ipkiss\logos.py	(original)
+++ ipkiss24\samples\ipkiss\logos.py	(refactored)
@@ -60,7 +60,7 @@
         OP = FileOutputGdsii(fileName)
         # Write library
         OP.write(my_lib)
-        print "Done : GDS2 file written to %s" %fileName    
+        print("Done : GDS2 file written to %s" %fileName)    
         #remark : instead of manually creating a Library and exporting it to GDS2, it is also possible to use 
         #the convenient shortcut function "write_gdsii" directly on the Structure, i.e.:
         #layout.write_gdsii("example_logos.gds")        
--- ipkiss24\samples\ipkiss\references.py	(original)
+++ ipkiss24\samples\ipkiss\references.py	(refactored)
@@ -91,7 +91,7 @@
     OP = FileOutputGdsii(fileName, filter = OrthogonalReferenceFilter())
     # Write library
     OP.write(my_lib)
-    print "Done : GDS2 file written to %s" %fileName       RefactoringTool: Writing converted ipkiss24\samples\ipkiss\references.py to ipkissat3\samples\ipkiss\references.py.
RefactoringTool: Refactored ipkiss24\samples\ipkiss\shapes.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\shapes.py to ipkissat3\samples\ipkiss\shapes.py.
RefactoringTool: Refactored ipkiss24\samples\ipkiss\shapes_advanced.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\shapes_advanced.py to ipkissat3\samples\ipkiss\shapes_advanced.py.
RefactoringTool: Refactored ipkiss24\samples\ipkiss\simple.py
RefactoringTool: Writing converted ipkiss24\samples\ipkiss\simple.py to ipkissat3\samples\ipkiss\simple.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\__init__.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\__init__.py to ipkissat3\samples\picazzo\__init__.py.
RefactoringTool: Refactored ipkiss24\samples\picazzo\advanced\__init__.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\__init__.py to ipkissat3\samples\picazzo\advanced\__init__.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\boolean_ops_structure.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\boolean_ops_structure.py to ipkissat3\samples\picazzo\advanced\boolean_ops_structure.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example.py to ipkissat3\samples\picazzo\advanced\example.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example2.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example2.py to ipkissat3\samples\picazzo\advanced\example2.py.
RefactoringTool: Refactored ipkiss24\samples\picazzo\advanced\example3.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example3.py to ipkissat3\samples\picazzo\advanced\example3.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example3_three_port.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example3_three_port.py to ipkissat3\samples\picazzo\advanced\example3_three_port.py.
RefactoringTool: Refactored ipkiss24\samples\picazzo\advanced\example4.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example4.py to ipkissat3\samples\picazzo\advanced\example4.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example4_grating_mmi.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example4_grating_mmi.py to ipkissat3\samples\picazzo\advanced\example4_grating_mmi.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example5.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example5.py to ipkissat3\samples\picazzo\advanced\example5.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example_PhC.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example_PhC.py to ipkissat3\samples\picazzo\advanced\example_PhC.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example_contact_mask.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example_contact_mask.py to ipkissat3\samples\picazzo\advanced\example_contact_mask.py.
RefactoringTool: Refactored ipkiss24\samples\picazzo\advanced\example_process_flows_vfabrication.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example_process_flows_vfabrication.py to ipkissat3\samples\picazzo\advanced\example_process_flows_vfabrication.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example_tapers_extended.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example_tapers_extended.py to ipkissat3\samples\picazzo\advanced\example_tapers_extended.py.
RefactoringTool: Refactored ipkiss24\samples\picazzo\advanced\example_visualization1.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example_visualization1.py to ipkissat3\samples\picazzo\advanced\example_visualization1.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example_window_waveguides.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example_window_waveguides.py to ipkissat3\samples\picazzo\advanced\example_window_waveguides.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\advanced\example_window_waveguides_2.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\advanced\example_window_waveguides_2.py to ipkissat3\samples\picazzo\advanced\example_window_waveguides_2.py.
RefactoringTool: Refactored ipkiss24\samples\picazzo\basic\example_grating_mmi.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\basic\example_grating_mmi.py to ipkissat3\samples\picazzo\basic\example_grating_mmi.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\basic\example_sweep.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\basic\example_sweep.py to ipkissat3\samples\picazzo\basic\example_sweep.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\basic\example_vfabrication.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\basic\example_vfabrication.py to ipkissat3\samples\picazzo\basic\example_vfabrication.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\basic\example_window_waveguides.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\basic\example_window_waveguides.py to ipkissat3\samples\picazzo\basic\example_window_waveguides.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\columns_adapters\_01_basic_column\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\columns_adapters\_01_basic_column\execute.py to ipkissat3\samples\picazzo\columns_adapters\_01_basic_column\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\columns_adapters\_02_column_stacking\example_stacking.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\columns_adapters\_02_column_stacking\example_stacking.py to ipkissat3\samples\picazzo\columns_adapters\_02_column_stacking\example_stacking.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\columns_adapters\_02_column_stacking\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\columns_adapters\_02_column_stacking\execute.py to ipkissat3\samples\picazzo\columns_adapters\_02_column_stacking\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\columns_adapters\_03_column_parameters\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\columns_adapters\_03_column_parameters\execute.py to ipkissat3\samples\picazzo\columns_adapters\_03_column_parameters\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\columns_adapters\_04_advanced_adapters\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\columns_adapters\_04_advanced_adapters\execute.py to ipkissat3\samples\picazzo\columns_adapters\_04_advanced_adapters\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_01_basic\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_01_basic\execute.py to ipkissat3\samples\picazzo\containers\_01_basic\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_02_suppress_ports\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_02_suppress_ports\execute.py to ipkissat3\samples\picazzo\containers\_02_suppress_ports\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_03_extend_ports\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_03_extend_ports\execute.py to ipkissat3\samples\picazzo\containers\_03_extend_ports\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_04_taper_ports\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_04_taper_ports\execute.py to ipkissat3\samples\picazzo\containers\_04_taper_ports\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_05_auto_taper_ports\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_05_auto_taper_ports\execute.py to ipkissat3\samples\picazzo\containers\_05_auto_taper_ports\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_06_fanout\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_06_fanout\execute.py to ipkissat3\samples\picazzo\containers\_06_fanout\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_07_route_ports\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_07_route_ports\execute.py to ipkissat3\samples\picazzo\containers\_07_route_ports\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_08_route_east_west\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_08_route_east_west\execute.py to ipkissat3\samples\picazzo\containers\_08_route_east_west\execute.py.
RefactoringTool: No changes to ipkiss24\samples\picazzo\containers\_09_matrioszka\execute.py
RefactoringTool: Writing converted ipkiss24\samples\picazzo\containers\_09_matrioszka\execute.py to ipkissat3\samples\picazzo\containers\_09_matrioszka\execute.py.
RefactoringTool: No changes to ipkiss24\samples\pysimul\__init__.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\__init__.py to ipkissat3\samples\pysimul\__init__.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\run_persisted_simul.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\run_persisted_simul.py to ipkissat3\samples\pysimul\run_persisted_simul.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\mmi_awg.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\mmi_awg.py to ipkissat3\samples\pysimul\awg_aperture_camfr_and_fdtd\mmi_awg.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\simulate_aperture.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\simulate_aperture.py to ipkissat3\samples\pysimul\awg_aperture_camfr_and_fdtd\simulate_aperture.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\grating_3D_Meep\ComponentSimulator3D.py

+    print("Done : GDS2 file written to %s" %fileName)       
     
     
 
--- ipkiss24\samples\ipkiss\shapes.py	(original)
+++ ipkiss24\samples\ipkiss\shapes.py	(refactored)
@@ -104,7 +104,7 @@
         OP = FileOutputGdsii(fileName)
         # Write library
         OP.write(my_lib)
-        print "Done : GDS2 file written to %s" %fileName    
+        print("Done : GDS2 file written to %s" %fileName)    
         #remark : instead of manually creating a Library and exporting it to GDS2, it is also possible to use 
         #the convenient shortcut function "write_gdsii" directly on the Structure, i.e.:
         #layout.write_gdsii("example_shapes.gds")
--- ipkiss24\samples\ipkiss\shapes_advanced.py	(original)
+++ ipkiss24\samples\ipkiss\shapes_advanced.py	(refactored)
@@ -64,7 +64,7 @@
         OP = FileOutputGdsii(fileName)
         # Write library
         OP.write(my_lib)
-        print "Done : GDS2 file written to %s" %fileName    
+        print("Done : GDS2 file written to %s" %fileName)    
         #remark : instead of manually creating a Library and exporting it to GDS2, it is also possible to use 
         #the convenient shortcut function "write_gdsii" directly on the Structure, i.e.:
         #layout.write_gdsii("example_advshapes.gds")        
--- ipkiss24\samples\ipkiss\simple.py	(original)
+++ ipkiss24\samples\ipkiss\simple.py	(refactored)
@@ -51,7 +51,7 @@
         OP = FileOutputGdsii(fileName)
         # Write library
         OP.write(my_lib)
-        print "Done : GDS2 file written to %s" %fileName       
+        print("Done : GDS2 file written to %s" %fileName)       
         #remark : instead of manually creating a Library and exporting it to GDS2, it is also possible to use 
         #the convenient shortcut function "write_gdsii" directly on the Structure, i.e.:
         #layout.write_gdsii("example_simple.gds")        
--- ipkiss24\samples\picazzo\advanced\__init__.py	(original)
+++ ipkiss24\samples\picazzo\advanced\__init__.py	(refactored)
@@ -19,11 +19,11 @@
 # 
 # Contact: ipkiss@intec.ugent.be
 
-from example import *
-from example2 import *
-from example3 import *
-from example4 import *
+from .example import *
+from .example2 import *
+from .example3 import *
+from .example4 import *
 #from example5 import *
 #from example_awg import *
-from example_tapers_extended import *
-from example_window_waveguides import *
+from .example_tapers_extended import *
+from .example_window_waveguides import *
--- ipkiss24\samples\picazzo\advanced\example3.py	(original)
+++ ipkiss24\samples\picazzo\advanced\example3.py	(refactored)
@@ -24,7 +24,7 @@
 from ipkiss.plugins.photonics.wg.basic import *    # basic waveguides
 from picazzo.io.column import *  # Standard io columns
 
-from example3_three_port import * # our structure
+from .example3_three_port import * # our structure
 
 ######################################
 # add structures to layout
--- ipkiss24\samples\picazzo\advanced\example4.py	(original)
+++ ipkiss24\samples\picazzo\advanced\example4.py	(refactored)
@@ -24,7 +24,7 @@
 from ipkiss.plugins.photonics.wg.basic import *    # basic waveguides
 from picazzo.io.column import *  # Standard io columns
 
-from example4_grating_mmi import * #our structure (in seperate file example4_grating_mmi.py)
+from .example4_grating_mmi import * #our structure (in seperate file example4_grating_mmi.py)
 from picazzo.fibcoup.inverted_taper import *
 from picazzo.io.fibcoup import *
 
--- ipkiss24\samples\picazzo\advanced\example_process_flows_vfabrication.py	(original)
+++ ipkiss24\samples\picazzo\advanced\example_process_flows_vfabrication.py	(refactored)
@@ -137,4 +137,4 @@
 r.visualize_3d_y_crosssection(y_co = 0.0, resolution = 30)
 
 vtk_filename = r.visualize_3d_vtk(resolution = 30)
-print "Generated VTK file : ",vtk_filename 
+print("Generated VTK file : ",vtk_filename) 
--- ipkiss24\samples\picazzo\advanced\example_visualization1.py	(original)
+++ ipkiss24\samples\picazzo\advanced\example_visualization1.py	(refactored)
@@ -20,7 +20,7 @@
 # Contact: ipkiss@intec.ugent.be
 
 from technologies.si_photonics.picazzo.default import *
-from example3_three_port import * # our structure
+from .example3_three_port import * # our structure
 from ipkiss.plugins.vfabrication import *
 
 #Illustrates how to create a 2D- and 3D-visualization of a certain component.
--- ipkiss24\samples\picazzo\basic\example_grating_mmi.py	(original)
+++ ipkiss24\samples\picazzo\basic\example_grating_mmi.py	(refactored)
@@ -94,7 +94,7 @@
         layout = MyDesign(name = "layout")
         layout.write_gdsii("example_grating_mmi.gds")
         layout.visualize_2d()
-        print "Finished !"
+        print("Finished !")
         
         
           
--- ipkiss24\samples\pysimul\run_persisted_simul.py	(original)
+++ ipkiss24\samples\pysimul\run_persisted_simul.py	(refactored)
@@ -22,7 +22,7 @@
 from technologies.si_photonics.picazzo.default import *
 from ipkiss.all import *
 from ipkiss.plugins.simulation import *
-import cPickle
+import pickle
 
 simul_def = SimulationDefinition.load_from_file("mmibuwgp_1_tp.def.pysimul")
 
--- ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\mmi_awg.py	(original)
+++ ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\mmi_awg.py	(refactored)
@@ -208,5 +208,5 @@
         awg.write_gdsii("example_awg_mmi.gds")
         from ipkiss.plugins.vfabrication import *
         awg.visualize_2d()
-        print "Done!"
-        
+        print("Done!")
+        
--- ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\simulate_aperture.py	(original)
+++ ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\simulate_aperture.py	(refactored)
@@ -70,7 +70,7 @@
 #run the simulation and extract the fields at x = -0.01 (in the coordinate system of the original component, see the GDS)
 f = simul_camfr.procedure.run(field_extraction_geometry_x_positions= [-0.01])
 #look in trunk/pysimul_camfr_output for plots of the fields
-print "Done with CAMFR simulation"
+print("Done with CAMFR simulation")
 
 
 
@@ -132,4 +132,4 @@
 name = simul_meep.landscape.simulation_id
 create_animated_gif_from_hdf5(name + "_Hz.h5", name + "_Eps.h5")
 
-print "Done with Meep simulation."
+print("Done with Meep simulation.")
--- ipkiss24\samples\pysimul\grating_3D_Meep\ComponentSimulator3D.py	(original)
+++ ipkiss24\samples\pysimul\grating_3D_Meep\ComponentSimulator3D.py	(refactored)
@@ -25,10 +25,10 @@
 from os import *
 try:
     import meep_mpi as meep
-except ImportError, e:
+except ImportError as e:
     try :
         import meep as meep
-    except ImportError, e:
+    except ImportError as e:
         raise Exception("Modules 'meep' or 'meep_mpi' not found.")   
 
 class ProcedureClass(LowLevelPythonMeepProcedure,StrongPropertyInitializer):
@@ -56,12 +56,12 @@
 
         ## Sources
 
-        print 'Center wavelength:',po.wavelength
-        print 'Bandwidth:',po.pulse_width
+        print('Center wavelength:',po.wavelength)
+        print('Bandwidth:',po.pulse_width)
         center_freq = 1.0 / (float(po.wavelength))
         pulse_width_freq =  (float(po.pulse_width)) / (float(po.wavelength)) * center_freq 	
-        print 'Center frequency:',center_freq
-        print 'Bandwidth:',pulse_width_freq
+        print('Center frequency:',center_freq)
+        print('Bandwidth:',pulse_width_freq)
 
         if (po.pulsed_source):	    
             src = meep.gaussian_src_time(center_freq, pulse_width_freq)
@@ -69,14 +69,14 @@
             src = meep.continuous_src_time(center_freq)
 
         source_port_position = po.input_port.transform_copy(Translation(translation=(po.source_input_port_offset,0))).position
-        print 'wg_center_old:',wg_center
+        print('wg_center_old:',wg_center)
         wg_center = (po.input_port.wg_definition.process.wg_upper_z_coord+
                      po.input_port.wg_definition.process.wg_lower_z_coord)/2.
-        print 'wg_center_new:',wg_center
+        print('wg_center_new:',wg_center)
         c = Coord3(source_port_position[0],RefactoringTool: Writing converted ipkiss24\samples\pysimul\grating_3D_Meep\ComponentSimulator3D.py to ipkissat3\samples\pysimul\grating_3D_Meep\ComponentSimulator3D.py.
RefactoringTool: No changes to ipkiss24\samples\pysimul\grating_3D_Meep\Filters_OL_new.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\grating_3D_Meep\Filters_OL_new.py to ipkissat3\samples\pysimul\grating_3D_Meep\Filters_OL_new.py.
RefactoringTool: No changes to ipkiss24\samples\pysimul\grating_3D_Meep\OL_wg_def.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\grating_3D_Meep\OL_wg_def.py to ipkissat3\samples\pysimul\grating_3D_Meep\OL_wg_def.py.
RefactoringTool: No changes to ipkiss24\samples\pysimul\grating_3D_Meep\Technology.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\grating_3D_Meep\Technology.py to ipkissat3\samples\pysimul\grating_3D_Meep\Technology.py.
RefactoringTool: No changes to ipkiss24\samples\pysimul\grating_3D_Meep\layout.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\grating_3D_Meep\layout.py to ipkissat3\samples\pysimul\grating_3D_Meep\layout.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\grating_3D_Meep\simulation.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\grating_3D_Meep\simulation.py to ipkissat3\samples\pysimul\grating_3D_Meep\simulation.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\mmi_camfr\mmi_camfr.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\mmi_camfr\mmi_camfr.py to ipkissat3\samples\pysimul\mmi_camfr\mmi_camfr.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\mmi_fdtd\mmi_fdtd.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\mmi_fdtd\mmi_fdtd.py to ipkissat3\samples\pysimul\mmi_fdtd\mmi_fdtd.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\pysimul_low_level_python_meep\mmi_low_level_python_meep.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\pysimul_low_level_python_meep\mmi_low_level_python_meep.py to ipkissat3\samples\pysimul\pysimul_low_level_python_meep\mmi_low_level_python_meep.py.
RefactoringTool: Refactored ipkiss24\samples\pysimul\ring_fdtd\ring_fdtd.py
RefactoringTool: Writing converted ipkiss24\samples\pysimul\ring_fdtd\ring_fdtd.py to ipkissat3\samples\pysimul\ring_fdtd\ring_fdtd.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\execute.py

                    source_port_position[1],
                    wg_center)
-        print 'coord:',c
+        print('coord:',c)
         source_position_vec = self.make_meep_vec(c)
 
         fields.add_point_source(meep.Ey, src, source_position_vec)
@@ -125,7 +125,7 @@
         else:
             stop = po.stop_time
 
-        print 'Simulation will run for',stop,'time units'
+        print('Simulation will run for',stop,'time units')
 
         output_files = []
         for oc in po.output_cuts:
@@ -147,16 +147,16 @@
             fields.step()
             i += 1
 
-        print n_o_output,'images outputted'
-        print 'Outputting field images..'
+        print(n_o_output,'images outputted')
+        print('Outputting field images..')
         del output_files[:]
         for oc in po.output_cuts:
             fn = '%s.h5'%oc.filename
             fn_eps = '%s_eps.h5'%oc.filename
             st = 'h5topng -t 0:%d -R -Zc dkbluered -a yarg -A %s %s'%(n_o_output-1,fn_eps,fn)
-            print st
+            print(st)
             system(st)
-        print 'Outputting done!'
+        print('Outputting done!')
 
         #print 'obtaining fluxes:'
         self.flux_data = []
@@ -247,7 +247,7 @@
     def simulate(self):	
 
 
-        print 'begining to simulate'
+        print('begining to simulate')
         simul_params = dict()
         simul_params["resolution"] = self.resolution
         simul_params["engine"] = MeepSimulationEngine(resolution = simul_params["resolution"], use_averaging = False)
--- ipkiss24\samples\pysimul\grating_3D_Meep\simulation.py	(original)
+++ ipkiss24\samples\pysimul\grating_3D_Meep\simulation.py	(refactored)
@@ -68,8 +68,8 @@
 for f in files_to_copy :
     new_file = '%s/%s'%(source_output_directory,f)
     copy_command = 'cp %s %s'%(f,new_file)
-    print 'Executing:'
-    print copy_command
+    print('Executing:')
+    print(copy_command)
     os.system(copy_command)
 
 
@@ -86,7 +86,7 @@
 
 
 
-print 'Reference Simulation'
+print('Reference Simulation')
 
 grating_unit_cell = WgGratingPeriodShallow(length = period,
                                                        wg_definition = wg_def_cavity,
@@ -116,7 +116,7 @@
 reference_component.visualize_2d()
 
 
-print 'Creating reference component simulator'
+print('Creating reference component simulator')
 reference_component_simulator = StructureMeep3DSimulator(component = reference_component,
                                                                 input_port = p_w,
                                                                 output_ports = [p_w,p_e],
@@ -128,7 +128,7 @@
 filename = '%s/reversed_flux'%output_directory
 
 
-print 'Done creating reference component simulator'
+print('Done creating reference component simulator')
 
 
 
@@ -142,7 +142,7 @@
 reference_component_simulator.simulate()
 
 
-print 'Done simulating reference component'
+print('Done simulating reference component')
 
 output_filename = '%s/output.txt'%output_directory
 output_data = []
@@ -164,7 +164,7 @@
 ## with reversed flux
 ## ------------------
 
-print 'Simulating with reversed flux'
+print('Simulating with reversed flux')
 
 
 grating_unit_cell = WgGratingPeriodShallow(length = period,
--- ipkiss24\samples\pysimul\mmi_camfr\mmi_camfr.py	(original)
+++ ipkiss24\samples\pysimul\mmi_camfr\mmi_camfr.py	(refactored)
@@ -82,7 +82,7 @@
 OH2= numpy.zeros(len(x_positions), dtype=numpy.complex)
 
 LOG.debug("Now extracting the fields...")
-for x_pos, i in zip(x_positions, range(len(x_positions))):
+for x_pos, i in zip(x_positions, list(range(len(x_positions)))):
     coord_input = camfr.Coord(x_pos, 0.0, 0.0)
     coord_output = camfr.Coord(x_pos, 0.0, co_east - co_west)
     field_input = camfr_stack.field(coord_input) 
@@ -132,9 +132,9 @@
 PI = trapz(numpy.square(IH2))
 PO= trapz(numpy.square(OH2))
 
-print "Integral over H2 square at input : ", PI
-print "Integral over H2 square at output : ", PO
-print PO / PI * 100.0,"%"
+print("Integral over H2 square at input : ", PI)
+print("Integral over H2 square at output : ", PO)
+print(PO / PI * 100.0,"%")
  
 pyplot.show()
 
--- ipkiss24\samples\pysimul\mmi_fdtd\mmi_fdtd.py	(original)
+++ ipkiss24\samples\pysimul\mmi_fdtd\mmi_fdtd.py	(refactored)
@@ -116,10 +116,10 @@
 file_flux_output_south = open("fluxplane_fluxloweroutput",'r')
 file_flux_input = open("fluxplane_fluxinput",'r')
 #load the files with flux data, which were saved by the post_processor 'PersistFluxplanes' (see above)
-import cPickle
-flux_input = cPickle.load(file_flux_input)
-flux_output_south = cPickle.load(file_flux_output_south)
-flux_output_north = cPickle.load(file_flux_output_north)
+import pickle
+flux_input = pickle.load(file_flux_input)
+flux_output_south = pickle.load(file_flux_output_south)
+flux_output_north = pickle.load(file_flux_output_north)
 file_flux_input.close()
 file_flux_output_south.close()
 file_flux_output_north.close()
--- ipkiss24\samples\pysimul\pysimul_low_level_python_meep\mmi_low_level_python_meep.py	(original)
+++ ipkiss24\samples\pysimul\pysimul_low_level_python_meep\mmi_low_level_python_meep.py	(refactored)
@@ -25,10 +25,10 @@
 
 try:
     import meep as meep
-except ImportError, e:
+except ImportError as e:
     try :
         import meep_mpi as meep
-    except ImportError, e:
+    except ImportError as e:
         raise Exception("Modules 'meep' or 'meep_mpi' not found.")    
 
 
@@ -69,7 +69,7 @@
                                       resolution = simul_params["resolution"],
                                       port = mmi.west_ports[0], 
                                       wavelength = simul_params["center_wavelength"])
-        print mp		
+        print(mp)		
         #create a Gaussian source 
         center_wavelength = simul_params["center_wavelength"]
         pulse_width = 30
--- ipkiss24\samples\pysimul\ring_fdtd\ring_fdtd.py	(original)
+++ ipkiss24\samples\pysimul\ring_fdtd\ring_fdtd.py	(refactored)
@@ -71,14 +71,14 @@
                                             ]
 
 params["step_processor"] = SaveFieldsHDF5Processor(fileName = "RING_Hz.h5", H5OutputIntervalSteps = 1000, field_component = compHz)
-print
-print
-print "*************************************** WARNING **********************************************************************"
-print "***** WARNING : INCREASE THE maximum_steps PARAMETER TO 750000 IN ORDER TO SEE RESONANCE PEAK !!!!!!!! ***************" 
-print "*************************************** WARNING **********************************************************************"
-print
-print
-print
+print()
+print()
+print("*************************************** WARNING **********************************************************************")
+print("***** WARNING : INCREASE THE maximum_steps PARAMETER TO 750000 IN ORDER TO SEE RESONANCE PEAK !!!!!!!! ***************") 
+print("*************************************** WARNING **********************************************************************")
+print()
+print()
+print()
 params["stopcriterium"] = StopAfterSteps(maximum_steps = 10000) #INCREASE TO 750000 IN ORDER TO SEE RESONANCE PEAK !!!!!!!!
 
 params["post_processor"] = PersistFluxplanes()
@@ -86,14 +86,14 @@
 simul = ring.create_simulation(simul_params = params)
 simul.procedure.run(interactive_mode = False)        
 
-print "Done with the simulation. Now plotting the flux..."
+print("Done with the simulation. Now plotting the flux...")
 
-import cPickle
+import pickle
 from dependencies.matplotlib_wrapper import *
 file_flux_output = open("fluxplane_datacollector", 'r')
 
 
-flux_output = cPickle.load(file_flux_output)
+flux_output = pickle.load(file_flux_output)
 file_flux_output.close()
 
 frequencies = 1000.0 / flux_output.flux_per_freq[0] 
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\execute.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\execute.py	(refactored)
@@ -23,12 +23,12 @@
 from ring import RingResonatorRefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_01_structure\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_01_structure\ring.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_02_technology\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_02_technology\ring.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\ring.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\ring.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_05_ports\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_05_ports\ring.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\double_ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\double_ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\double_ring.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\ring.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\double_ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\double_ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_07_routing\double_ring.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_07_routing\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_07_routing\ring.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\double_ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\double_ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\double_ring.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\ring.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\dircoup.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\dircoup.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\dircoup.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\dircoup.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\dircoup.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\dircoup.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\execute.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\ring.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\ring.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\rlmzi.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\rlmzi.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\rlmzi.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\dircoup.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\dircoup.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\dircoup.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\execute.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\mzi.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\mzi.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\mzi.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\dircoup.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\dircoup.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\dircoup.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\execute.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\execute.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\execute.py.
RefactoringTool: No changes to ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\mzi.py
RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\mzi.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\mzi.py.
RefactoringTool: Refactored ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\ring.py

 
 # documentation for your class
-print RingResonator.__doc__
+print(RingResonator.__doc__)
 
 # create a new ringResonator object
 my_ring = RingResonator(ring_radius = 5.0)
 
-print my_ring.name # unique name with prefix
+print(my_ring.name) # unique name with prefix
 
 # change property
 my_ring.ring_wg_width = 0.6
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\ring.py	(refactored)
@@ -54,4 +54,4 @@
 # As this is only contains a library component, we should call it from
 # another file. In this case, it is 'execute.py'
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\execute.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\execute.py	(refactored)
@@ -32,6 +32,6 @@
 # create a new ringResonator object
 my_ring = RingResonator(ring_radius = 5.0)
 
-print my_ring.name # unique name with prefix
+print(my_ring.name) # unique name with prefix
 
 
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\ring.py	(refactored)
@@ -47,4 +47,4 @@
 
 
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\ring.py	(refactored)
@@ -65,4 +65,4 @@
     
     
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\ring.py	(refactored)
@@ -69,4 +69,4 @@
     
     
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\execute.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\execute.py	(refactored)
@@ -28,11 +28,11 @@
 # create a new ringResonator object
 my_ring = RingResonator(ring_radius = 5.0)
 
-print my_ring.ports
-print my_ring.ports.east_ports # ports pointing east
-print my_ring.ports.east_ports.y_sorted() # ports pointing east, sorted south to north
-print my_ring.ports.north_ports # ports pointing north (none)
-print my_ring.ports["E0"] #first port in the list east_ports.y_sorted()
+print(my_ring.ports)
+print(my_ring.ports.east_ports) # ports pointing east
+print(my_ring.ports.east_ports.y_sorted()) # ports pointing east, sorted south to north
+print(my_ring.ports.north_ports) # ports pointing north (none)
+print(my_ring.ports["E0"]) #first port in the list east_ports.y_sorted()
 
 
 
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\ring.py	(refactored)
@@ -74,4 +74,4 @@
     
     
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\execute.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\execute.py	(refactored)
@@ -34,7 +34,7 @@
 
 my_two_rings.write_gdsii("tworings.gds")
 
-print my_two_rings.ports
+print(my_two_rings.ports)
 
 
 
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\ring.py	(refactored)
@@ -69,4 +69,4 @@
     
     
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\execute.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\execute.py	(refactored)
@@ -34,7 +34,7 @@
 
 my_two_rings.write_gdsii("tworings.gds")
 
-print my_two_rings.ports
+print(my_two_rings.ports)
 
 
 
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\ring.py	(refactored)
@@ -69,4 +69,4 @@
     
     
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\execute.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\execute.py	(refactored)
@@ -34,7 +34,7 @@
 
 my_two_rings.write_gdsii("tworings.gds")
 
-print my_two_rings.ports
+print(my_two_rings.ports)
 
 
 
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\ring.py	(refactored)
@@ -83,4 +83,4 @@
     
     
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\dircoup.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\dircoup.py	(refactored)
@@ -123,4 +123,4 @@
     
 
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\dircoup.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\dircoup.py	(refactored)
@@ -123,4 +123,4 @@
     
 
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\ring.py	(refactored)
@@ -69,4 +69,4 @@
     
     
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\dircoup.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\dircoup.py	(refactored)
@@ -123,4 +123,4 @@
     
 
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\dircoup.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\dircoup.py	(refactored)
@@ -123,4 +123,4 @@
     
 
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")
--- ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\ring.py	(original)
+++ ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\ring.py	(refactored)
@@ -69,4 +69,4 @@
     
     
 if __name__ == "__main__":
-    print "This is not the main file. Run 'execute.py' in the same folder"
+    print("This is not the main file. Run 'execute.py' in the same folder")RefactoringTool: Writing converted ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\ring.py to ipkissat3\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\ring.py.
RefactoringTool: No changes to ipkiss24\technologies\__init__.py
RefactoringTool: Writing converted ipkiss24\technologies\__init__.py to ipkissat3\technologies\__init__.py.
RefactoringTool: Refactored ipkiss24\technologies\default_ipkiss\__init__.py
RefactoringTool: Writing converted ipkiss24\technologies\default_ipkiss\__init__.py to ipkissat3\technologies\default_ipkiss\__init__.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\__init__.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\__init__.py to ipkissat3\technologies\si_photonics\__init__.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\ipkiss\__init__.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\ipkiss\__init__.py to ipkissat3\technologies\si_photonics\ipkiss\__init__.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\ipkiss\common.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\ipkiss\common.py to ipkissat3\technologies\si_photonics\ipkiss\common.py.
RefactoringTool: Refactored ipkiss24\technologies\si_photonics\ipkiss\default\__init__.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\ipkiss\default\__init__.py to ipkissat3\technologies\si_photonics\ipkiss\default\__init__.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\ipkiss\default\agnostic.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\ipkiss\default\agnostic.py to ipkissat3\technologies\si_photonics\ipkiss\default\agnostic.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\picazzo\__init__.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\picazzo\__init__.py to ipkissat3\technologies\si_photonics\picazzo\__init__.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\picazzo\common.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\picazzo\common.py to ipkissat3\technologies\si_photonics\picazzo\common.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\picazzo\display_style.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\picazzo\display_style.py to ipkissat3\technologies\si_photonics\picazzo\display_style.py.
RefactoringTool: Refactored ipkiss24\technologies\si_photonics\picazzo\standard_fibcoup.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\picazzo\standard_fibcoup.py to ipkissat3\technologies\si_photonics\picazzo\standard_fibcoup.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\picazzo\wgdef.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\picazzo\wgdef.py to ipkissat3\technologies\si_photonics\picazzo\wgdef.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\picazzo\default\__init__.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\picazzo\default\__init__.py to ipkissat3\technologies\si_photonics\picazzo\default\__init__.py.
RefactoringTool: No changes to ipkiss24\technologies\si_photonics\picazzo\default\agnostic.py
RefactoringTool: Writing converted ipkiss24\technologies\si_photonics\picazzo\default\agnostic.py to ipkissat3\technologies\si_photonics\picazzo\default\agnostic.py.
RefactoringTool: Files that were modified:
RefactoringTool: ipkiss24\dependencies\__init__.py
RefactoringTool: ipkiss24\dependencies\bitarray_wrapper.py
RefactoringTool: ipkiss24\dependencies\caphe_wrapper.py
RefactoringTool: ipkiss24\dependencies\log.py
RefactoringTool: ipkiss24\dependencies\matplotlib_wrapper.py
RefactoringTool: ipkiss24\dependencies\mayavi_wrapper.py
RefactoringTool: ipkiss24\dependencies\meep_wrapper.py
RefactoringTool: ipkiss24\dependencies\pil_wrapper.py
RefactoringTool: ipkiss24\dependencies\povray_wrapper.py
RefactoringTool: ipkiss24\dependencies\shapely_wrapper.py
RefactoringTool: ipkiss24\dependencies\tvtk_wrapper.py
RefactoringTool: ipkiss24\descartes\__init__.py
RefactoringTool: ipkiss24\descartes\patch.py
RefactoringTool: ipkiss24\genericpdk\__init__.py
RefactoringTool: ipkiss24\genericpdk\library\__init__.py
RefactoringTool: ipkiss24\genericpdk\library\fibcoup.py
RefactoringTool: ipkiss24\genericpdk\library\logos.py
RefactoringTool: ipkiss24\genericpdk\library\constants\__init__.py
RefactoringTool: ipkiss24\genericpdk\library\constants\mathematics.py
RefactoringTool: ipkiss24\genericpdk\library\constants\physical.py
RefactoringTool: ipkiss24\genericpdk\library\constants\units.py
RefactoringTool: ipkiss24\genericpdk\library\io\__init__.py
RefactoringTool: ipkiss24\genericpdk\library\io\column.py
RefactoringTool: ipkiss24\genericpdk\library\io\constants.py
RefactoringTool: ipkiss24\genericpdk\materials\__init__.py
RefactoringTool: ipkiss24\genericpdk\materials\materials.py
RefactoringTool: ipkiss24\ipcore\__init__.py
RefactoringTool: ipkiss24\ipcore\all.py
RefactoringTool: ipkiss24\ipcore\helperfunc.py
RefactoringTool: ipkiss24\ipcore\log.py
RefactoringTool: ipkiss24\ipcore\settings.py
RefactoringTool: ipkiss24\ipcore\types_list.py
RefactoringTool: ipkiss24\ipcore\caching\__init__.py
RefactoringTool: ipkiss24\ipcore\caching\cache.py
RefactoringTool: ipkiss24\ipcore\config\__init__.py
RefactoringTool: ipkiss24\ipcore\config\tree.py
RefactoringTool: ipkiss24\ipcore\exceptions\__init__.py
RefactoringTool: ipkiss24\ipcore\exceptions\exc.py
RefactoringTool: ipkiss24\ipcore\mixin\__init__.py
RefactoringTool: ipkiss24\ipcore\mixin\mixin.py
RefactoringTool: ipkiss24\ipcore\properties\__init__.py
RefactoringTool: ipkiss24\ipcore\properties\descriptor.py
RefactoringTool: ipkiss24\ipcore\properties\initializer.py
RefactoringTool: ipkiss24\ipcore\properties\predefined.py
RefactoringTool: ipkiss24\ipcore\properties\processors.py
RefactoringTool: ipkiss24\ipcore\properties\restrictions.py
RefactoringTool: ipkiss24\ipcore\runtime\__init__.py
RefactoringTool: ipkiss24\ipcore\runtime\procedure.py
RefactoringTool: ipkiss24\ipcore\runtime\processor.py
RefactoringTool: ipkiss24\ipkiss\__init__.py
RefactoringTool: ipkiss24\ipkiss\all.py
RefactoringTool: ipkiss24\ipkiss\constants.py
RefactoringTool: ipkiss24\ipkiss\log.py
RefactoringTool: ipkiss24\ipkiss\settings.py
RefactoringTool: ipkiss24\ipkiss\aspects\__init__.py
RefactoringTool: ipkiss24\ipkiss\aspects\aspect.py
RefactoringTool: ipkiss24\ipkiss\aspects\layout\__init__.py
RefactoringTool: ipkiss24\ipkiss\aspects\layout\layout.py
RefactoringTool: ipkiss24\ipkiss\aspects\output\__init__.py
RefactoringTool: ipkiss24\ipkiss\aspects\output\output.py
RefactoringTool: ipkiss24\ipkiss\aspects\port\__init__.py
RefactoringTool: ipkiss24\ipkiss\aspects\port\aspect.py
RefactoringTool: ipkiss24\ipkiss\aspects\port\port.py
RefactoringTool: ipkiss24\ipkiss\aspects\port\port_list.py
RefactoringTool: ipkiss24\ipkiss\boolean_ops\__init__.py
RefactoringTool: ipkiss24\ipkiss\boolean_ops\boolean_ops.py
RefactoringTool: ipkiss24\ipkiss\boolean_ops\boolean_ops_elements.py
RefactoringTool: ipkiss24\ipkiss\boolean_ops\boolean_ops_shapely.py
RefactoringTool: ipkiss24\ipkiss\exceptions\__init__.py
RefactoringTool: ipkiss24\ipkiss\exceptions\exc.py
RefactoringTool: ipkiss24\ipkiss\geometry\__init__.py
RefactoringTool: ipkiss24\ipkiss\geometry\coord.py
RefactoringTool: ipkiss24\ipkiss\geometry\line.py
RefactoringTool: ipkiss24\ipkiss\geometry\shape.py
RefactoringTool: ipkiss24\ipkiss\geometry\shape_cut.py
RefactoringTool: ipkiss24\ipkiss\geometry\shape_info.py
RefactoringTool: ipkiss24\ipkiss\geometry\shape_modifier.py
RefactoringTool: ipkiss24\ipkiss\geometry\shape_modify.py
RefactoringTool: ipkiss24\ipkiss\geometry\size_info.py
RefactoringTool: ipkiss24\ipkiss\geometry\transform.py
RefactoringTool: ipkiss24\ipkiss\geometry\transformable.py
RefactoringTool: ipkiss24\ipkiss\geometry\vector.py
RefactoringTool: ipkiss24\ipkiss\geometry\shapes\__init__.py
RefactoringTool: ipkiss24\ipkiss\geometry\shapes\advanced.py
RefactoringTool: ipkiss24\ipkiss\geometry\shapes\basic.py
RefactoringTool: ipkiss24\ipkiss\geometry\shapes\curves.py
RefactoringTool: ipkiss24\ipkiss\geometry\shapes\modifiers.py
RefactoringTool: ipkiss24\ipkiss\geometry\shapes\spline.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\__init__.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\identity.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\magnification.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\mirror.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\no_distort.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\rotation.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\special.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\stretch.py
RefactoringTool: ipkiss24\ipkiss\geometry\transforms\translation.py
RefactoringTool: ipkiss24\ipkiss\io\__init__.py
RefactoringTool: ipkiss24\ipkiss\io\collector.py
RefactoringTool: ipkiss24\ipkiss\io\file_io.py
RefactoringTool: ipkiss24\ipkiss\io\filetype.py
RefactoringTool: ipkiss24\ipkiss\io\gds_layer.py
RefactoringTool: ipkiss24\ipkiss\io\gds_records.py
RefactoringTool: ipkiss24\ipkiss\io\import_hpgl.py
RefactoringTool: ipkiss24\ipkiss\io\input.py
RefactoringTool: ipkiss24\ipkiss\io\input_gdsii.py
RefactoringTool: ipkiss24\ipkiss\io\output.py
RefactoringTool: ipkiss24\ipkiss\io\output_gdsii.py
RefactoringTool: ipkiss24\ipkiss\io\output_object.py
RefactoringTool: ipkiss24\ipkiss\io\output_xml.py
RefactoringTool: ipkiss24\ipkiss\logos\__init__.py
RefactoringTool: ipkiss24\ipkiss\logos\basic.py
RefactoringTool: ipkiss24\ipkiss\path_definition\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\port\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\port\aspect.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\port\port.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\port\port_list.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\routing\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\routing\basic.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\routing\bundle_connect.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\routing\connect.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\routing\manhattan.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\routing\to_line.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\technology\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\technology\common.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\technology\default\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\technology\default\agnostic.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\wg\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\wg\basic.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\wg\bundle.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\wg\connect.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\wg\definition.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\wg\slotted.py
RefactoringTool: ipkiss24\ipkiss\plugins\photonics\wg\window.py
RefactoringTool: ipkiss24\ipkiss\plugins\simulation\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\simulation\simulation.py
RefactoringTool: ipkiss24\ipkiss\plugins\vfabrication\__init__.py
RefactoringTool: ipkiss24\ipkiss\plugins\vfabrication\elements.py
RefactoringTool: ipkiss24\ipkiss\plugins\vfabrication\geometry.py
RefactoringTool: ipkiss24\ipkiss\plugins\vfabrication\process_flow.py
RefactoringTool: ipkiss24\ipkiss\plugins\vfabrication\vfabrication.py
RefactoringTool: ipkiss24\ipkiss\plugins\vfabrication\visualization.py
RefactoringTool: ipkiss24\ipkiss\primitives\__init__.py
RefactoringTool: ipkiss24\ipkiss\primitives\filter.py
RefactoringTool: ipkiss24\ipkiss\primitives\font.py
RefactoringTool: ipkiss24\ipkiss\primitives\group.py
RefactoringTool: ipkiss24\ipkiss\primitives\layer.py
RefactoringTool: ipkiss24\ipkiss\primitives\library.py
RefactoringTool: ipkiss24\ipkiss\primitives\name_generator.py
RefactoringTool: ipkiss24\ipkiss\primitives\shapes_to_elements.py
RefactoringTool: ipkiss24\ipkiss\primitives\structure.py
RefactoringTool: ipkiss24\ipkiss\primitives\unit_grid.py
RefactoringTool: ipkiss24\ipkiss\primitives\elements\__init__.py
RefactoringTool: ipkiss24\ipkiss\primitives\elements\basic.py
RefactoringTool: ipkiss24\ipkiss\primitives\elements\box.py
RefactoringTool: ipkiss24\ipkiss\primitives\elements\group.py
RefactoringTool: ipkiss24\ipkiss\primitives\elements\reference.py
RefactoringTool: ipkiss24\ipkiss\primitives\elements\shape.py
RefactoringTool: ipkiss24\ipkiss\primitives\elements\text.py
RefactoringTool: ipkiss24\ipkiss\primitives\filters\__init__.py
RefactoringTool: ipkiss24\ipkiss\primitives\filters\boundary_cut_filter.py
RefactoringTool: ipkiss24\ipkiss\primitives\filters\empty_filter.py
RefactoringTool: ipkiss24\ipkiss\primitives\filters\layer_filter.py
RefactoringTool: ipkiss24\ipkiss\primitives\filters\name_scramble_filter.py
RefactoringTool: ipkiss24\ipkiss\primitives\filters\orthogonal_reference_filter.py
RefactoringTool: ipkiss24\ipkiss\primitives\filters\path_cut_filter.py
RefactoringTool: ipkiss24\ipkiss\primitives\filters\path_to_boundary_filter.py
RefactoringTool: ipkiss24\ipkiss\primitives\fonts\__init__.py
RefactoringTool: ipkiss24\ipkiss\primitives\fonts\compact.py
RefactoringTool: ipkiss24\ipkiss\primitives\fonts\simple.py
RefactoringTool: ipkiss24\ipkiss\primitives\fonts\standard.py
RefactoringTool: ipkiss24\ipkiss\process\__init__.py
RefactoringTool: ipkiss24\ipkiss\process\layer.py
RefactoringTool: ipkiss24\ipkiss\process\layer_map.py
RefactoringTool: ipkiss24\ipkiss\technology\__init__.py
RefactoringTool: ipkiss24\ipkiss\technology\rules.py
RefactoringTool: ipkiss24\ipkiss\technology\settings.py
RefactoringTool: ipkiss24\ipkiss\technology\technology.py
RefactoringTool: ipkiss24\ipkiss\visualisation\__init__.py
RefactoringTool: ipkiss24\ipkiss\visualisation\color.py
RefactoringTool: ipkiss24\ipkiss\visualisation\display_style.py
RefactoringTool: ipkiss24\ipkiss\visualisation\layer.py
RefactoringTool: ipkiss24\ipkiss\visualisation\scaler.py
RefactoringTool: ipkiss24\ipkiss\visualisation\show.py
RefactoringTool: ipkiss24\ipkiss\visualisation\stipple.py
RefactoringTool: ipkiss24\ipkiss\visualisation\manager\__init__.py
RefactoringTool: ipkiss24\ipkiss\visualisation\manager\basic.py
RefactoringTool: ipkiss24\ipkiss\visualisation\manager\matplotlib_figure.py
RefactoringTool: ipkiss24\ipkiss\visualisation\manager\tvtk_polydata.py
RefactoringTool: ipkiss24\picazzo\__init__.py
RefactoringTool: ipkiss24\picazzo\builder.py
RefactoringTool: ipkiss24\picazzo\log.py
RefactoringTool: ipkiss24\picazzo\settings.py
RefactoringTool: ipkiss24\picazzo\container\__init__.py
RefactoringTool: ipkiss24\picazzo\container\auto_taper_ports.py
RefactoringTool: ipkiss24\picazzo\container\container.py
RefactoringTool: ipkiss24\picazzo\container\extend_ports.py
RefactoringTool: ipkiss24\picazzo\container\fanout.py
RefactoringTool: ipkiss24\picazzo\container\route_ports.py
RefactoringTool: ipkiss24\picazzo\container\suppress_ports.py
RefactoringTool: ipkiss24\picazzo\container\taper_ports.py
RefactoringTool: ipkiss24\picazzo\fibcoup\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\basic\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\basic\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\cleave\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\cleave\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\curved\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\curved\curved_basic.py
RefactoringTool: ipkiss24\picazzo\fibcoup\curved\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\grating\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\grating\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\inverted_taper\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\inverted_taper\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\line_grating\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\line_grating\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\segmented\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\segmented\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\socket\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\socket\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\socket_2d\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\socket_2d\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\uniform\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\uniform\layout.py
RefactoringTool: ipkiss24\picazzo\fibcoup\uniform_2d\__init__.py
RefactoringTool: ipkiss24\picazzo\fibcoup\uniform_2d\layout.py
RefactoringTool: ipkiss24\picazzo\filters\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\mmi\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\mmi\layout.py
RefactoringTool: ipkiss24\picazzo\filters\mmi_shallow\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\mmi_shallow\layout.py
RefactoringTool: ipkiss24\picazzo\filters\multi_ring\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\multi_ring\layout.py
RefactoringTool: ipkiss24\picazzo\filters\multi_ring\multi_ring_base.py
RefactoringTool: ipkiss24\picazzo\filters\mzi\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\mzi\layout.py
RefactoringTool: ipkiss24\picazzo\filters\parallel_ring\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\parallel_ring\layout.py
RefactoringTool: ipkiss24\picazzo\filters\ring\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\ring\layout.py
RefactoringTool: ipkiss24\picazzo\filters\ring_ccw\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\ring_ccw\layout.py
RefactoringTool: ipkiss24\picazzo\filters\ring_xing\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\ring_xing\layout.py
RefactoringTool: ipkiss24\picazzo\filters\spline_ring\__init__.py
RefactoringTool: ipkiss24\picazzo\filters\spline_ring\layout.py
RefactoringTool: ipkiss24\picazzo\io\__init__.py
RefactoringTool: ipkiss24\picazzo\io\adapter.py
RefactoringTool: ipkiss24\picazzo\io\block.py
RefactoringTool: ipkiss24\picazzo\io\column.py
RefactoringTool: ipkiss24\picazzo\io\block_structure\__init__.py
RefactoringTool: ipkiss24\picazzo\io\block_structure\layout.py
RefactoringTool: ipkiss24\picazzo\io\cleave\__init__.py
RefactoringTool: ipkiss24\picazzo\io\cleave\layout.py
RefactoringTool: ipkiss24\picazzo\io\column_set\__init__.py
RefactoringTool: ipkiss24\picazzo\io\column_set\layout.py
RefactoringTool: ipkiss24\picazzo\io\fibcoup\__init__.py
RefactoringTool: ipkiss24\picazzo\io\fibcoup\layout.py
RefactoringTool: ipkiss24\picazzo\io\fibcoup_2d\__init__.py
RefactoringTool: ipkiss24\picazzo\io\fibcoup_2d\layout.py
RefactoringTool: ipkiss24\picazzo\io\io_array\__init__.py
RefactoringTool: ipkiss24\picazzo\io\io_array\layout.py
RefactoringTool: ipkiss24\picazzo\markers\__init__.py
RefactoringTool: ipkiss24\picazzo\markers\file_marker.py
RefactoringTool: ipkiss24\picazzo\markers\marker.py
RefactoringTool: ipkiss24\picazzo\markers\vernier.py
RefactoringTool: ipkiss24\picazzo\phc\__init__.py
RefactoringTool: ipkiss24\picazzo\phc\hetero.py
RefactoringTool: ipkiss24\picazzo\phc\holes.py
RefactoringTool: ipkiss24\picazzo\phc\layout.py
RefactoringTool: ipkiss24\picazzo\phc\w1.py
RefactoringTool: ipkiss24\picazzo\process\__init__.py
RefactoringTool: ipkiss24\picazzo\slab\__init__.py
RefactoringTool: ipkiss24\picazzo\slab\aperture_mounting.py
RefactoringTool: ipkiss24\picazzo\slab\star_coupler.py
RefactoringTool: ipkiss24\picazzo\tools\__init__.py
RefactoringTool: ipkiss24\picazzo\tools\import_layout.py
RefactoringTool: ipkiss24\picazzo\tools\view_2d.py
RefactoringTool: ipkiss24\picazzo\wg\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\aperture\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\aperture\layout.py
RefactoringTool: ipkiss24\picazzo\wg\aperture_multi\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\aperture_multi\layout.py
RefactoringTool: ipkiss24\picazzo\wg\bend\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\bend\layout.py
RefactoringTool: ipkiss24\picazzo\wg\coupler\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\coupler\layout.py
RefactoringTool: ipkiss24\picazzo\wg\crossing\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\crossing\layout.py
RefactoringTool: ipkiss24\picazzo\wg\grating\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\grating\layout.py
RefactoringTool: ipkiss24\picazzo\wg\sbend\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\sbend\layout.py
RefactoringTool: ipkiss24\picazzo\wg\spiral\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\spiral\layout.py
RefactoringTool: ipkiss24\picazzo\wg\spline_coupler\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\spline_coupler\layout.py
RefactoringTool: ipkiss24\picazzo\wg\splitter_tree\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\splitter_tree\layout.py
RefactoringTool: ipkiss24\picazzo\wg\splitters\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\splitters\layout.py
RefactoringTool: ipkiss24\picazzo\wg\taper\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\taper\layout.py
RefactoringTool: ipkiss24\picazzo\wg\taper_extended\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\taper_extended\layout.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\auto_taper\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\auto_taper\auto_taper.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\auto_taper\auto_taper_db.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\basic\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\basic\layout.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\deep_shallow\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\deep_shallow\layout.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\linear\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\linear\layout.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\parabolic\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\tapers\parabolic\layout.py
RefactoringTool: ipkiss24\picazzo\wg\wgdef\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\wgdef\wgdef.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\slot\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\slot\tapers.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\slot\wgdef.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\thin\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\thin\tapers.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\thin\wgdef.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\wg_fc\__init__.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\wg_fc\tapers.py
RefactoringTool: ipkiss24\picazzo\wg\wgdefs\wg_fc\wgdef.py
RefactoringTool: ipkiss24\pysics\__init__.py
RefactoringTool: ipkiss24\pysics\basics\__init__.py
RefactoringTool: ipkiss24\pysics\basics\domain.py
RefactoringTool: ipkiss24\pysics\basics\environment.py
RefactoringTool: ipkiss24\pysics\basics\field.py
RefactoringTool: ipkiss24\pysics\basics\field_profile.py
RefactoringTool: ipkiss24\pysics\basics\waveguide.py
RefactoringTool: ipkiss24\pysics\basics\geometry\__init__.py
RefactoringTool: ipkiss24\pysics\basics\geometry\geometry.py
RefactoringTool: ipkiss24\pysics\basics\geometry\image.py
RefactoringTool: ipkiss24\pysics\basics\geometry\material_stack.py
RefactoringTool: ipkiss24\pysics\basics\material\__init__.py
RefactoringTool: ipkiss24\pysics\basics\material\material.py
RefactoringTool: ipkiss24\pysics\basics\material\material_stack.py
RefactoringTool: ipkiss24\pysics\electromagnetics\__init__.py
RefactoringTool: ipkiss24\pysics\electromagnetics\environment.py
RefactoringTool: ipkiss24\pysics\electromagnetics\field.py
RefactoringTool: ipkiss24\pysics\electromagnetics\field_profile.py
RefactoringTool: ipkiss24\pysics\electromagnetics\material.py
RefactoringTool: ipkiss24\pysics\materials\__init__.py
RefactoringTool: ipkiss24\pysics\materials\all.py
RefactoringTool: ipkiss24\pysics\materials\electromagnetics.py
RefactoringTool: ipkiss24\pysics\optics\__init__.py
RefactoringTool: ipkiss24\pysics\optics\environment.py
RefactoringTool: ipkiss24\pysics\optics\material.py
RefactoringTool: ipkiss24\pysics\optics\waveguide.py
RefactoringTool: ipkiss24\pysics\thermal\__init__.py
RefactoringTool: ipkiss24\pysics\thermal\environment.py
RefactoringTool: ipkiss24\pysics\thermal\field.py
RefactoringTool: ipkiss24\pysics\visualisation\__init__.py
RefactoringTool: ipkiss24\pysics\visualisation\geometry\__init__.py
RefactoringTool: ipkiss24\pysics\visualisation\geometry\material_stack.py
RefactoringTool: ipkiss24\pysimul\__init__.py
RefactoringTool: ipkiss24\pysimul\exc.py
RefactoringTool: ipkiss24\pysimul\log.py
RefactoringTool: ipkiss24\pysimul\settings.py
RefactoringTool: ipkiss24\pysimul\integration\__init__.py
RefactoringTool: ipkiss24\pysimul\integration\camfr_integration.py
RefactoringTool: ipkiss24\pysimul\integration\component_integration.py
RefactoringTool: ipkiss24\pysimul\runtime\__init__.py
RefactoringTool: ipkiss24\pysimul\runtime\animation.py
RefactoringTool: ipkiss24\pysimul\runtime\basic.py
RefactoringTool: ipkiss24\pysimul\runtime\definition.py
RefactoringTool: ipkiss24\pysimul\runtime\engine.py
RefactoringTool: ipkiss24\pysimul\runtime\params.py
RefactoringTool: ipkiss24\pysimul\runtime\procedure.py
RefactoringTool: ipkiss24\pysimul\runtime\processor.py
RefactoringTool: ipkiss24\pysimul\runtime\simulate_from_file.py
RefactoringTool: ipkiss24\pysimul\runtime\MeepFDTD\MeepFDTD.py
RefactoringTool: ipkiss24\pysimul\runtime\MeepFDTD\__init__.py
RefactoringTool: ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter.py
RefactoringTool: ipkiss24\pysimul\runtime\MeepFDTD\meep_scripter_runtime.py
RefactoringTool: ipkiss24\pysimul\runtime\camfr_engine\__init__.py
RefactoringTool: ipkiss24\pysimul\runtime\camfr_engine\camfr_engine.py
RefactoringTool: ipkiss24\pysimul\visualization\__init__.py
RefactoringTool: ipkiss24\pysimul\visualization\visualization.py
RefactoringTool: ipkiss24\samples\__init__.py
RefactoringTool: ipkiss24\samples\ipkiss\__init__.py
RefactoringTool: ipkiss24\samples\ipkiss\array_of_rings.py
RefactoringTool: ipkiss24\samples\ipkiss\boolean_ops_shape.py
RefactoringTool: ipkiss24\samples\ipkiss\elements.py
RefactoringTool: ipkiss24\samples\ipkiss\importLib.py
RefactoringTool: ipkiss24\samples\ipkiss\logos.py
RefactoringTool: ipkiss24\samples\ipkiss\references.py
RefactoringTool: ipkiss24\samples\ipkiss\shapes.py
RefactoringTool: ipkiss24\samples\ipkiss\shapes_advanced.py
RefactoringTool: ipkiss24\samples\ipkiss\simple.py
RefactoringTool: ipkiss24\samples\picazzo\__init__.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\__init__.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\boolean_ops_structure.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example2.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example3.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example3_three_port.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example4.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example4_grating_mmi.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example5.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example_PhC.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example_contact_mask.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example_process_flows_vfabrication.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example_tapers_extended.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example_visualization1.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example_window_waveguides.py
RefactoringTool: ipkiss24\samples\picazzo\advanced\example_window_waveguides_2.py
RefactoringTool: ipkiss24\samples\picazzo\basic\example_grating_mmi.py
RefactoringTool: ipkiss24\samples\picazzo\basic\example_sweep.py
RefactoringTool: ipkiss24\samples\picazzo\basic\example_vfabrication.py
RefactoringTool: ipkiss24\samples\picazzo\basic\example_window_waveguides.py
RefactoringTool: ipkiss24\samples\picazzo\columns_adapters\_01_basic_column\execute.py
RefactoringTool: ipkiss24\samples\picazzo\columns_adapters\_02_column_stacking\example_stacking.py
RefactoringTool: ipkiss24\samples\picazzo\columns_adapters\_02_column_stacking\execute.py
RefactoringTool: ipkiss24\samples\picazzo\columns_adapters\_03_column_parameters\execute.py
RefactoringTool: ipkiss24\samples\picazzo\columns_adapters\_04_advanced_adapters\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_01_basic\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_02_suppress_ports\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_03_extend_ports\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_04_taper_ports\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_05_auto_taper_ports\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_06_fanout\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_07_route_ports\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_08_route_east_west\execute.py
RefactoringTool: ipkiss24\samples\picazzo\containers\_09_matrioszka\execute.py
RefactoringTool: ipkiss24\samples\pysimul\__init__.py
RefactoringTool: ipkiss24\samples\pysimul\run_persisted_simul.py
RefactoringTool: ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\mmi_awg.py
RefactoringTool: ipkiss24\samples\pysimul\awg_aperture_camfr_and_fdtd\simulate_aperture.py
RefactoringTool: ipkiss24\samples\pysimul\grating_3D_Meep\ComponentSimulator3D.py
RefactoringTool: ipkiss24\samples\pysimul\grating_3D_Meep\Filters_OL_new.py
RefactoringTool: ipkiss24\samples\pysimul\grating_3D_Meep\OL_wg_def.py
RefactoringTool: ipkiss24\samples\pysimul\grating_3D_Meep\Technology.py
RefactoringTool: ipkiss24\samples\pysimul\grating_3D_Meep\layout.py
RefactoringTool: ipkiss24\samples\pysimul\grating_3D_Meep\simulation.py
RefactoringTool: ipkiss24\samples\pysimul\mmi_camfr\mmi_camfr.py
RefactoringTool: ipkiss24\samples\pysimul\mmi_fdtd\mmi_fdtd.py
RefactoringTool: ipkiss24\samples\pysimul\pysimul_low_level_python_meep\mmi_low_level_python_meep.py
RefactoringTool: ipkiss24\samples\pysimul\ring_fdtd\ring_fdtd.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_01_structure\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_02_technology\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_03_simple_layout\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_04_waveguide_definitions\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_05_ports\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\double_ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_06_hierarchy\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\double_ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_07_routing\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\double_ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_08_inheritance\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\dircoup.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_09_more_routing\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\dircoup.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\ring.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_10_rlmzi\rlmzi.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\dircoup.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_11_generic_mzi\mzi.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\dircoup.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\execute.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\mzi.py
RefactoringTool: ipkiss24\samples\tutorial_rlmzi\module_01_layout\_12_rlmzi_redone\ring.py
RefactoringTool: ipkiss24\technologies\__init__.py
RefactoringTool: ipkiss24\technologies\default_ipkiss\__init__.py
RefactoringTool: ipkiss24\technologies\si_photonics\__init__.py
RefactoringTool: ipkiss24\technologies\si_photonics\ipkiss\__init__.py
RefactoringTool: ipkiss24\technologies\si_photonics\ipkiss\common.py
RefactoringTool: ipkiss24\technologies\si_photonics\ipkiss\default\__init__.py
RefactoringTool: ipkiss24\technologies\si_photonics\ipkiss\default\agnostic.py
RefactoringTool: ipkiss24\technologies\si_photonics\picazzo\__init__.py
RefactoringTool: ipkiss24\technologies\si_photonics\picazzo\common.py
RefactoringTool: ipkiss24\technologies\si_photonics\picazzo\display_style.py
RefactoringTool: ipkiss24\technologies\si_photonics\picazzo\standard_fibcoup.py
RefactoringTool: ipkiss24\technologies\si_photonics\picazzo\wgdef.py
RefactoringTool: ipkiss24\technologies\si_photonics\picazzo\default\__init__.py
RefactoringTool: ipkiss24\technologies\si_photonics\picazzo\default\agnostic.py
RefactoringTool: Warnings/messages while refactoring:
RefactoringTool: ### In file ipkiss24\ipkiss\geometry\shape.py ###
RefactoringTool: Line 417: You should use 'operator.mul(sample, dists > 0, axis=0)' here.
RefactoringTool: Line 594: You should use 'operator.mul(self.points, times, 0)' here.
RefactoringTool: Line 599: You should use 'operator.mul(self.points, times, 0)' here.

--- ipkiss24\technologies\default_ipkiss\__init__.py	(original)
+++ ipkiss24\technologies\default_ipkiss\__init__.py	(refactored)
@@ -62,14 +62,14 @@
         from ipkiss.io.gds_layer import AutoGdsiiLayerOutputMap
                 
         #if not hasattr(self, "EXPORT_LAYER_MAP"):
-        if not "EXPORT_LAYER_MAP"  in self.keys():
+        if not "EXPORT_LAYER_MAP"  in list(self.keys()):
             self.EXPORT_LAYER_MAP = AutoGdsiiLayerOutputMap()
             self.overwrite_allowed.append('EXPORT_LAYER_MAP')
-        if not "IMPORT_LAYER_MAP"  in self.keys():
+        if not "IMPORT_LAYER_MAP"  in list(self.keys()):
             self.IMPORT_LAYER_MAP = AutoGdsiiLayerInputMap()
             self.overwrite_allowed.append('IMPORT_LAYER_MAP')
 
-        if not "FILTER" in self.keys():
+        if not "FILTER" in list(self.keys()):
             from ipkiss.primitives.filters.path_cut_filter import PathCutFilter
             from ipkiss.primitives.filters.empty_filter import EmptyFilter
             from ipkiss.primitives.filters.path_to_boundary_filter import PathToBoundaryFilter
--- ipkiss24\technologies\si_photonics\ipkiss\default\__init__.py	(original)
+++ ipkiss24\technologies\si_photonics\ipkiss\default\__init__.py	(refactored)
@@ -37,7 +37,7 @@
 TECH.METRICS.ANGLE_STEP = 1.0
 
 from ..common import *
-from agnostic import *
+from .agnostic import *
 
 #activate the "ports" mixin
 import ipkiss.plugins.photonics.port.aspect 
--- ipkiss24\technologies\si_photonics\picazzo\standard_fibcoup.py	(original)
+++ ipkiss24\technologies\si_photonics\picazzo\standard_fibcoup.py	(refactored)
@@ -94,7 +94,7 @@
         
         try:
             self.DEFAULT_2D_GRATING = STANDARD_2DGRATING_1550_TE()
-        except Exception, exc:
+        except Exception as exc:
             LOG.warn("TECH.IO.FIBCOUP.DEFAULT_2D_GRATING will not be set : "+str(exc))
         
 TECH.IO.FIBCOUP = TechFibcoupTree()
